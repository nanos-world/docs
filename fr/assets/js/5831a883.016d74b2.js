"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[1592],{2615:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"core-concepts/scripting/classes-guide","title":"Guide des classes","description":"All you need to know about Classes","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/core-concepts/scripting/classes-guide.md","sourceDirName":"core-concepts/scripting","slug":"/core-concepts/scripting/classes-guide","permalink":"/fr/docs/next/core-concepts/scripting/classes-guide","draft":false,"unlisted":false,"editUrl":"https://crowdin.com/project/nanos-world-docs/fr","tags":[{"inline":true,"label":"scripting","permalink":"/fr/docs/next/tags/scripting"}],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"sidebarPosition":0,"frontMatter":{"title":"Guide des classes","description":"All you need to know about Classes","sidebar_position":0,"tags":["scripting"]},"sidebar":"main","previous":{"title":"Compatibility Versions","permalink":"/fr/docs/next/core-concepts/packages/compatibility-versions"},"next":{"title":"Events Guide","permalink":"/fr/docs/next/core-concepts/scripting/events-guide"}}');var i=a(74848),r=a(28453),o=a(3970);const s={title:"Guide des classes",description:"All you need to know about Classes",sidebar_position:0,tags:["scripting"]},l=void 0,c={},p=[{value:"Classes",id:"classes",level:2},{value:"Classes de base",id:"classes-de-base",level:3},{value:"Apparition d&#39;Entit\xe9s",id:"apparition-dentit\xe9s",level:3},{value:"Destruction d&#39;Entit\xe9s",id:"destruction-dentit\xe9s",level:3},{value:"Classes statiques",id:"classes-statiques",level:2},{value:"Classes utilitaires",id:"classes-utilitaires",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components},{EventReference:a,MethodReference:n}=t;return o.xn||m("Classes",!1),o.xn.Actor||m("Classes.Actor",!0),o.xn.Character||m("Classes.Character",!0),o.xn.Prop||m("Classes.Prop",!0),a||m("EventReference",!0),n||m("MethodReference",!0),o.bl||m("StaticClasses",!1),o.bl.Sky||m("StaticClasses.Sky",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"All you need to know about Classes"}),"\n",(0,i.jsxs)(t.p,{children:["All entities in nanos world are represented by a Class. In Lua, classes are represented by ",(0,i.jsx)(t.a,{href:"/fr/docs/next/scripting-reference/glossary/basic-types#table",children:"tables"}),". That means that every interaction with entities (Players, Characters, Props, etc) are made with Classes/tables methods following an ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Object-oriented_programming",children:"OOP (Object-oriented programming"})," pattern). In this page we will explain more about that."]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["In nanos world we have 3 types of Classes (or structures): ",(0,i.jsx)(t.code,{children:"Classes"}),", ",(0,i.jsx)(t.code,{children:"Static Classes"})," and ",(0,i.jsx)(t.code,{children:"Utility Classes"}),"."]})}),"\n",(0,i.jsx)(t.h2,{id:"classes",children:"Classes"}),"\n",(0,i.jsxs)(t.p,{children:["If you read our ",(0,i.jsx)(t.a,{href:"/fr/docs/next/getting-started/quick-start",children:"Quick Start"})," guide, you noticed we were spawning entities in the following format:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",metastring:"showLineNumbers",children:"-- Fait appara\xeetre une entit\xe9 avec un constructeur\nlocal mon_entite = Entity()\n\n-- Interagir avec l'entit\xe9 avec ses m\xe9thodes\nmon_entite:MaFonction()\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["Access to ",(0,i.jsx)(t.strong,{children:"Entities / Spawned Objects"})," ",(0,i.jsx)(t.strong,{children:"Methods"})," are made with ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:":"})}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["This is how ",(0,i.jsx)(t.strong,{children:"OOP"})," works! You create objects and call functions/catch events on that object. Unlike other scripting games which have tons of global functions and events to interact with entities, nanos world scripting is a ",(0,i.jsx)(t.strong,{children:"modern approach"})," to ",(0,i.jsx)(t.strong,{children:"modern programming"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"classes-de-base",children:"Classes de base"}),"\n",(0,i.jsxs)(t.p,{children:["Under the hood, nanos world Classes follow an ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Inheritance_%28object-oriented_programming%29",children:"Inheritance Pattern"}),', which means we have base parent classes, and it\'s children which "inherits" all functions, events and properties from them. You will notice that all Classes that can be spawned in the world are ',(0,i.jsx)(o.xn.Actor,{}),", for example in ",(0,i.jsx)(o.xn.Character,{})," and ",(0,i.jsx)(o.xn.Prop,{})," it is possible to call the function: ",(0,i.jsx)(n,{type:"Class",class_name:"Actor",method:"SetLocation",is_base:!0}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(o.xn.Actor,{})," is a very important class in nanos world. It contains the most of methods which are shared through all Classes we have, and also ",(0,i.jsx)(t.strong,{children:"Static Methods"})," to get and retrieve entities directly."]})}),"\n",(0,i.jsx)(t.h3,{id:"apparition-dentit\xe9s",children:"Apparition d'Entit\xe9s"}),"\n",(0,i.jsx)(t.p,{children:"Spawning entities in nanos world is extremely easy and straightforward, let's say we want to spawn a Character:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",metastring:'title="Server/Index.lua"',children:"local mon_personnage = Character()\n"})}),"\n",(0,i.jsxs)(t.admonition,{type:"tip",children:[(0,i.jsxs)(t.p,{children:["Each Class will contain it's own ",(0,i.jsx)(t.strong,{children:"Constructor"}),", ",(0,i.jsx)(t.strong,{children:"Properties"}),", ",(0,i.jsx)(t.strong,{children:"Methods"})," and ",(0,i.jsx)(t.strong,{children:"Events"}),"."]}),(0,i.jsxs)(t.p,{children:["Check all Classes that nanos world provides in the sidebar ",(0,i.jsx)(t.strong,{children:"SCRIPTING REFERENCE -> Classes"})," item."]})]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["Keep in mind that some Classes can only be spawned in the ",(0,i.jsx)(t.strong,{children:"Server"}),", others can only be spawned in the ",(0,i.jsx)(t.strong,{children:"Client"}),"."]})}),"\n",(0,i.jsx)(t.h3,{id:"destruction-dentit\xe9s",children:"Destruction d'Entit\xe9s"}),"\n",(0,i.jsxs)(t.p,{children:["All classes (but Player) allow you to destroy them with the method ",(0,i.jsx)(n,{type:"Class",class_name:"Entity",method:"Destroy",is_base:!0}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",metastring:'title="Server/Index.lua"',children:"mon_personnage:Destroy()\n"})}),"\n",(0,i.jsxs)(t.admonition,{type:"info",children:[(0,i.jsxs)(t.p,{children:["Destroying an Entity will trigger the event ",(0,i.jsx)(a,{type:"Class",class_name:"Entity",event:"Destroy",is_base:!0})," and also will automatically detach all attached entities it had attached with ",(0,i.jsx)(n,{type:"Class",class_name:"Actor",method:"AttachTo",is_base:!0}),"\xb9."]}),(0,i.jsxs)(t.p,{children:["\xb9",(0,i.jsxs)(t.em,{children:["If you attached entities with ",(0,i.jsx)(t.code,{children:"lifespan_when_detached"})," parameter other than ",(0,i.jsx)(t.code,{children:"-1"}),", all attached entities will be destroyed as well \ud83d\ude09"]}),"."]})]}),"\n",(0,i.jsx)(t.h2,{id:"classes-statiques",children:"Classes statiques"}),"\n",(0,i.jsxs)(t.p,{children:["Static Classes in nanos world are Classes which you cannot Spawn. Instead you can use it's methods directly with ",(0,i.jsx)(t.code,{children:"."}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["For example, if you want to interact with Sun/Sky/Weather, you will need the ",(0,i.jsx)(o.bl.Sky,{})," Static Class:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",metastring:'title="Client/Index.lua"',children:"-- Makes it 9:25 AM\nSky.SetTimeOfDay(9, 25)\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["Access to ",(0,i.jsx)(t.strong,{children:"Static Classes / Static Methods"})," are made with ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"."})}),"."]})}),"\n",(0,i.jsx)(t.h2,{id:"classes-utilitaires",children:"Classes utilitaires"}),"\n",(0,i.jsxs)(t.p,{children:["Besides Classes and Static Classes, we have the ",(0,i.jsx)(t.strong,{children:"Utility Classes"}),"! Those are mostly structs used in nanos world API such as Vector, Rotator, Color, JSON and some others."]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["All Utility Classes are Open Sourced at ",(0,i.jsx)(t.a,{href:"https://github.com/nanos-world/nanos-world-lua-lib",children:"https://github.com/nanos-world/nanos-world-lua-lib"}),". Feel free to push merge requests and suggest changes!"]})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function m(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},3970:(e,t,a)=>{a.d(t,{I4:()=>S,Xr:()=>T,bl:()=>P,dA:()=>k,e4:()=>x,fX:()=>b,hB:()=>c,ho:()=>C,so:()=>p,u3:()=>w,xn:()=>A});a(96540);var n=a(54625),i=a(96822),r=(a(33350),a(18091),a(78154)),o=a(54735),s=a(26474),l=a(74848);const c=({title:e,description:t,href:a,image_src:i,is_lean:r})=>(0,l.jsxs)(n.N_,{className:"card-link "+(r?"card-link-lean":""),to:a.startsWith("http")?a:`${(0,o.g5)()}/${a}`,children:[(0,l.jsx)("img",{src:i||"/img/docs/nanos-world-background.webp"}),(0,l.jsx)("h4",{children:e}),(0,l.jsx)("p",{children:t})]}),p=({children:e,href:t})=>(0,l.jsxs)(n.N_,{className:"reference-link",to:t.startsWith("http")?t:`${(0,o.g5)()}/${t}`,children:[e,(0,l.jsx)("span",{children:t.split("#")[0]})]}),d=(e,t,a)=>(0,l.jsx)(i.Ay,{maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.hO,{img:e,title:t,description:a,subtitle:"Nativity"}),children:(0,l.jsx)("span",{className:"native-type",children:(0,l.jsx)("img",{src:e,title:t})})}),h=(e,t,a)=>(0,l.jsx)(i.Ay,{maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.hO,{img:e,title:t,description:a,subtitle:"Authority Side"}),children:(0,l.jsx)(n.N_,{className:"authority-availability",to:`${(0,o.g5)()}/core-concepts/scripting/authority-concepts#methods-and-events-availability`,children:(0,l.jsx)("img",{src:e,title:t})})}),m=(e,t)=>(0,l.jsx)(i.Ay,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("h3",{className:"tooltip-header",children:[(0,l.jsx)("img",{src:"/img/scripting/lua.webp",title:"Lua",className:"tooltip-img"}),(0,l.jsxs)("span",{className:"tooltip-span",children:[(0,l.jsx)("div",{children:e}),(0,l.jsx)("div",{className:"tooltip-sub",children:"Basic Type"})]})]}),(0,l.jsx)("span",{dangerouslySetInnerHTML:{__html:t}})]}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/scripting-reference/glossary/basic-types#${e.toLowerCase()}`,children:e})}),u=(e,t,a)=>(0,l.jsx)(i.Ay,{maxWidth:300,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.WN,{class_name:e,emoji:t,append_title:"Struct",description:s.A.BleedingEdge.Struct[e]?s.A.BleedingEdge.Struct[e].description:"Struct not found. Soon\u2122."}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/scripting-reference/structs/${a||e.toLowerCase()}`,className:"hover-link",children:e})}),y=(e,t)=>(0,l.jsx)(i.Ay,{maxWidth:300,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.WN,{class_name:e,emoji:"\ud83d\udca1",append_title:"Utility Class",description:s.A.BleedingEdge.UtilityClass[e]?s.A.BleedingEdge.UtilityClass[e].description:"Utility Class not found. Soon\u2122."}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/scripting-reference/utility-libraries/${t||e.toLowerCase()}`,className:"hover-link",children:(0,l.jsx)("b",{children:e})})}),f=(e,t,a=e,c=null,p=!1)=>(0,l.jsx)(i.Ay,{interactive:p,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.WN,{class_name:a,emoji:t,append_title:p?"Base Class":"Class",description:s.A.BleedingEdge.Class[e]?s.A.BleedingEdge.Class[e].description:"Class not found. Soon\u2122.",inheritance_children:s.A.BleedingEdge.Class[e]?s.A.BleedingEdge.Class[e].inheritance_children:nil}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/scripting-reference/classes/${c||a.toLowerCase()}`,className:"hover-link",children:(0,l.jsx)("b",{children:a})})}),g=(e,t,a)=>(0,l.jsx)(i.Ay,{maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.WN,{class_name:e,emoji:t,append_title:"Static Class",description:s.A.BleedingEdge.StaticClass[e]?s.A.BleedingEdge.StaticClass[e].description:"Static Class not found. Soon\u2122."}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/scripting-reference/static-classes/${a||e.toLowerCase()}`,className:"hover-link",children:(0,l.jsx)("b",{children:e})})}),b=({children:e,short:t})=>(0,l.jsx)(i.Ay,{interactive:!0,maxWidth:600,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.r4,{enum_name:e,enum_data:s.A.BleedingEdge.Enums[e]}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/scripting-reference/glossary/enums#${e.toLowerCase()}`,className:"hover-link",children:t?e.replace(/([A-Z])/g," $1").trim():e})}),v=(e,t,a)=>(0,l.jsx)(i.Ay,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.zc,{label:t,description:a,subtitle:"Asset Path Reference (string)"}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/core-concepts/assets#referencing-assets-in-scripting`,className:"hover-link",children:t})}),_=(e,t,a)=>(0,l.jsx)(i.Ay,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.zc,{label:t,description:a,subtitle:"File Path Reference (string)"}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/scripting-reference/glossary/basic-types#specialpath`,className:"hover-link",children:t})}),S={AuthorityOnly:()=>h("/img/scripting/authority-only.svg","Authority Only","This can be only called on the side it was spawned on!"),ServerOnly:()=>h("/img/scripting/server-only.svg","Server Only","This can be only called on <strong>Server</strong> side!"),ClientOnly:()=>h("/img/scripting/client-only.svg","Client Only","This can be only called on <strong>Client</strong> side!"),Both:()=>h("/img/scripting/both.svg","Both Sides","This can be called on any side (<strong>Server</strong> or <strong>Client</strong>)!"),BothNetAuthorityFirst:()=>h("/img/scripting/both-net-auth-first.svg","Both Sides (Net. Authority First)","This can be called on any side (<strong>Server</strong> or <strong>Client</strong>)! But if this event comes from a client action, it will be called on the client side first if the Local Player has <strong>Network Authority</strong>!"),NetworkAuthority:()=>h("/img/scripting/network-authority.svg","Network Authority","This can be called on <strong>Server</strong> and on <strong>Client's</strong> current Network Authority of this entity!<br/><br/><strong>TIP</strong>: You can validate if the current Local Player has Network Authority on this entity by calling <code>entity:HasNetworkAuthority()</code>.")},w={Native:()=>d("/img/scripting/native.svg","Native Function","This is a native and built-in function from Lua."),NotNative:()=>d("/img/scripting/not-native.svg","Custom Function","This is a custom function added to the native lua library!")},k={Number:()=>m("number","The number type represents real (double-precision floating-point) numbers."),Integer:()=>m("integer","Whole numbers without any fractional parts."),Float:()=>m("float","Floating-point type with decimal points."),String:()=>m("string","Strings have the usual meaning: a sequence of characters."),Boolean:()=>m("boolean","The boolean type has two values, false and true, which represent the traditional boolean values."),Table:()=>m("table","The table type implements associative arrays."),Iterator:()=>m("iterator","Iterator allows you to traverse elements of a table with <code>for k, v in ipairs()</code>."),Any:()=>m("any","We use any here in the Docs to represent that any Type can be used."),Function:()=>m("function","Function type."),Nil:()=>m("nil","Nil is a type with a single value, nil, whose main property is to be different from any other value."),VarArgs:()=>m("varargs","Variadic list of values.")},C={Vector:()=>u("Vector","\ud83d\udcd0"),Rotator:()=>u("Rotator","\ud83e\udded"),Color:()=>u("Color","\ud83c\udfa8"),Quat:()=>u("Quat","\ud83d\udd22"),Vector2D:()=>u("Vector2D","\ud83d\udccf")},T={JSON:()=>y("JSON"),TOML:()=>y("TOML"),NanosMath:()=>y("NanosMath"),NanosTable:()=>y("NanosTable"),NanosUtils:()=>y("NanosUtils")},A={Entity:()=>f("Entity","\ud83e\udde9","Base Entity","base-classes/entity",!0),Actor:()=>f("Actor","\ud83c\udfad","Base Actor","base-classes/actor",!0),Paintable:()=>f("Paintable","\ud83c\udfa8","Base Paintable","base-classes/paintable",!0),Damageable:()=>f("Damageable","\ud83e\ude7c","Base Damageable","base-classes/damageable",!0),Pickable:()=>f("Pickable","\u2694\ufe0f","Base Pickable","base-classes/pickable",!0),Vehicle:()=>f("Vehicle","\ud83d\udede","Base Vehicle","base-classes/vehicle",!0),Pawn:()=>f("Pawn","\u265f\ufe0f","Base Pawn","base-classes/pawn",!0),Billboard:()=>f("Billboard","\ud83e\udea7"),Blueprint:()=>f("Blueprint","\ud83d\udd23"),Cable:()=>f("Cable","\u26d3\ufe0f"),Canvas:()=>f("Canvas","\ud83d\uddbc\ufe0f"),Character:()=>f("Character","\ud83e\uddd1"),CharacterSimple:()=>f("CharacterSimple","\ud83e\uddd1\u200d\ud83e\uddb2","CharacterSimple","character-simple"),Database:()=>f("Database","\ud83d\udcbe"),Decal:()=>f("Decal","\ud83d\udd8c\ufe0f"),File:()=>f("File","\ud83d\udcc1"),Gizmo:()=>f("Gizmo","\ud83e\udded"),Grenade:()=>f("Grenade","\ud83d\udca3"),Light:()=>f("Light","\ud83d\udca1"),Melee:()=>f("Melee","\ud83d\udd2a"),Particle:()=>f("Particle","\u2728"),Player:()=>f("Player","\ud83d\udc69\u200d\ud83d\udcbb"),Prop:()=>f("Prop","\ud83d\udce6"),SceneCapture:()=>f("SceneCapture","\ud83d\udcfd\ufe0f","SceneCapture","scene-capture"),Sound:()=>f("Sound","\ud83d\udd0a"),StaticMesh:()=>f("StaticMesh","\ud83c\udfe0","StaticMesh","static-mesh"),TextRender:()=>f("TextRender","\ud83c\udd92","TextRender","text-render"),Trigger:()=>f("Trigger","\ud83e\udea4"),VehicleWheeled:()=>f("VehicleWheeled","\ud83d\ude99","VehicleWheeled","vehicle-wheeled"),VehicleWater:()=>f("VehicleWater","\ud83d\udee5\ufe0f","VehicleWater","vehicle-water"),Weapon:()=>f("Weapon","\ud83d\udd2b"),WebUI:()=>f("WebUI","\ud83d\udda5\ufe0f"),Widget:()=>f("Widget","\ud83e\ude9f"),Widget3D:()=>f("Widget3D","\ud83e\ude9f")},P={Assets:()=>g("Assets","\ud83c\udf40"),Chat:()=>g("Chat","\ud83d\udcac"),Client:()=>g("Client","\u2328\ufe0f"),Console:()=>g("Console","\ud83d\udd24"),Debug:()=>g("Debug","\ud83d\udc1b"),Discord:()=>g("Discord","\u260e\ufe0f"),Events:()=>g("Events","\ud83d\udea9"),HTTP:()=>g("HTTP","\ud83c\udf10"),Input:()=>g("Input","\ud83d\udd79\ufe0f"),Level:()=>g("Level","\ud83c\udfdd\ufe0f"),Navigation:()=>g("Navigation","\ud83d\udea2"),Package:()=>g("Package","\ud83d\udce6"),PostProcess:()=>g("PostProcess","\ud83d\uddbc\ufe0f"),Server:()=>g("Server","\ud83d\udcbb"),Sky:()=>g("Sky","\ud83c\udf05"),Steam:()=>g("Steam","\ud83c\udfae"),Timer:()=>g("Timer","\u23f1\ufe0f"),Trace:()=>g("Trace","\ud83d\udd0d"),Viewport:()=>g("Viewport","\ud83d\udcfa")},x={StaticMesh:()=>v(0,"StaticMesh Reference","StaticMesh Asset Reference in the format:<br/><code class='path-center'>asset-pack::SM_MyStaticMesh</code>"),SkeletalMesh:()=>v(0,"SkeletalMesh Reference","SkeletalMesh Asset Reference in the format:<br/><code class='path-center'>asset-pack::SK_MySkeletalMesh</code>"),Animation:()=>v(0,"Animation Reference","Animation Asset Reference in the format:<br/><code class='path-center'>asset-pack::A_MyAnimation</code>"),Particle:()=>v(0,"Particle Reference","Particle Asset Reference in the format:<br/><code class='path-center'>asset-pack::P_MyParticle</code>"),Material:()=>v(0,"Material Reference","Material Asset Reference in the format:<br/><code class='path-center'>asset-pack::M_MyMaterial</code>"),Map:()=>v(0,"Map Reference","Map Asset Reference in the format:<br/><code class='path-center'>asset-pack::MyMap</code>"),Blueprint:()=>v(0,"Blueprint Reference","Blueprint Asset Reference in the format:<br/><code class='path-center'>asset-pack::BP_MyBlueprint</code>"),Sound:()=>_(0,"Sound Reference","Sound Asset Reference in the format:<br/><code class='path-center'>asset-pack::A_MySound</code><br/>Or as Special Path:<br/><code class='path-center'>package://my-package/Client/sound.ogg</code>"),Image:()=>_(0,"Image Path","Image Path as Special Path:<br/><code class='path-center'>package://my-package/Client/sound.ogg</code>"),Font:()=>_(0,"Font TTF Path","TTF Font Path as Special Path:<br/><code class='path-center'>package://my-package/Client/Roboto.ttf</code>"),HTML:()=>{return e="HTML Path",t="Web URL or HTML File Path:<br/><code class='path-center'>file://UI/index.html</code>",a="scripting-reference/classes/webui#html-path-searchers",(0,l.jsx)(i.Ay,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,l.jsx)(r.zc,{label:e,description:t,subtitle:"File Path Reference (string)"}),children:(0,l.jsx)(n.N_,{to:`${(0,o.g5)()}/${a}`,className:"hover-link",children:e})});var e,t,a}}},25191:(e,t,a)=>{a.d(t,{C_:()=>f,FQ:()=>D,GU:()=>O,JC:()=>te,KS:()=>ee,RQ:()=>pe,U7:()=>se,VB:()=>M,Zd:()=>k,Zv:()=>F,_g:()=>le,aw:()=>re,mP:()=>ie,mv:()=>oe,t2:()=>R,tn:()=>I,y1:()=>ce,y6:()=>de});a(96540);var n=a(16151),i=a.n(n),r=a(27293),o=a(54625),s=a(44070),l=a(96822),c=(a(33350),a(18091),a(3970)),p=a(54735),d=a(78154),h=a(41622),m=a(26474),u=a(74848);const y={StaticMeshPath:c.e4.StaticMesh,SkeletalMeshPath:c.e4.SkeletalMesh,AnimationPath:c.e4.Animation,ParticlePath:c.e4.Particle,MaterialPath:c.e4.Material,MapPath:c.e4.Map,BlueprintPath:c.e4.Blueprint,SoundPath:c.e4.Sound,ImagePath:c.e4.Image,HTMLPath:c.e4.HTML};function f(e,t){const a=e.endsWith("?");a&&(e=e.slice(0,-1));const n=e.endsWith("...");n&&(e=e.slice(0,-3));const i=e.endsWith("[]");i&&(e=e.slice(0,-2));const r=e.charAt(0).toUpperCase()+e.slice(1),o=c.dA[r]?c.dA[r]:c.xn[e]?c.xn[e]:y[e]?y[e]:c.ho[e]?c.ho[e]:null;return o?(0,u.jsxs)("span",{children:[i?(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(c.dA.Table,{})," of "]}):"",n?(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(c.dA.VarArgs,{})," of "]}):"",(0,u.jsx)(o,{}),a?(0,u.jsxs)(u.Fragment,{children:[" or ",(0,u.jsx)(c.dA.Nil,{})]}):""]},`${e}-${t}`):(0,u.jsx)(c.fX,{short:!0,children:e})}function g(e){return e.split("|").map(((e,t)=>f(e,t))).reduce(((e,t)=>[e," or ",t]))}function b(e){return e.map((e=>g(e.type))).reduce(((e,t)=>[e,", ",t]))}function v(e){const t=e.map((e=>e.description||e.table_properties||e.table_properties_custom?(0,u.jsxs)(u.Fragment,{children:[e.description,e.description&&(e.table_properties||e.table_properties_custom)?(0,u.jsx)(u.Fragment,{children:" "}):null,e.table_properties?(0,u.jsx)(K,{table_properties:e.table_properties}):null,e.table_properties_custom?(0,u.jsx)(K,{table_properties_custom:e.table_properties_custom}):null]}):null)).reduce(((e,t)=>[e,", ",t]));return t?(0,u.jsxs)(u.Fragment,{children:[" (",t,")"]}):""}const _={client:(0,u.jsxs)(u.Fragment,{children:["This class can only be spawned on \ud83d\udfe7 ",(0,u.jsx)(p.zr,{to:"core-concepts/scripting/authority-concepts",children:"Client"})," side."]}),server:(0,u.jsxs)(u.Fragment,{children:["This class can only be spawned on \ud83d\udfe6 ",(0,u.jsx)(p.zr,{to:"core-concepts/scripting/authority-concepts",children:"Server"})," side."]}),both:(0,u.jsxs)(u.Fragment,{children:["This class can be spawned on both \ud83d\udfe7 ",(0,u.jsx)(p.zr,{to:"core-concepts/scripting/authority-concepts",children:"Client"})," and \ud83d\udfe6 ",(0,u.jsx)(p.zr,{to:"core-concepts/scripting/authority-concepts",children:"Server"})," side (if you spawn it on client, it won't be synchronized with other players)."]})},S={client:(0,u.jsxs)(u.Fragment,{children:["This static class can be accessed only on \ud83d\udfe7 ",(0,u.jsx)(p.zr,{to:"core-concepts/scripting/authority-concepts",children:"Client"})," side."]}),server:(0,u.jsxs)(u.Fragment,{children:["This static class can be accessed only on \ud83d\udfe6 ",(0,u.jsx)(p.zr,{to:"core-concepts/scripting/authority-concepts",children:"Server"})," side."]}),both:(0,u.jsxs)(u.Fragment,{children:["This static class can be accessed on both \ud83d\udfe7 ",(0,u.jsx)(p.zr,{to:"core-concepts/scripting/authority-concepts",children:"Client"})," and \ud83d\udfe6 ",(0,u.jsx)(p.zr,{to:"core-concepts/scripting/authority-concepts",children:"Server"})," side."]})};function w(e){return`${e.name}${null!=e.default?"?":""}${e.type.endsWith("...")?"...":""}`}function k(e){return e?e.map((e=>w(e))).join(", "):""}function C(e,t){return`local my_${e.name.toLowerCase()} = ${e.name}(${k(e.constructors[t].parameters)})`}function T(e){return e.return?1==e.return.length?e.return[0].type&&e.return[0].type.endsWith("...")?"local ret_01, ret_02, ... = ":"local ret = ":`local${e.return.map(((e,t)=>" ret_0"+(t+1)))} = `:""}function A(e){return(Array.isArray(e)?e.join("\n"):e).replaceAll("    ","\t")}function P(e,t){return(0,u.jsxs)(i(),{className:"language-lua api-examples",title:`${t?`(${t}) `:""}${e.title}`,children:[A(e.content),e.output?`\n-- Outputs "${e.output}"`:""]},e.title)}function x(e,t,a,n){return P({content:R(e,t,`\t${A(a.content).replaceAll("\n","\n\t")}`),title:a.title},n)}function M(e,t){return`${T(t)}my_${e.toLowerCase()}:${t.name}(${k(t.parameters)})`}function D(e,t){return`${T(t)}${e}.${t.name}(${k(t.parameters)})`}function R(e,t,a){return`${e}.Subscribe("${t.name}", function(${k(t.arguments)})\n${a||`\t-- ${t.name} was called`}\nend)`}const V=({authority:e,is_static:t})=>(0,u.jsx)(r.A,{type:"info",icon:"\ud83d\udc82",title:"Authority",children:t?S[e]:_[e]}),G={StandardLibrary:"StandardLibraries/",Struct:"Structs/",Class:"Classes/",StaticClass:"StaticClasses/",UtilityClass:"UtilityClasses/",UtilityClasses:"UtilityClass/",Enums:""},I=({type:e,class_name:t})=>(0,u.jsxs)(r.A,{type:"note",icon:"\ud83e\uddd1\u200d\ud83d\udcbb",title:"API Source",children:["This page is auto-generated! The Functions, Properties and Events described here are defined in our ",(0,u.jsx)("a",{href:`https://github.com/nanos-world/api/blob/main/${G[e]}${t}.json`,children:"GitHub's API Repository"}),"! Feel free to commit suggestions and changes to the source .json API files!"]}),E=({url:e})=>(0,u.jsxs)(r.A,{type:"tip",icon:"\ud83d\udc50",title:"Open Source",children:["This library implementation is Open Sourced on ",(0,u.jsx)("a",{href:"https://github.com/nanos-world/nanos-world-lua-lib"+(e?`/blob/master/${e}`:""),children:"GitHub"}),"!"]}),W=({inheritance:e})=>(0,u.jsxs)(r.A,{type:"info",icon:"\ud83d\udc6a",title:"Inheritance",children:["This class shares methods and events from ",e.map(((e,t)=>f(e,t))).reduce(((e,t)=>[e,", ",t])),"."]}),N=({inherited:e})=>(0,u.jsxs)(r.A,{type:"info",icon:"\ud83d\udc6a",title:"Base Class",children:["This is a Base Class. Base Classes are abstract definitions used to share common methods and events between related child classes, thus you cannot spawn it directly.",(0,u.jsx)("br",{}),(0,u.jsx)("br",{}),"Classes that share methods and events from this Base Class: ",e.map(((e,t)=>f(e,t))).reduce(((e,t)=>[e,", ",t])),"."]}),B=()=>(0,u.jsxs)(r.A,{type:"info",icon:"\ud83d\uddff",title:"Static Class",children:["This is a ",(0,u.jsx)("b",{children:"Static Class"}),". Access it's methods directly with ",(0,u.jsx)("code",{children:"."}),". It's not possible to spawn new instances."]});function L(e){return"server"==e?(0,u.jsx)(c.I4.ServerOnly,{}):"client"==e?(0,u.jsx)(c.I4.ClientOnly,{}):"authority"==e?(0,u.jsx)(c.I4.AuthorityOnly,{}):"network-authority"==e?(0,u.jsx)(c.I4.NetworkAuthority,{}):"both-net-authority-first"==e?(0,u.jsx)(c.I4.BothNetAuthorityFirst,{}):"both"==e?(0,u.jsx)(c.I4.Both,{}):""}function j(e){return!0===e?(0,u.jsx)(c.u3.Native,{}):!1===e?(0,u.jsx)(c.u3.NotNative,{}):null}function O(e){return[...e.functions?e.functions.map((function(e,t){return(0,u.jsx)(o.N_,{to:`#function-${e.toLowerCase()}`,children:e},`${e.name}-${t}`)})):[],...e.static_functions?e.static_functions.map((function(e,t){return(0,u.jsx)(o.N_,{to:`#static-function-${e.toLowerCase()}`,children:e},`${e.name}-${t}`)})):[],...e.events?e.events.map((function(e,t){return(0,u.jsx)(o.N_,{to:`#event-${e.toLowerCase()}`,children:e},`${e.name}-${t}`)})):[],...e.etc?e.etc.map((function(e,t){return(0,u.jsx)(o.N_,{to:`${e.url}`,children:e.label},`${e.name}-${t}`)})):[]].reduce(((e,t)=>[e,", ",t]))}const F=({parameters:e,include_default:t=!0})=>(0,u.jsx)(u.Fragment,{children:Array.isArray(e)&&e.length>0?(0,u.jsx)("div",{className:"table-wrapper",children:(0,u.jsxs)("table",{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)("tr",{children:[(0,u.jsx)("th",{children:"Type"}),(0,u.jsx)("th",{children:"Parameter"}),t?(0,u.jsx)("th",{children:"Default"}):null,(0,u.jsx)("th",{children:"Description"})]})}),(0,u.jsx)("tbody",{children:e.map((function(e,a){return(0,u.jsxs)("tr",{children:[(0,u.jsx)("td",{children:g(e.type)}),(0,u.jsx)("td",{children:(0,u.jsx)("code",{children:w(e)})}),t?(0,u.jsx)("td",{style:{whiteSpace:"nowrap"},children:null!=e.default?(0,u.jsx)("code",{children:e.default}):(0,u.jsxs)("span",{class:"subtle-description",children:[" ","Required parameter"," "]})}):null,(0,u.jsx)("td",{children:(n=e,(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)("span",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:n.description?n.description:"<span class='subtle-description'>No description provided</span>"}}),(0,u.jsx)(u.Fragment,{children:" "}),"function"==n.type&&n.function_parameters?(0,u.jsx)(J,{function_parameters:n.function_parameters}):"",(0,u.jsx)(u.Fragment,{children:" "}),"table"==n.type?(0,u.jsxs)(u.Fragment,{children:[n.table_properties?(0,u.jsx)(K,{table_properties:n.table_properties}):null,n.table_properties_custom?(0,u.jsx)(K,{table_properties_custom:n.table_properties_custom}):null]}):""]}))})]},`${e.name}-${a}`);var n}))})]})}):(0,u.jsx)(u.Fragment,{})}),U=({function_data:e,is_static:t,class_name:a,show_lean_declaration:n=!1})=>(0,u.jsxs)(u.Fragment,{children:[n?null:(0,u.jsx)("hr",{}),(0,u.jsxs)("h3",{id:`${t?"static-function":"function"}-${e.name.toLowerCase()}`,children:[L(e.authority),j(e.is_native),(0,u.jsx)("code",{children:e.name})]}),(0,u.jsx)("blockquote",{children:(0,u.jsx)("span",{dangerouslySetInnerHTML:{__html:!n&&e.description_long?e.description_long:e.description}})}),(0,u.jsx)("p",{className:"function-return",children:e.return?(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(u.Fragment,{children:"\u2014 Returns "}),b(e.return),v(e.return),"."]}):""}),(0,u.jsx)(i(),{className:"language-lua",children:t?D(a,e):M(a,e)}),n?null:(0,u.jsx)(F,{parameters:e.parameters}),Array.isArray(e.examples)&&e.examples.length>0?(0,u.jsx)(h.A,{summary:`${a}.${e.name} Examples`,children:e.examples.map((function(e,t){return P(e)}))}):(0,u.jsx)(u.Fragment,{}),!n&&e.relations?(0,u.jsxs)("p",{className:"relations",children:["See also ",O(e.relations),"."]}):(0,u.jsx)(u.Fragment,{})]}),z=({event_data:e,class_name:t,show_lean_declaration:a=!1})=>(0,u.jsxs)(u.Fragment,{children:[a?null:(0,u.jsx)("hr",{}),(0,u.jsxs)("h3",{id:`event-${e.name.toLowerCase()}`,children:[L(e.authority),j(e.is_native),(0,u.jsx)("code",{children:e.name})]}),(0,u.jsx)("blockquote",{dangerouslySetInnerHTML:{__html:`${!a&&e.description_long?e.description_long:e.description?e.description:"<span class='subtle-description'>No description provided</span>"}${e.return?"<br/><br/>"+e.return[0].description:""}`}}),(0,u.jsx)(i(),{className:"language-lua",children:R(t,e)}),!a&&Array.isArray(e.arguments)&&e.arguments.length>0?(0,u.jsx)("div",{className:"table-wrapper",children:(0,u.jsxs)("table",{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)("tr",{children:[(0,u.jsx)("th",{children:"Type"}),(0,u.jsx)("th",{children:"Argument"}),(0,u.jsx)("th",{children:"Description"})]})}),(0,u.jsx)("tbody",{children:e.arguments.map((function(e,t){return(0,u.jsxs)("tr",{children:[(0,u.jsx)("td",{children:g(e.type)}),(0,u.jsx)("td",{children:(0,u.jsx)("code",{children:e.name})}),(0,u.jsx)("td",{dangerouslySetInnerHTML:{__html:e.description?e.description:"<span class='subtle-description'>No description provided</span>"},style:{wordBreak:"break-word"}})]},`${e.name}-${t}`)}))})]})}):(0,u.jsx)(u.Fragment,{}),!a&&Array.isArray(e.examples)&&e.examples.length>0?(0,u.jsx)(h.A,{summary:`${t} "${e.name}" Event Examples`,children:e.examples.map((function(a,n){return x(t,e,a)}))}):(0,u.jsx)(u.Fragment,{}),!a&&e.relations?(0,u.jsxs)("p",{className:"relations",children:["See also ",O(e.relations),"."]}):(0,u.jsx)(u.Fragment,{})]}),H=({class_name:e,function_data:t,base_class:a})=>(0,u.jsx)(l.Ay,{interactive:!0,maxWidth:1200,animation:"scale-subtle",content:(0,u.jsx)(d.y5,{class_name:e,function_data:t}),children:(0,u.jsx)("b",{children:(0,u.jsx)(o.N_,{to:`${a?`${(0,p.g5)()}/scripting-reference/classes/base-classes/${a.toLowerCase()}`:""}#static-function-${t.name.toLowerCase()}`,className:"hover-link",children:(0,u.jsx)("code",{children:t.name})})})}),q=({class_name:e,function_data:t,base_class:a})=>(0,u.jsx)(l.Ay,{interactive:!0,maxWidth:1200,animation:"scale-subtle",content:(0,u.jsx)(d.aQ,{class_name:e,function_data:t}),children:(0,u.jsx)("b",{children:(0,u.jsx)(o.N_,{to:`${a?`${(0,p.g5)()}/scripting-reference/classes/base-classes/${a.toLowerCase()}`:""}#function-${t.name.toLowerCase()}`,className:"hover-link",children:(0,u.jsx)("code",{children:t.name})})})}),J=({function_parameters:e})=>(0,u.jsx)(l.Ay,{interactive:!0,maxWidth:1200,animation:"scale-subtle",content:(0,u.jsx)(d.f4,{function_parameters:e}),children:(0,u.jsx)("span",{className:"hover-link",children:"with this format"})}),K=({table_properties:e,table_properties_custom:t})=>(0,u.jsx)(l.Ay,{interactive:!0,maxWidth:1200,animation:"scale-subtle",content:(0,u.jsx)(d.NG,{table_properties:e,table_properties_custom:t}),children:(0,u.jsx)("span",{className:"hover-link",children:"with this format"})}),$=({class_name:e,event_data:t,base_class:a})=>(0,u.jsx)(l.Ay,{interactive:!0,maxWidth:1200,animation:"scale-subtle",content:(0,u.jsx)(d.Ec,{class_name:e,event_data:t}),children:(0,u.jsx)("b",{children:(0,u.jsx)(o.N_,{to:`${a?`${(0,p.g5)()}/scripting-reference/classes/base-classes/${a.toLowerCase()}`:""}#event-${t.name.toLowerCase()}`,className:"hover-link",children:(0,u.jsx)("code",{children:t.name})})})}),Y=({class_name:e,functions_list:t,base_class:a})=>(0,u.jsx)("div",{className:"table-wrapper",children:(0,u.jsxs)("table",{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)("tr",{children:[(0,u.jsx)("th",{}),(0,u.jsx)("th",{children:"Returns"}),(0,u.jsx)("th",{children:"Name"}),(0,u.jsx)("th",{children:"Description"})]})}),(0,u.jsx)("tbody",{children:t.map((function(t,n){return(0,u.jsxs)("tr",{children:[(0,u.jsxs)("td",{width:"50px",children:[L(t.authority),j(t.is_native)]}),(0,u.jsx)("td",{children:t.return?b(t.return):""}),(0,u.jsx)("td",{children:(0,u.jsx)(H,{class_name:e,base_class:a,function_data:t})}),(0,u.jsx)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:t.description?t.description:"<span class='subtle-description'>No description provided</span>"}})]},`${t.name}-${n}`)}))})]})}),X=({class_name:e,functions_list:t,base_class:a})=>(0,u.jsx)("div",{className:"table-wrapper",children:(0,u.jsxs)("table",{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)("tr",{children:[(0,u.jsx)("th",{}),(0,u.jsx)("th",{children:"Returns"}),(0,u.jsx)("th",{children:"Name"}),(0,u.jsx)("th",{children:"Description"})]})}),(0,u.jsx)("tbody",{children:t.map((function(t,n){return(0,u.jsxs)("tr",{children:[(0,u.jsxs)("td",{width:"50px",children:[L(t.authority),j(t.is_native)]}),(0,u.jsx)("td",{children:t.return?b(t.return):""}),(0,u.jsx)("td",{children:(0,u.jsx)(q,{class_name:e,base_class:a,function_data:t})}),(0,u.jsx)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:t.description?t.description:"<span class='subtle-description'>No description provided</span>"}})]},`${t.name}-${n}`)}))})]})}),Q=({type:e,name:t,inherited_class_name:a,base_class:n})=>{const i=Z(e,t);return(0,u.jsx)("div",{className:"table-wrapper",children:(0,u.jsxs)("table",{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)("tr",{children:[(0,u.jsx)("th",{}),(0,u.jsx)("th",{children:"Name"}),(0,u.jsx)("th",{children:"Description"})]})}),(0,u.jsx)("tbody",{children:i.events.map((function(e,t){return(0,u.jsxs)("tr",{children:[(0,u.jsxs)("td",{width:"50px",children:[L(e.authority),j(e.is_native)]}),(0,u.jsx)("td",{children:(0,u.jsx)($,{class_name:a,base_class:n,event_data:e})}),(0,u.jsx)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description?e.description:"<span class='subtle-description'>No description provided</span>"}})]},`${e.name}-${t}`)}))})]})})},Z=(e,t)=>{const a=(0,s.ir)(),n=!a||"current"==a.name;return m.A[n?"BleedingEdge":"Stable"][e][t]},ee=({type:e,name:t,image:a,is_static:n,open_source_url:i})=>{const r=Z(e,t);return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)("p",{dangerouslySetInnerHTML:{__html:r.description}}),a?(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)("p",{children:(0,u.jsx)("img",{src:a})}),(0,u.jsx)("hr",{})]}):"",n?(0,u.jsx)(B,{}):"",r.authority?(0,u.jsx)(V,{authority:r.authority,is_static:n}):"",r.inheritance?(0,u.jsx)(W,{inheritance:r.inheritance}):"",i?(0,u.jsx)(E,{url:i}):"",(0,u.jsx)(I,{type:e,class_name:r.is_base?"Base"+t:t}),r.is_base?(0,u.jsx)(N,{inherited:r.inheritance_children}):"",(0,u.jsx)("hr",{})]})},te=({type:e,name:t})=>{const a=Z(e,t);return a.constructors.map(((e,t)=>(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)("h3",{id:`constructor-${e.name.toLowerCase().replace(" ","-")}`,children:e.name}),(0,u.jsx)("p",{class:"subtle-description",style:{marginTop:"-20px"},children:e.description||"No description provided"}),(0,u.jsx)(i(),{className:"language-lua",children:C(a,t)}),0==e.parameters.length?(0,u.jsx)("p",{class:"subtle-description",children:"This constructor doesn't have parameters."}):(0,u.jsx)(u.Fragment,{children:(0,u.jsx)("div",{className:"table-wrapper",children:(0,u.jsxs)("table",{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)("tr",{children:[(0,u.jsx)("th",{children:"Type"}),(0,u.jsx)("th",{children:"Name"}),(0,u.jsx)("th",{children:"Default"}),(0,u.jsx)("th",{children:"Description"})]})}),(0,u.jsx)("tbody",{children:e.parameters.map((function(e,t){return(0,u.jsxs)("tr",{children:[(0,u.jsx)("td",{children:g(e.type)}),(0,u.jsx)("td",{children:(0,u.jsx)("b",{children:(0,u.jsx)("code",{children:e.name})})}),(0,u.jsx)("td",{style:{whiteSpace:"nowrap"},children:null!=e.default?(0,u.jsx)("code",{children:e.default}):(0,u.jsxs)("span",{class:"subtle-description",children:[" ","Required parameter"," "]})}),(0,u.jsx)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description?e.description:"<span class='subtle-description'>No description provided</span>"}})]},`${e.name}-${t}`)}))})]})})})]})))},ae=({inherited_class_name:e,parent_class_name:t,is_static:a})=>{const n=Z("Class",t);return(0,u.jsx)(u.Fragment,{children:(0,u.jsxs)(h.A,{summary:`Inherited ${t} ${a?"Static ":""}Functions`,children:[(0,u.jsx)("i",{children:`${e} inherits from Base ${t} Class, sharing it's methods and functions:`}),(0,u.jsx)("br",{}),(0,u.jsxs)(c.so,{href:`scripting-reference/classes/base-classes/${t.toLowerCase()}`,children:["Base ",t]}),a?(0,u.jsx)(Y,{class_name:e,base_class:t,functions_list:n.static_functions}):(0,u.jsx)(X,{class_name:e,base_class:t,functions_list:n.functions})]})})},ne=({inherited_class_name:e,parent_class_name:t})=>(0,u.jsxs)(h.A,{summary:`Inherited ${t} Events`,children:[(0,u.jsx)("i",{children:`${e} inherits from Base ${t} Class, sharing it's events:`}),(0,u.jsx)("br",{}),(0,u.jsxs)(c.so,{href:`scripting-reference/classes/base-classes/${t.toLowerCase()}`,children:["Base ",t]}),(0,u.jsx)(Q,{type:"Class",name:t,inherited_class_name:e,base_class:t})]}),ie=({type:e,name:t})=>{const a=Z(e,t);return(0,u.jsxs)(u.Fragment,{children:[a.inheritance&&a.inheritance.includes("Entity")?(0,u.jsx)(ae,{inherited_class_name:a.name,parent_class_name:"Entity"}):"",a.inheritance&&a.inheritance.includes("Actor")?(0,u.jsx)(ae,{inherited_class_name:a.name,parent_class_name:"Actor"}):"",a.inheritance&&a.inheritance.includes("Paintable")?(0,u.jsx)(ae,{inherited_class_name:a.name,parent_class_name:"Paintable"}):"",a.inheritance&&a.inheritance.includes("Damageable")?(0,u.jsx)(ae,{inherited_class_name:a.name,parent_class_name:"Damageable"}):"",a.inheritance&&a.inheritance.includes("Pickable")?(0,u.jsx)(ae,{inherited_class_name:a.name,parent_class_name:"Pickable"}):"",a.inheritance&&a.inheritance.includes("Vehicle")?(0,u.jsx)(ae,{inherited_class_name:a.name,parent_class_name:"Vehicle"}):"",a.inheritance&&a.inheritance.includes("Pawn")?(0,u.jsx)(ae,{inherited_class_name:a.name,parent_class_name:"Pawn"}):"",null==a.functions||0==a.functions.length?(0,u.jsx)("p",{class:"subtle-description",children:"This class doesn't have own functions."}):(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(X,{class_name:a.name,functions_list:a.functions}),a.functions.map(((e,t)=>(0,u.jsx)(U,{function_data:e,class_name:a.name},`${e.name}-${t}`)))]})]})},re=({type:e,name:t})=>{const a=Z(e,t);return(0,u.jsxs)(u.Fragment,{children:[a.inheritance&&a.inheritance.includes("Entity")?(0,u.jsx)(ae,{inherited_class_name:a.name,parent_class_name:"Entity",is_static:!0}):"",null==a.static_functions||0==a.static_functions.length?(0,u.jsx)("p",{class:"subtle-description",children:"This class doesn't have own static functions."}):(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(Y,{class_name:a.name,functions_list:a.static_functions}),a.static_functions.map(((e,t)=>(0,u.jsx)(U,{function_data:e,is_static:!0,class_name:a.name},`${e.name}-${t}`)))]})]})},oe=({type:e,name:t})=>{const a=Z(e,t);return(0,u.jsxs)(u.Fragment,{children:[a.static_functions&&a.static_functions.map((e=>e.examples&&e.examples.map((a=>P(a,`${t}.${e.name}`))))),a.functions&&a.functions.map((e=>e.examples&&e.examples.map((a=>P(a,`${t}.${e.name}`))))),a.events&&a.events.map((e=>e.examples&&e.examples.map((n=>x(t,a,n,`${t} "${e.name}" Event`)))))]})},se=({type:e,name:t})=>{const a=Z(e,t);return(0,u.jsxs)(u.Fragment,{children:[a.inheritance&&a.inheritance.includes("Entity")?(0,u.jsx)(ne,{inherited_class_name:a.name,parent_class_name:"Entity"}):"",a.inheritance&&a.inheritance.includes("Actor")?(0,u.jsx)(ne,{inherited_class_name:a.name,parent_class_name:"Actor"}):"",a.inheritance&&a.inheritance.includes("Pickable")?(0,u.jsx)(ne,{inherited_class_name:a.name,parent_class_name:"Pickable"}):"",a.inheritance&&a.inheritance.includes("Damageable")?(0,u.jsx)(ne,{inherited_class_name:a.name,parent_class_name:"Damageable"}):"",a.inheritance&&a.inheritance.includes("Vehicle")?(0,u.jsx)(ne,{inherited_class_name:a.name,parent_class_name:"Vehicle"}):"",a.inheritance&&a.inheritance.includes("Pawn")?(0,u.jsx)(ne,{inherited_class_name:a.name,parent_class_name:"Pawn"}):"",null==a.events||0==a.events.length?(0,u.jsx)("p",{class:"subtle-description",children:"This class doesn't have own events."}):(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(Q,{type:e,name:a.name,inherited_class_name:a.name}),a.events.map(((e,t)=>(0,u.jsx)(z,{event_data:e,class_name:a.name},`${e.name}-${t}`)))]})]})},le=({type:e,name:t})=>{const a=Z(e,t);return(0,u.jsx)(u.Fragment,{children:null==a.properties||0==a.properties.length?(0,u.jsx)("p",{class:"subtle-description",children:"This class doesn't have properties."}):(0,u.jsx)("div",{className:"table-wrapper",children:(0,u.jsxs)("table",{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)("tr",{children:[(0,u.jsx)("th",{children:"Type"}),(0,u.jsx)("th",{children:"Name"}),(0,u.jsx)("th",{children:"Description"})]})}),(0,u.jsx)("tbody",{children:a.properties.map((function(e,t){return(0,u.jsxs)("tr",{children:[(0,u.jsx)("td",{children:f(e.type)}),(0,u.jsx)("td",{children:(0,u.jsx)("b",{children:(0,u.jsx)("code",{children:e.name})})}),(0,u.jsx)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description?e.description:"<span class='subtle-description'>No description provided</span>"}})]},`${e.name}-${t}`)}))})]})})})},ce=({type:e,name:t})=>{const a=Z(e,t);return(0,u.jsx)(u.Fragment,{children:null==a.static_properties||0===a.static_properties.length?(0,u.jsx)("p",{class:"subtle-description",children:"This class doesn't have static properties."}):(0,u.jsx)("div",{className:"table-wrapper",children:(0,u.jsxs)("table",{children:[(0,u.jsx)("thead",{children:(0,u.jsxs)("tr",{children:[(0,u.jsx)("th",{children:"Value"}),(0,u.jsx)("th",{children:"Name"})]})}),(0,u.jsx)("tbody",{children:a.static_properties.map(((e,a)=>(0,u.jsxs)("tr",{children:[(0,u.jsx)("td",{children:(0,u.jsx)("code",{children:e.value})}),(0,u.jsx)("td",{children:(0,u.jsx)("b",{children:(0,u.jsx)("code",{children:t+"."+e.name})})})]},`${e.name}-${a}`)))})]})})})},pe=({type:e,class_name:t,method:a,params:n,is_base:i=!1,is_static:r=!1,show_class_name:s=!1})=>{const c=Z(e,t),d=(r?c.static_functions:c.functions).find((({name:e})=>e===a));return(0,u.jsx)(l.Ay,{interactive:!0,maxWidth:600,animation:"scale-subtle",placement:"left",content:(0,u.jsx)(U,{class_name:t,function_data:d,is_static:r,show_lean_declaration:!0}),children:(0,u.jsx)(o.N_,{to:`${(0,p.g5)()}/scripting-reference/${r?"static-classes":"classes"}/${i?"base-classes/":""}${(0,p.ae)(t)}#${r?"static-function":"function"}-${a.toLowerCase()}`,className:"hover-link",children:(0,u.jsxs)("code",{children:[s?t:"",r?".":":",a,"(",n,")"]})})})},de=({type:e,class_name:t,event:a,is_base:n=!1,is_static:i=!1,show_class_name:r=!1})=>{const s=Z(e,t).events.find((({name:e})=>e===a));return(0,u.jsx)(l.Ay,{interactive:!0,maxWidth:600,animation:"scale-subtle",placement:"left",content:(0,u.jsx)(z,{class_name:t,event_data:s,show_lean_declaration:!0}),children:(0,u.jsx)(o.N_,{to:`${(0,p.g5)()}/scripting-reference/${i?"static-classes":"classes"}/${n?"base-classes/":""}${(0,p.ae)(t)}#event-${a.toLowerCase()}`,className:"hover-link",children:(0,u.jsxs)("code",{children:[a,r?` (${t})`:""]})})})}},26474:(e,t,a)=>{a.d(t,{A:()=>Mt});const n=JSON.parse('{"name":"Entity","description":"<b>Entity</b> is the base for all Classes, and all those entities share the same <b>Methods</b> and <b>Events</b> described in this page.","is_base":true,"static_functions":[{"name":"GetAll","description":"Returns a table containing all Entities of the class this is called on","authority":"both","return":[{"type":"Entity[]","description":"Copy of table containing all Entities"}]},{"name":"GetByIndex","description":"Returns a specific Entity of this class at an index","authority":"both","parameters":[{"type":"integer","name":"index","description":"The index of the Entity"}],"return":[{"type":"Entity","description":"Entity at index"}]},{"name":"GetCount","description":"Returns how many Entities of this class exist","authority":"both","return":[{"type":"integer","description":"Number of Entities of this class"}]},{"name":"GetInheritedClasses","description":"Gets a list of all directly inherited classes from this Class created with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"boolean","default":"false","name":"recursively","description":"Returns all inherited children"}],"return":[{"type":"table[]","description":"All children Classes"}]},{"name":"GetPairs","description":"Returns an iterator with all Entities of this class to be used with <code>pairs()</code>","description_long":"Returns an iterator with all Entities of this class to be used with <code>pairs()</code>. This is a more performant method than <code>GetAll()</code>, as it will return the iterator to access the Entities directly instead of creating and returning a copy of the Entities table.<br><br><b>Note:</b> Destroying Entities from inside a <code>GetPairs()</code> loop will cause the iterable to change size during the process. If you want to loop-and-destroy, please use <code>GetAll()</code>.","authority":"both","return":[{"type":"iterator","description":"Iterator with all Entities of this class"}]},{"name":"GetParentClass","description":"Gets the parent class if this Class was created with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","return":[{"type":"table?","description":"The parent class"}]},{"name":"Inherit","description":"Inherits this class with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"string","name":"name","description":"The name of the new Class"},{"type":"table?","name":"custom_values","description":"An optional table with custom values to be set in the inherited class table"}],"return":[{"type":"table","name":"class","description":"The new Class table"}]},{"name":"IsChildOf","description":"Gets if this Class is child of another class if this Class was created with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"table","name":"class","description":"The other class to check"}],"return":[{"type":"boolean"}]},{"name":"Subscribe","description":"Subscribes to an <a href=\'/docs/core-concepts/scripting/events-guide\'>Event</a> for all entities of this Class","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"SubscribeRemote","description":"Subscribes to a custom event called from server","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"Unsubscribe","description":"Unsubscribes all callbacks from this <a href=\'/docs/core-concepts/scripting/events-guide\'>Event</a> in this Class within this Package, or only the callback passed","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to unsubscribe from"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to unsubscribe"}]}],"functions":[{"name":"BroadcastRemoteEvent","description":"Calls a custom remote event directly on this entity to all Players","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"CallRemoteEvent","description":"Calls a custom remote event directly on this entity to a specific Player","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"Player","name":"player","description":"The remote player to send this event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"CallRemoteEvent","description":"Calls a custom remote event directly on this entity","authority":"client","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"Destroy","description":"Destroys this Entity","authority":"authority"},{"name":"GetAllValuesKeys","description":"Gets a list of all values keys","authority":"server","return":[{"type":"string[]","description":"a list with all values keys"}],"relations":{"functions":["GetValue","SetValue"]}},{"name":"GetClass","description":"Gets the class of this entity","authority":"both","return":[{"type":"table","name":"class"}]},{"name":"GetID","description":"Gets the universal network ID of this Entity (same on both client and server)","authority":"both","return":[{"type":"integer","name":"id"}]},{"name":"GetValue","description":"Gets a <a href=\'/docs/core-concepts/scripting/entity-values\'>Value</a> stored on this Entity at the given key","description_long":"Gets a <a href=\'/docs/core-concepts/scripting/entity-values\'>Value</a> stored on this Entity at the given key. Please refer to <a href=\\"/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"both","parameters":[{"type":"string","name":"key"},{"type":"any","name":"fallback","description":"Fallback value if key doesn\'t exist"}],"return":[{"type":"any","description":"Value at key or fallback if key doesn\'t exist","name":"value"}],"relations":{"functions":["GetAllValuesKeys","SetValue"]}},{"name":"IsA","description":"Recursively checks if this entity is <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>inherited</a> from a Class","authority":"both","parameters":[{"type":"table","name":"class","description":"The Class"}],"return":[{"type":"boolean"}]},{"name":"IsValid","description":"Returns true if this Entity is valid (i.e. wasn\'t destroyed and points to a valid Entity)","authority":"both","return":[{"name":"is_valid","type":"boolean"}]},{"name":"SetValue","description":"Sets a <a href=\'/docs/core-concepts/scripting/entity-values\'>Value</a> in this Entity","description_long":"Sets a value in this Entity, which can be accessed by any package (optionally sync on clients if called from server)<br><br>Please refer to <a href=\\"/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"both","parameters":[{"type":"string","name":"key"},{"type":"any","name":"value"},{"type":"boolean","name":"sync_on_clients","default":"false","description":"Server side parameter, if enabled will sync this value with all clients"}],"relations":{"functions":["GetAllValuesKeys","GetValue"]}},{"name":"Subscribe","description":"Subscribes to an <a href=\'/docs/core-concepts/scripting/events-guide\'>Event</a> on this specific entity","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"SubscribeRemote","description":"Subscribes to a custom event called from server on this specific entity","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"Unsubscribe","description":"Unsubscribes all callbacks from this <a href=\'/docs/core-concepts/scripting/events-guide\'>Event</a> in this Entity within this Package, or only the callback passed","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to unsubscribe from"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to unsubscribe"}]}],"events":[{"authority":"both","name":"ClassRegister","description":"Triggered when a new Class is registered with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","arguments":[{"type":"table","name":"class","description":"The inherited Class"}]},{"authority":"both","name":"Destroy","description":"Triggered when an Entity is destroyed","arguments":[{"type":"Entity","name":"self","description":"The Entity which that was destroyed"}]},{"authority":"both","name":"Spawn","description":"Triggered when an Entity is spawned/created","arguments":[{"type":"Entity","name":"self","description":"The Entity that was spawned"}]},{"authority":"both","name":"ValueChange","description":"Triggered when an Entity has a value changed with <code>:SetValue()</code>","arguments":[{"type":"Entity","name":"self","description":"The Entity that just had a value changed"},{"type":"string","name":"key","description":"The key used"},{"type":"any","name":"value","description":"The value that was set"}]}],"inheritance_children":["Billboard","Blueprint","Cable","Character","CharacterSimple","Decal","Gizmo","Grenade","Light","Melee","Particle","Player","Prop","SceneCapture","StaticMesh","Sound","TextRender","Trigger","VehicleWheeled","VehicleWater","Weapon","WebUI","Widget","Widget3D"]}'),i=JSON.parse('{"name":"Actor","description":"An <b>Actor</b> is an object which can be spawned and destroyed through Lua.<br>Actors support 3D transformations such as translation (location), rotation, and scale.<br><br>An <b>Actor</b> is the base for several entities, and all those entities share the same <b>Methods</b> and <b>Events</b> described in this page.","is_base":true,"functions":[{"name":"AddActorTag","description":"Adds an Unreal Actor Tag to this Actor","authority":"client","parameters":[{"type":"string","name":"tag"}],"relations":{"functions":["RemoveActorTag","GetActorTags"]}},{"name":"AddImpulse","description":"Applies a force in world world to this Actor","description_long":"Applies a force in world world to this Actor (the force is applied client side, by, in most cases, the player closest to this Actor)","authority":"network-authority","parameters":[{"type":"Vector","name":"force"},{"type":"boolean","name":"velocity_change","default":"false","description":"Whether to ignore mass"}]},{"name":"AttachTo","description":"Attaches this Actor to any other Actor, optionally at a specific bone","authority":"authority","parameters":[{"type":"Actor","name":"other","description":"Other actor to attach"},{"type":"AttachmentRule","name":"attachment_rule","default":"SnapToTarget","description":"How to attach"},{"type":"string","name":"bone_name","default":"","description":"Which bone to attach to. If empty it will be attached to the Actor, otherwise to the Mesh at the bone/socket"},{"type":"float","name":"lifespan_when_detached","default":"-1","description":"Seconds before destroying this Actor when detached, setting it to 0 will automatically destroy this actor when detached, setting it to 10 will destroy this after 10 seconds when detached"},{"type":"boolean","name":"use_absolute_rotation","default":"false","description":"Whether to force attached object to use absolute rotation (will not follow parent)"}]},{"name":"Detach","description":"Detaches this Actor from AttachedTo Actor","authority":"authority"},{"name":"GetActorTags","description":"Gets all Unreal Actor Tags on this Actor","authority":"client","return":[{"type":"string[]"}],"relations":{"functions":["AddActorTag","RemoveActorTag"]}},{"name":"GetAttachedEntities","description":"Gets all Actors attached to this Actor","authority":"both","return":[{"type":"Actor[]"}]},{"name":"GetAttachedTo","description":"Gets the Actor this Actor is attached to","authority":"both","return":[{"type":"Actor?"}]},{"name":"GetBounds","description":"Gets this Actor\'s bounds","authority":"client","return":[{"type":"table","table_properties":[{"name":"Origin","type":"Vector"},{"name":"BoxExtent","type":"Vector"},{"name":"SphereRadius","type":"float"}]}]},{"name":"GetCollision","description":"Gets this Actor\'s collision type","authority":"both","return":[{"type":"CollisionType","name":"collision_type"}],"relations":{"functions":["SetCollision"]}},{"name":"GetDimension","description":"Gets this Actor\'s dimension","authority":"both","return":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"],"functions":["SetDimension"]}},{"name":"GetDistanceFromCamera","description":"Gets the distance of this Actor from the Camera","authority":"client","return":[{"type":"float"}]},{"name":"GetForce","description":"Gets this Actor\'s force (set by <code>SetForce()</code>)","authority":"both","return":[{"type":"Vector","name":"force"}],"relations":{"functions":["SetForce"]}},{"name":"GetLocation","description":"Gets this Actor\'s location in the game world","authority":"both","return":[{"type":"Vector","name":"location"}],"relations":{"functions":["SetLocation"]}},{"name":"GetNetworkAuthority","description":"Gets this Actor\'s Network Authority Player","authority":"server","return":[{"type":"Player?"}],"relations":{"functions":["SetNetworkAuthority"]}},{"name":"GetRelativeLocation","description":"Gets this Actor\'s Relative Location if it\'s attached","authority":"both","return":[{"type":"Vector","name":"relative_location"}],"relations":{"functions":["SetRelativeLocation"]}},{"name":"GetRelativeRotation","description":"Gets this Actor\'s Relative Rotation if it\'s attached","authority":"both","return":[{"type":"Rotator","name":"relative_rotation"}],"relations":{"functions":["SetRelativeRotation"]}},{"name":"GetRotation","description":"Gets this Actor\'s angle in the game world","authority":"both","return":[{"type":"Rotator","name":"rotation"}],"relations":{"functions":["SetRotation"]}},{"name":"GetScale","description":"Gets this Actor\'s scale","authority":"both","return":[{"type":"Vector","name":"scale"}],"relations":{"functions":["SetScale"]}},{"name":"GetScreenPercentage","description":"Gets the percentage of this Actor size in the screen","authority":"client","return":[{"type":"float"}]},{"authority":"client","name":"GetSocketTransform","description":"Gets a Socket Transform in world space given a bone or socket name","return":[{"type":"table","table_properties":[{"name":"Location","type":"Vector"},{"name":"Rotation","type":"Rotator"}]}],"parameters":[{"name":"socket_name","type":"string"}]},{"name":"GetVelocity","description":"Gets this Actor\'s current velocity","authority":"both","return":[{"type":"Vector","name":"velocity"}]},{"name":"HasAuthority","description":"Gets if this Actor was spawned by the client side","authority":"client","return":[{"type":"boolean","description":"false if it was spawned by the Server or true if it was spawned by the client"}]},{"name":"HasNetworkAuthority","description":"Returns true if the local Player is currently the Network Authority of this Actor","authority":"client","return":[{"type":"boolean"}]},{"name":"IsBeingDestroyed","description":"Returns true if this Actor is being destroyed","description_long":"Returns true if this Actor is being destroyed.<br>You can check this inside events like <code>Drop</code> to see if a Pickable is being dropped because it\'s going to be destroyed","authority":"both","return":[{"type":"boolean"}]},{"name":"IsGravityEnabled","description":"Returns true if gravity is enabled on this Actor","authority":"both","return":[{"type":"boolean","name":"gravity_enabled"}],"relations":{"functions":["SetGravityEnabled"]}},{"name":"IsInWater","description":"Returns true if this Actor is in water","authority":"both","return":[{"type":"boolean"}]},{"name":"IsNetworkDistributed","description":"Returns true if this Actor is currently network distributed","description_long":"Returns true if this Actor is currently network distributed. Only actors being network distributed can have their network authority set<br>Entities have NetworkDistributed automatically disabled when: Attached, Possessed, Grabbed, Picked Up or Driving","authority":"both","return":[{"type":"boolean"}]},{"name":"IsVisible","description":"Returns true if this Actor is visible","authority":"both","return":[{"name":"is_visible","type":"boolean"}]},{"name":"RemoveActorTag","description":"Removes an Unreal Actor Tag from this Actor","authority":"client","parameters":[{"type":"string","name":"tag"}],"relations":{"functions":["AddActorTag","GetActorTags"]}},{"name":"RotateTo","description":"Smoothly rotates this actor to an angle over a certain time","authority":"network-authority","parameters":[{"type":"Rotator","name":"rotation"},{"type":"float","name":"time","description":"Time to interpolate from current location to target location"},{"type":"float","name":"exp","default":"0","description":"Exponent used to smooth interpolation. Use <code>0</code> for linear movement"}]},{"name":"SetCollision","description":"Sets this Actor\'s collision type","authority":"authority","parameters":[{"type":"CollisionType","name":"collision_type"}],"relations":{"functions":["GetCollision"]}},{"name":"SetDimension","description":"Sets this Actor\'s Dimension","authority":"server","parameters":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"],"functions":["GetDimension"]}},{"name":"SetForce","description":"Adds a permanent force to this Actor, set to Vector(0, 0, 0) to cancel","authority":"network-authority","parameters":[{"type":"Vector","name":"force"},{"type":"boolean","name":"is_local","default":"true","description":"Whether to apply the force in local space"}],"relations":{"functions":["GetForce"]}},{"name":"SetGravityEnabled","description":"Sets whether gravity is enabled on this Actor","authority":"authority","parameters":[{"type":"boolean","name":"gravity_enabled"}],"relations":{"functions":["IsGravityEnabled"]}},{"name":"SetHighlightEnabled","description":"Sets whether the highlight is enabled on this Actor, and which highlight index to use","description_long":"Sets whether the highlight is enabled on this Actor, and which highlight index to use. This will apply the highlight on every attached entity too","authority":"client","parameters":[{"type":"boolean","name":"is_enabled"},{"type":"integer","name":"index","default":"0","description":"Index to use (should be <code>0</code>, <code>1</code> or <code>2</code>)"}],"relations":{"etc":[{"label":"Client.SetHighlightColor()","url":"/docs/scripting-reference/static-classes/client#static-function-sethighlightcolor"}]}},{"name":"SetLifeSpan","description":"Sets the time (in seconds) before this Actor is destroyed. After this time has passed, the actor will be automatically destroyed.","authority":"authority","parameters":[{"type":"float","name":"seconds","description":"Seconds before being destroyed"}]},{"name":"SetLocation","description":"Sets this Actor\'s location in the game world","authority":"authority","parameters":[{"type":"Vector","name":"location"}],"relations":{"functions":["GetLocation"]}},{"name":"SetNetworkAuthority","description":"Sets the Player to have network authority over this Actor","description_long":"Sets the Player to have network authority over this Actor. This Player will be manually assigned to handle this Actor\'s physics and share its location with other clients. The authority assignment will still be overridden by the game automatically<br><br>Please refer to <a href=\\"/docs/core-concepts/scripting/authority-concepts#network-authority\\">Network Authority</a> for more information","authority":"server","parameters":[{"type":"Player","name":"player","default":"nil","description":"New player which will assume the Network Authority of this Actor"}],"relations":{"functions":["GetNetworkAuthority"]}},{"name":"SetNetworkAuthorityAutoDistributed","description":"Sets if this Actor will auto distribute the network authority between players","description_long":"Sets if this Actor will auto distribute the network authority between players when idle<br><br>Please refer to <a href=\\"/docs/core-concepts/scripting/authority-concepts#network-authority\\">Network Authority</a> for more information","authority":"server","parameters":[{"type":"boolean","name":"auto_distribute","description":"If this Actor will be auto network distributed"}]},{"name":"SetOutlineEnabled","description":"Sets whether the outline is enabled on this Actor, and which outline index to use","description_long":"Sets whether the outline is enabled on this Actor, and which outline index to use. This will apply the outline on every attached entity too","authority":"client","parameters":[{"type":"boolean","name":"is_enabled"},{"type":"integer","name":"index","default":"0","description":"Index to use (should be <code>0</code>, <code>1</code> or <code>2</code>)"}],"relations":{"etc":[{"label":"Client.SetOutlineColor()","url":"/docs/scripting-reference/static-classes/client#static-function-setoutlinecolor"}]}},{"name":"SetRelativeLocation","description":"Sets this Actor\'s relative location in local space (only if this actor is attached)","authority":"authority","parameters":[{"type":"Vector","name":"relative_location"}],"relations":{"functions":["GetRelativeLocation"]}},{"name":"SetRelativeRotation","description":"Sets this Actor\'s relative rotation in local space (only if this actor is attached)","authority":"authority","parameters":[{"type":"Rotator","name":"relative_rotation"}],"relations":{"functions":["GetRelativeRotation"]}},{"name":"SetRotation","description":"Sets this Actor\'s rotation in the game world","authority":"authority","parameters":[{"type":"Rotator","name":"rotation"}],"relations":{"functions":["GetRotation"]}},{"name":"SetScale","description":"Sets this Actor\'s scale","authority":"authority","parameters":[{"type":"Vector","name":"scale"}],"relations":{"functions":["GetScale"]}},{"name":"SetVisibility","description":"Sets whether the actor is visible or not","authority":"both","parameters":[{"type":"boolean","name":"is_visible"}]},{"name":"TranslateTo","description":"Smoothly moves this actor to a location over a certain time","authority":"network-authority","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"time","description":"Time to interpolate from current location to target location"},{"type":"float","name":"exp","default":"0","description":"Exponent used to smooth interpolation. Use <code>0</code> for linear movement"}]},{"name":"WasRecentlyRendered","description":"Gets if this Actor was recently rendered on screen","authority":"client","return":[{"type":"boolean"}]}],"events":[{"authority":"server","name":"DimensionChange","description":"Triggered when an Actor changes it\'s dimension","arguments":[{"name":"self","type":"Actor"},{"name":"old_dimension","type":"integer"},{"name":"new_dimension","type":"integer"}],"relations":{"functions":["SetDimension","GetDimension"]}}],"inheritance_children":["Billboard","Blueprint","Cable","Character","CharacterSimple","Decal","Gizmo","Grenade","Light","Melee","Particle","Prop","SceneCapture","StaticMesh","Sound","TextRender","Trigger","VehicleWheeled","VehicleWater","Weapon","Widget3D"]}'),r=JSON.parse('{"name":"Pickable","description":"<b>Pickables</b> are special Actors which can be <b>grabbed</b>, <b>held</b> and <b>used</b> by Characters.","is_base":true,"functions":[{"authority":"both","name":"AddSkeletalMeshAttached","description":"Attaches a Skeletal Mesh as master pose to this entity","description_long":"Spawns and attaches a SkeletalMesh to this Pickable, the SkeletalMesh must have the same skeleton used by this Actor\'s mesh, and will follow all animations from it. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_path","description":"Path to SkeletalMesh asset to attach"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["RemoveSkeletalMeshAttached"]}},{"authority":"both","name":"AddStaticMeshAttached","description":"Attaches a Static Mesh to this entity","description_long":"Spawns and attaches a StaticMesh to this Pickable in a Socket with a relative location and rotation. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the StaticMesh"},{"type":"StaticMeshPath","name":"static_mesh_path","description":"Path to StaticMesh asset to attach"},{"type":"string","name":"socket","default":"","description":"Bone socket to attach to"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":"Relative location"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Relative rotation"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["SetStaticMeshAttachedTransform","RemoveStaticMeshAttached"]}},{"authority":"both","name":"GetAllSkeletalMeshAttached","description":"Gets all Skeletal Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetAllStaticMeshAttached","description":"Gets all Static Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetHandler","description":"Gets the Character, if it exists, that\'s holding this Pickable","return":[{"type":"Character?"}]},{"authority":"both","name":"GetHandlingMode","description":"Gets the Handling Mode of this Pickable","return":[{"type":"HandlingMode"}]},{"authority":"both","name":"GetMesh","description":"Gets the name of the asset this Pickable uses","return":[{"name":"asset","type":"SkeletalMeshPath"}]},{"authority":"server","name":"PullUse","description":"Pulls the usage of this Pickable (will start firing if this is a weapon)","parameters":[{"type":"float","name":"release_use_after","default":"-1","description":"Time in seconds to automatically release the usage (-1 will not release, 0 will release one tick after)"}]},{"authority":"server","name":"ReleaseUse","description":"Releases the usage of this Pickable (will stop firing if this is a weapon)"},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if it exists, a SkeletalMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the SkeletalMesh to remove"}],"relations":{"functions":["AddSkeletalMeshAttached"]}},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if it exists, a StaticMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh to remove"}],"relations":{"functions":["AddStaticMeshAttached"]}},{"authority":"server","name":"SetAttachmentSettings","description":"Sets the Attachment Settings for this Pickable (how it attaches to the Character when Picking up)","parameters":[{"type":"Vector","name":"relative_location","description":"Location relative to the Socket"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Rotation relative to the Socket"},{"type":"string","name":"socket","default":"hand_r_socket","description":"Character Socket to attach to when picked up"}]},{"authority":"server","name":"SetCrosshairMaterial","description":"Sets the crosshair material for this Pickable","parameters":[{"type":"MaterialPath","name":"material_asset","description":"Asset path to the crosshair material"}]},{"authority":"server","name":"SetPickable","description":"Sets if this Pickable can be picked up from ground by the player","parameters":[{"type":"boolean","name":"is_pickable"}]},{"authority":"both","name":"SetStaticMeshAttachedTransform","description":"Sets a Static Mesh Attached location and rotation","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh set with AddStaticMeshAttached"},{"type":"Vector","name":"relative_location","description":"New relative location"},{"type":"Rotator","name":"relative_rotation","description":"New relative rotation"}],"relations":{"functions":["AddStaticMeshAttached"]}}],"events":[{"authority":"both","name":"Drop","description":"When a Character drops this Pickable","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has been dropped"},{"type":"Character","name":"character","description":"The Character that dropped it"},{"type":"boolean","name":"was_triggered_by_player","description":"If the Player actively pressed the Drop binding to drop"}]},{"authority":"both","name":"Hit","description":"When this Pickable hits something","arguments":[{"type":"Pickable","name":"self","description":"The Actor that was hit"},{"type":"float","name":"impact_force","description":"The intensity of the hit normalized by the Pickable\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction of the hit"},{"type":"Vector","name":"impact_location","description":"The world space location of the impact"},{"type":"Vector","name":"velocity","description":"The Pickable\'s velocity at the moment it hit"}]},{"authority":"server","name":"Interact","description":"Triggered when a Character interacts with this Pickable (i.e. tries to pick it up)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable that just got interacted with"},{"type":"Character","name":"character","description":"The Character that interacted with it"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent the interaction"}]},{"authority":"both","name":"PickUp","description":"Triggered When a Character picks this up","arguments":[{"type":"Pickable","name":"self","description":"The Pickable that just got picked up"},{"type":"Character","name":"character","description":"The Character that picked it up"}]},{"authority":"both","name":"PullUse","description":"Triggered when a Character presses the use button for this Pickable (i.e. clicks left mouse button with this equipped)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has just been used"},{"type":"Character","name":"character","description":"The Character that used it"}]},{"authority":"both","name":"ReleaseUse","description":"Triggered when a Character releases the use button for this Pickable (i.e. releases left mouse button with this equipped)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has just stopped being used"},{"type":"Character","name":"character","description":"The Character that stopped using it"}]}],"inheritance_children":["Grenade","Melee","Weapon"]}'),o=JSON.parse('{"name":"Paintable","description":"Base class for all Paintable entities. This class provides customization for materials, exposing common functions to allow you to set custom material parameters, including loading textures from disk.","is_base":true,"functions":[{"authority":"both","name":"ResetMaterial","description":"Resets the material from the specified index to the original one","parameters":[{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to reset the material. Pass empty to reset on main mesh only"}]},{"authority":"both","name":"SetMaterial","description":"Sets the material at the specified index of this Actor","parameters":[{"type":"MaterialPath","name":"material_path","description":"The new Material to apply"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material. Pass empty to set on main mesh only"}]},{"authority":"both","name":"SetMaterialColorParameter","description":"Sets a Color parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"Color","name":"color","description":"The value to set"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material parameter. Pass empty to set on main mesh only"}]},{"authority":"client","name":"SetMaterialFromCanvas","description":"Sets the material at the specified index of this Actor to a Canvas object","parameters":[{"type":"Canvas","name":"canvas","description":"The Canvas object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"}]},{"authority":"client","name":"SetMaterialFromSceneCapture","description":"Sets the material at the specified index of this Actor to a SceneCapture object","parameters":[{"type":"SceneCapture","name":"scene_capture","description":"The SceneCapture object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"}]},{"authority":"client","name":"SetMaterialFromWebUI","description":"Sets the material at the specified index of this Actor to a WebUI object","parameters":[{"type":"WebUI","name":"webui","description":"The WebUI object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"}]},{"authority":"both","name":"SetMaterialScalarParameter","description":"Sets a Scalar parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"float","name":"scalar","description":"The value to set"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material parameter. Pass empty to set on main mesh only"}]},{"authority":"both","name":"SetMaterialTextureParameter","description":"Sets a texture parameter in this Actor\'s material to an image on disk","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"ImagePath","name":"texture_path","description":"The path to the texture"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material parameter. Pass empty to set on main mesh only"}]},{"authority":"both","name":"SetMaterialVectorParameter","description":"Sets a Vector parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"Vector","name":"vector","description":"The value to set"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material parameter. Pass empty to set on main mesh only"}]},{"authority":"both","name":"SetPhysicalMaterial","description":"Overrides this Actor\'s Physical Material with a new one","parameters":[{"type":"MaterialPath","name":"physical_material_path","description":"The Physical Material to override"}]}],"inheritance_children":["Billboard","Blueprint","Cable","Character","CharacterSimple","Decal","Grenade","Melee","Prop","StaticMesh","TextRender","VehicleWheeled","VehicleWater","Weapon"]}'),s=JSON.parse('{"name":"Damageable","description":"Base class for all Damageable entities. It provides Health and Damage related methods and events.","is_base":true,"functions":[{"authority":"server","name":"ApplyDamage","return":[{"type":"integer","description":"the damage applied"}],"description":"Do damage to this entity","description_long":"Do damage to this entity, will trigger all related events and apply modified damage based on bone. Also will apply impulse if it\'s a heavy explosion","parameters":[{"type":"integer","name":"damage"},{"type":"string","name":"bone_name","default":""},{"type":"DamageType","name":"damage_type","default":"DamageType.Shot"},{"type":"Vector","name":"from_direction","default":"Vector(0, 0, 0)"},{"type":"Player","name":"instigator","default":"nil","description":"The player which caused the damage"},{"type":"any","name":"causer","default":"nil","description":"The object which caused the damage"}]},{"authority":"both","name":"GetHealth","description":"Gets the current health","return":[{"type":"integer","name":"health"}],"relations":{"functions":["SetHealth"]}},{"authority":"both","name":"GetMaxHealth","description":"Gets the Max Health","return":[{"type":"integer","name":"max_health"}],"relations":{"functions":["SetMaxHealth"]}},{"authority":"server","name":"Respawn","description":"Respawns the Entity, fullying it\'s Health and moving it to it\'s Initial Location","parameters":[{"type":"Vector","name":"location","default":"initial location","description":"If not passed will use the initial location passed when the Entity spawned"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"SetHealth","description":"Sets the Health of this Entity","description_long":"Sets the Health of this Entity. You can only call it on alive Entities (call Respawn first)","parameters":[{"type":"integer","name":"new_health"}],"relations":{"functions":["GetHealth"]}},{"authority":"server","name":"SetMaxHealth","description":"Sets the MaxHealth of this Entity","parameters":[{"type":"integer","name":"max_health"}],"relations":{"functions":["GetMaxHealth"]}}],"events":[{"authority":"both","name":"Death","description":"When Entity Dies","arguments":[{"type":"Damageable","name":"self"},{"type":"integer","name":"last_damage_taken"},{"type":"string","name":"last_bone_damaged"},{"type":"DamageType","name":"damage_type_reason"},{"type":"Vector","name":"hit_from_direction"},{"type":"Player?","name":"instigator"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"authority":"both","name":"HealthChange","description":"When Entity has it\'s Health changed, or because took damage or manually set through scripting or respawning","arguments":[{"type":"Damageable","name":"self"},{"type":"integer","name":"old_health"},{"type":"integer","name":"new_health"}]},{"authority":"both","name":"Respawn","description":"When Entity Respawns","arguments":[{"type":"Damageable","name":"self"}]},{"authority":"both","name":"TakeDamage","description":"Triggered when this Entity takes damage","arguments":[{"type":"Damageable","name":"self"},{"type":"integer","name":"damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}],"return":[{"type":"boolean","description":"Return <code>false</code> to cancel the damage (will still display animations, particles and apply impact forces)"}]}],"inheritance_children":["Character","CharacterSimple","VehicleWheeled","VehicleWater"]}'),l=JSON.parse('{"name":"Vehicle","description":"Base class for all Vehicle entities.","is_base":true,"functions":[{"authority":"both","name":"AddSkeletalMeshAttached","description":"Attaches a Skeletal Mesh as master pose to this entity","description_long":"Spawns and attaches a SkeletalMesh to this Pickable, the SkeletalMesh must have the same skeleton used by this Actor\'s mesh, and will follow all animations from it. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_path","description":"Path to SkeletalMesh asset to attach"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["RemoveSkeletalMeshAttached"]}},{"authority":"both","name":"AddStaticMeshAttached","description":"Attaches a Static Mesh to this entity","description_long":"Spawns and attaches a StaticMesh to this Pickable in a Socket with a relative location and rotation. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the StaticMesh"},{"type":"StaticMeshPath","name":"static_mesh_path","description":"Path to StaticMesh asset to attach"},{"type":"string","name":"socket","default":"","description":"Bone socket to attach to"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":"Relative location"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Relative rotation"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["SetStaticMeshAttachedTransform","RemoveStaticMeshAttached"]}},{"authority":"both","name":"GetAllSkeletalMeshAttached","description":"Gets all Skeletal Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetAllStaticMeshAttached","description":"Gets all Static Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetDoors","description":"Gets all configured Doors","return":[{"type":"table","table_properties":[{"name":"seat_index","type":"integer"},{"name":"offset_location","type":"Vector"},{"name":"seat_location","type":"Vector"},{"name":"seat_rotation","type":"Rotator"},{"name":"leave_lateral_offset","type":"integer"},{"name":"sphere_radius","type":"integer"}]}]},{"authority":"both","name":"GetMesh","description":"Gets the Asset name","return":[{"type":"SkeletalMeshPath","description":"asset path","name":"asset"}]},{"authority":"both","name":"GetPassenger","description":"Gets a passenger from a seat","parameters":[{"type":"integer","name":"seat"}],"return":[{"type":"Character","description":"or nil if no passenger in seat","name":"passenger"}]},{"authority":"both","name":"GetPassengers","description":"Gets all passengers","return":[{"type":"Character[]","name":"passengers"}]},{"authority":"both","name":"PlayAnimation","description":"Plays an Animation on this Vehicle","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":"DefaultSlot"},{"type":"boolean","name":"loop_indefinitely","default":"false","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"blend_in_time","default":"0.25","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"blend_out_time","default":"0.25","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"play_rate","default":"1.0","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group. This parameter is only used if the Vehicle has an Animation Blueprint"}]},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if it exists, a SkeletalMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the SkeletalMesh to remove"}],"relations":{"functions":["AddSkeletalMeshAttached"]}},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if it exists, a StaticMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh to remove"}],"relations":{"functions":["AddStaticMeshAttached"]}},{"authority":"server","name":"SetDoor","description":"Adds a Door to the Vehicle","description_long":"Adds a Door at offset_location from root which will pose the Character at seat_location with seat_rotation rotation.","parameters":[{"type":"integer","name":"seat_index"},{"type":"Vector","name":"offset_location"},{"type":"Vector","name":"seat_location"},{"type":"Rotator","name":"seat_rotation"},{"type":"integer","name":"trigger_radius"},{"type":"integer","name":"leave_lateral_offset","description":"It\'s where the Character will be ejected when leaving it (e.g. -150 for left door or 150 for right door)"}]},{"authority":"server","name":"SetExplosionSettings","description":"Configures the Explosion Settings when health reaches zero","parameters":[{"type":"Vector","name":"engine_relative_location","description":"Relative location of the Engine. Used to apply particles and effects."},{"type":"table","name":"materials_index_burnt_override","description":"List of material indexes to override to burnt when exploded. Leave it empty for all indexes."},{"type":"table","name":"materials_index_burnt_invisible","description":"List of material indexes to override to invisible when exploded. Leave it empty for all indexes."}],"examples":[{"title":"Vehicle Explosion Settings","content":"my_vehicle:SetExplosionSettings(Vector(-50, 0, 0), { 1, 2, 4 }, { 3 })"}]},{"authority":"both","name":"SetStaticMeshAttachedTransform","description":"Sets a Static Mesh Attached location and rotation","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh set with AddStaticMeshAttached"},{"type":"Vector","name":"relative_location","description":"New relative location"},{"type":"Rotator","name":"relative_rotation","description":"New relative rotation"}],"relations":{"functions":["AddStaticMeshAttached"]}}],"events":[{"name":"CharacterAttemptEnter","description":"Triggered when a Character attempts to enter the Vehicle","authority":"server","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"},{"type":"integer","name":"seat","description":"The seat index"}],"return":[{"type":"boolean","description":"Return false to prevent it"}]},{"name":"CharacterAttemptLeave","description":"Triggered when a Character attempts to leave the Vehicle","authority":"server","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"}],"return":[{"type":"boolean","description":"Return false to prevent it"}]},{"name":"CharacterEnter","description":"Triggered when a Character fully enters the Vehicle","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"},{"type":"integer","name":"seat","description":"The seat index"}]},{"name":"CharacterLeave","description":"Triggered when a Character fully leaves the Vehicle","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"}]},{"name":"Hit","description":"Triggered when Vehicle hits something","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"integer","name":"impact_force","description":"The intensity of the Hit normalized by the Vehicle\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Vehicle velocity at the moment it hits"}]},{"name":"TakeDamage","authority":"server","description":"Triggered when this Vehicle takes damage","arguments":[{"type":"Vehicle","name":"self"},{"type":"integer","name":"damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}],"return":[{"type":"boolean","description":"Return <code>false</code> to cancel the damage (will still display animations, particles and apply impact forces)"}]}],"inheritance_children":["VehicleWheeled","VehicleWater"]}'),c=JSON.parse('{"name":"Pawn","description":"Base class for all Character entities.","is_base":true,"functions":[{"authority":"both","name":"AddSkeletalMeshAttached","description":"Attaches a Skeletal Mesh as master pose to this entity","description_long":"Spawns and attaches a SkeletalMesh to this entity, the SkeletalMesh must have the same skeleton used by this Actor\'s mesh, and will follow all animations from it. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_path","description":"Path to SkeletalMesh asset to attach"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["RemoveSkeletalMeshAttached"]}},{"authority":"both","name":"AddStaticMeshAttached","description":"Attaches a Static Mesh to this entity","description_long":"Spawns and attaches a StaticMesh to this entity in a Socket with a relative location and rotation. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the StaticMesh"},{"type":"StaticMeshPath","name":"static_mesh_path","description":"Path to StaticMesh asset to attach"},{"type":"string","name":"socket","default":"","description":"Bone socket to attach to"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":"Relative location"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Relative rotation"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["SetStaticMeshAttachedTransform","RemoveStaticMeshAttached"]}},{"authority":"authority","name":"Follow","description":"AI: Makes this Character to follow another actor","description_long":"AI: Makes this Character to follow another actor<br/><br/>Triggers event <a href=\'pawn#event-movecomplete\'>MoveComplete</a>","parameters":[{"type":"Actor","name":"actor","description":"Actor to follow"},{"type":"float","name":"acceptance_radius","default":"50","description":"Radius to consider success"},{"type":"boolean","name":"stop_on_succeed","default":"false","description":"Whether to stop when reaching the target"},{"type":"boolean","name":"stop_on_fail","default":"false","description":"Whether to stop when failed to reach the target"},{"type":"float","name":"update_rate","default":"0.25","description":"How often to recalculate the AI path"}],"relations":{"functions":["StopMovement","MoveTo","GetMovingTo"],"events":["MoveComplete"]}},{"authority":"both","name":"GetAllSkeletalMeshAttached","description":"Gets all Skeletal Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetAllStaticMeshAttached","description":"Gets all Static Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetCapsuleSize","description":"Gets the Capsule Size","return":[{"type":"table","table_properties":[{"name":"Radius","type":"integer"},{"name":"HalfHeight","type":"integer"}],"name":"capsule_size"}],"relations":{"functions":["SetCapsuleSize"]}},{"authority":"both","name":"GetControlRotation","description":"Gets the Control Rotation","return":[{"type":"Rotator","name":"control_rotation"}]},{"authority":"both","name":"GetGravityScale","description":"Gets the gravity scale","return":[{"type":"float","name":"gravity_scale"}],"relations":{"functions":["SetGravityScale"]}},{"authority":"both","name":"GetMesh","description":"Gets the base Mesh Asset","return":[{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset"}]},{"authority":"both","name":"GetMovingTo","description":"Gets the Moving To location","return":[{"type":"Vector","description":"the moving to location or Vector(0, 0, 0) if not moving","name":"location"}]},{"authority":"both","name":"GetPlayer","description":"Gets the possessing Player","return":[{"type":"Player?","name":"possesser"}],"relations":{"functions":["Possess","UnPossess"]}},{"authority":"both","name":"HideBone","description":"Hides a bone of this Character","description_long":"Hides a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","default":"","description":"Bone to hide"}],"relations":{"functions":["UnHideBone","IsBoneHidden"]}},{"authority":"both","name":"IsBoneHidden","return":[{"type":"boolean","description":"if the bone is hidden","name":"bone_name"}],"description":"Gets if a bone is hidden","parameters":[{"type":"string","name":"bone_name","description":"Bone to check"}],"relations":{"functions":["UnHideBone","HideBone"]}},{"authority":"authority","name":"Jump","description":"Triggers this Character to jump"},{"authority":"authority","name":"MoveTo","description":"AI: Makes this Character to walk to the Location","description_long":"AI: Makes this Character to walk to the Location<br/><br/>Triggers event <a href=\'pawn#event-movecomplete\'>MoveComplete</a>","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"acceptance_radius","default":"50"}],"relations":{"functions":["StopMovement","Follow","GetMovingTo"],"events":["MoveComplete"]}},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if it exists, a SkeletalMesh from this entity given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the SkeletalMesh to remove"}],"relations":{"functions":["AddSkeletalMeshAttached"]}},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if it exists, a StaticMesh from this enitity given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh to remove"}],"relations":{"functions":["AddStaticMeshAttached"]}},{"authority":"authority","name":"SetAIAvoidanceSettings","description":"AI: Configures the RVO (Reciprocal Velocity Obstacles) Avoidance system used by the AIs when moving","parameters":[{"type":"boolean","name":"enabled","description":"Whether to enable the RVO Avoidance"},{"type":"integer","name":"avoidance_consideration_radius","default":"300","description":"The radius of the circle used to determine the avoidance distance"}]},{"authority":"authority","name":"SetBrakingSettings","description":"Sets the Movement Braking Settings of this Character","parameters":[{"type":"float","name":"ground_friction","default":"2"},{"type":"float","name":"braking_friction_factor","default":"2"},{"type":"integer","name":"braking_walking","default":"96"},{"type":"integer","name":"braking_flying","default":"3000"},{"type":"integer","name":"braking_swimming","default":"10"},{"type":"integer","name":"braking_falling","default":"0"}]},{"authority":"authority","name":"SetCanCrouch","description":"Sets if this Character is allowed to Crouch and to Prone","parameters":[{"type":"boolean","name":"can_crouch"}]},{"authority":"authority","name":"SetCanJump","description":"Sets if this Character is allowed to Jump","parameters":[{"type":"boolean","name":"can_jump"}]},{"authority":"authority","name":"SetCapsuleSize","description":"Sets this Character\'s Capsule size","description_long":"Sets this Character\'s Capsule size (will affect Camera location and Character\'s collision)","parameters":[{"type":"integer","name":"radius","description":"Default is 42"},{"type":"integer","name":"half_height","description":"Default is 96"}],"relations":{"functions":["GetCapsuleSize"]}},{"authority":"authority","name":"SetGravityScale","description":"Changes the Gravity Scale","description_long":"Changes the Gravity Scale of this Character (can be negative)","parameters":[{"type":"float","name":"gravity_scale"}],"relations":{"functions":["GetGravityScale"]}},{"authority":"authority","name":"SetJumpZVelocity","description":"Sets the velocity of the jump","parameters":[{"type":"integer","name":"jump_z_velocity","description":"Default is 450"}]},{"authority":"both","name":"SetStaticMeshAttachedTransform","description":"Sets a Static Mesh Attached location and rotation","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh set with AddStaticMeshAttached"},{"type":"Vector","name":"relative_location","description":"New relative location"},{"type":"Rotator","name":"relative_rotation","description":"New relative rotation"}],"relations":{"functions":["AddStaticMeshAttached"]}},{"authority":"authority","name":"StopAnimation","description":"Stops an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_asset"}]},{"authority":"authority","name":"StopMovement","description":"AI: Stops the movement","description_long":"AI: Stops the movement<br/><br/>Triggers event <a href=\'pawn#event-movecomplete\'>MoveComplete</a>","relations":{"functions":["Follow","MoveTo","GetMovingTo"],"events":["MoveComplete"]}},{"authority":"both","name":"UnHideBone","description":"UnHide a bone of this Character","description_long":"UnHide a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","description":"Bone to unhide"}],"relations":{"functions":["HideBone","IsBoneHidden"]}}],"events":[{"authority":"client","name":"AnimationBeginNotify","description":"When an Animation Montage Notify begins","arguments":[{"type":"Character","name":"self"},{"type":"string","name":"notify_name"},{"type":"string","name":"animation_name"},{"type":"number","name":"trigger_begin_time"},{"type":"number","name":"trigger_end_time"}]},{"authority":"client","name":"AnimationEndNotify","description":"When an Animation Montage Notify ends","arguments":[{"type":"Character","name":"self"},{"type":"string","name":"notify_name"},{"type":"string","name":"animation_name"},{"type":"number","name":"trigger_begin_time"},{"type":"number","name":"trigger_end_time"}]},{"authority":"both","name":"MoveComplete","description":"Called when AI reaches it\'s destination, or when it fails","arguments":[{"type":"Pawn","name":"self"},{"type":"boolean","name":"succeeded"}],"relations":{"functions":["StopMovement","MoveTo","Follow","GetMovingTo"]}},{"authority":"both","name":"Possess","description":"When Character is possessed by a Player","arguments":[{"type":"Pawn","name":"self"},{"type":"Player","name":"player"}],"relations":{"functions":["UnPossess","GetPlayer"]}},{"authority":"both","name":"UnPossess","description":"When Character is unpossessed by a Player","arguments":[{"type":"Pawn","name":"self"},{"type":"Player","name":"old_player"}],"relations":{"functions":["Possess","GetPlayer"]}}],"inheritance_children":["Character","CharacterSimple"]}'),p=JSON.parse('{"name":"Billboard","description":"A Billboard is a 2D Material that will be rendered always facing the camera.","authority":"client","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"MaterialPath","name":"material_asset"},{"type":"Vector2D","name":"size","default":"Vector2D(32, 32)"},{"type":"boolean","name":"size_in_screen_space","default":"false","description":"Size is in Screen or World Space"}]}]}'),d=JSON.parse('{"name":"Blueprint","description":"A Blueprint Class allows spawning any Unreal Blueprint Actor in nanos world.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"BlueprintPath","name":"blueprint_asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"}]}],"functions":[{"name":"BindBlueprintEventDispatcher","description":"Assigns and Binds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback","description":"Callback function to call","function_parameters":[{"name":"self","type":"Blueprint"},{"name":"params","type":"any..."}]}],"return":[{"type":"function","description":"the callback itself"}]},{"name":"CallBlueprintEvent","return":[{"type":"any...","description":"the function return values"}],"description":"Calls a Blueprint Event or Function","description_long":"Calls a Blueprint Event or Function<br/>Returns all Function return values on <strong>Client Side</strong>","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"name":"GetBlueprintPropertyValue","description":"Gets a Blueprint Property/Variable value","authority":"client","return":[{"type":"any","description":"the value","name":"value"}],"parameters":[{"type":"string","name":"property_name"}],"relations":{"functions":["SetBlueprintPropertyValue"]}},{"name":"SetBlueprintPropertyValue","description":"Sets a Blueprint Property/Variable value directly","authority":"client","parameters":[{"type":"string","name":"property_name"},{"type":"any","name":"value"}],"relations":{"functions":["GetBlueprintPropertyValue"]}},{"name":"UnbindBlueprintEventDispatcher","description":"Unbinds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback?","description":"Optional callback to unbind"}]}]}'),h=JSON.parse('{"name":"Cable","description":"A Cable represents a Physics Constraint which joins two Actors with a rope-like visual representation between them.","authority":"server","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"boolean","name":"enable_visuals","default":"true","description":"Toggles the cable visuals"}]}],"functions":[{"authority":"server","name":"AttachEndTo","description":"Attached the end of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"string","name":"bone_name","default":"","description":"Which bone to attach to. If empty it will be attached to the Actor, otherwise to the Mesh at the bone/socket"}]},{"authority":"server","name":"AttachStartTo","description":"Attached the beginning of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"string","name":"bone_name","default":"","description":"Which bone to attach to. If empty it will be attached to the Actor, otherwise to the Mesh at the bone/socket"}]},{"authority":"server","name":"DetachEnd","description":"Detaches the End of this Cable"},{"authority":"server","name":"DetachStart","description":"Detaches the Start of this Cable"},{"authority":"both","name":"GetAttachedEndTo","description":"Gets the Actor attached to End","return":[{"type":"Actor","description":"the Actor or nil","name":"other"}]},{"authority":"both","name":"GetAttachedStartTo","description":"Gets the Actor attached to Start","return":[{"type":"Actor","description":"the Actor or nil","name":"other"}]},{"authority":"server","name":"SetAngularLimits","description":"Sets the Physics Angular Limits of this cable","parameters":[{"type":"ConstraintMotion","name":"swing_1_motion","description":"Indicates whether the Swing1 limit is used"},{"type":"ConstraintMotion","name":"swing_2_motion","description":"Indicates whether the Swing2 limit is used"},{"type":"ConstraintMotion","name":"twist_motion","description":"Indicates whether the Twist limit is used"},{"type":"float","name":"swing_1_limit","default":"0","description":"Angle of movement along the XY plane. This defines the first symmetric angle of the cone"},{"type":"float","name":"swing_2_limit","default":"0","description":"Angle of movement along the XZ plane. This defines the second symmetric angle of the cone"},{"type":"float","name":"twist_limit","default":"0","description":"Symmetric angle of roll along the X-axis"}]},{"authority":"both","name":"SetCableSettings","description":"Set the overall settings for this cable (visuals only)","parameters":[{"type":"float","name":"length","description":"Rest length of the cable. Default is 100. Min is 0"},{"type":"integer","name":"num_segments","description":"How many segments the cable has. Default is 10. Min is 1","default":"10"},{"type":"integer","name":"solver_iterations","description":"The number of solver iterations controls how \'stiff\' the cable is. Default is 1. Max is 16","default":"1"},{"type":"boolean","name":"enable_stiffness","description":"Add stiffness constraints to cable. Default is true","default":"true"}]},{"authority":"both","name":"SetForces","description":"Set the forces the cable has applied (visuals only)","parameters":[{"type":"Vector","name":"force","description":"Force vector (world space) applied to all particles in cable. Default is Vector(0, 0, 0)"},{"type":"float","name":"gravity_scale","default":"1","description":"Scaling applied to world gravity affecting this cable. Default is 1"}]},{"authority":"server","name":"SetLinearLimits","description":"Sets the Physics Linear Limits of this cable","description_long":"Sets the Physics Linear Limits of this cable. If use_soft_constraint is enabled, then stiffness and damping will be used, otherwise restitution will be used.<br/><br/>Note: this method must be called before attaching any cable end.","parameters":[{"type":"ConstraintMotion","name":"x_motion","description":"Indicates the linear constraint applied along the X-axis. Free implies no constraint at all. Locked implies no movement along X is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"y_motion","description":"Indicates the linear constraint applied along the Y-axis. Free implies no constraint at all. Locked implies no movement along Y is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"z_motion","description":"Indicates the linear constraint applied along theZX-axis. Free implies no constraint at all. Locked implies no movement along Z is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"float","name":"limit","default":"0","description":"The distance allowed between between the two joint reference frames. Distance applies on all axes enabled (one axis means line, two axes implies circle, three axes implies sphere)"},{"type":"float","name":"restitution","default":"0","description":"Controls the amount of bounce when the constraint is violated. A restitution value of 1 will bounce back with the same velocity the limit was hit. A value of 0 will stop dead"},{"type":"boolean","name":"use_soft_constraint","default":"false","description":"Whether we want to use a soft constraint (spring)"},{"type":"float","name":"stiffness","default":"0","description":"Stiffness of the soft constraint. Only used when Soft Constraint is on"},{"type":"float","name":"damping","default":"0","description":"Damping of the soft constraint. Only used when Soft Constraint is on"}]},{"authority":"both","name":"SetRenderingSettings","description":"Set the rendering settings of this cable (visuals only)","parameters":[{"type":"float","name":"width","description":"How wide the cable geometry is. Default is 6"},{"type":"integer","name":"num_sides","description":"Number of sides of the cable geometry. Default is 4"},{"type":"integer","name":"tile_material","description":"How many times to repeat the material along the length of the cable. Default is 1"}]}]}'),m=JSON.parse('{"name":"Canvas","description":"Canvas is an entity which you can draw onto it.","authority":"client","constructors":[{"name":"Default Constructor","parameters":[{"type":"boolean","name":"is_visible","default":"true","description":"Whether to draw it on screen"},{"type":"Color","name":"clear_color","default":"Color.TRANSPARENT","description":"Color to clear with (background color)"},{"type":"float","name":"auto_repaint_rate","default":"-1","description":"Rate to auto repaint (call Update event), pass 0 for every frame, -1 to disable"},{"type":"boolean","name":"should_clear_before_update","default":"true","description":"Whether to clear with Clear Color before updates"},{"type":"boolean","name":"auto_resize","default":"true","description":"Auto resize with screen\'s size"},{"type":"integer","name":"width","default":"0","description":"If not using auto_resize"},{"type":"integer","name":"height","default":"0","description":"If not using auto_resize"},{"type":"Vector2D","name":"screen_position","default":"Vector2D(0, 0)","description":"If not using auto_resize, offset when drawing to screen"}]}],"functions":[{"authority":"client","name":"Clear","description":"Clear the Canvas with a specific Color","parameters":[{"type":"Color","name":"clear_color"}]},{"authority":"client","name":"DrawBox","description":"Draws an unfilled box on the Canvas","description_long":"Draws an unfilled box on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"float","name":"thickness"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawLine","description":"Draws a line on the Canvas","description_long":"Draws a line on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"Vector2D","name":"screen_position_a"},{"type":"Vector2D","name":"screen_position_b"},{"type":"float","name":"thickness"},{"type":"Color","name":"render_color"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterial","description":"Draws a Material on the Canvas","description_long":"Draws a Material on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"MaterialPath","name":"material_path"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterialFromSceneCapture","description":"Draws a SceneCapture on the Canvas","description_long":"Draws a SceneCapture on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"SceneCapture","name":"scenecapture_entity"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterialFromWebUI","description":"Draws a WebUI on the Canvas","description_long":"Draws a WebUI on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"WebUI","name":"webui_entity"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawPolygon","description":"Draws a N-Polygon on the Canvas","description_long":"Draws a N-Polygon on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path","description":"Pass empty to use default white Texture"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"radius","default":"Vector2D(1, 1)"},{"type":"integer","name":"number_of_sides","default":"3"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawRect","description":"Draws a filled Rect on the Canvas","description_long":"Draws a fille Rect on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path","description":"Pass empty to use default white Texture"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawText","description":"Draws a Text on the Canvas","description_long":"Draws a Text on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/>Shadow and Outline won\'t work properly with Transparent <code>clear_color</code>","parameters":[{"type":"string","name":"text"},{"type":"Vector2D","name":"screen_position"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"integer","name":"font_size","default":"12"},{"type":"Color","name":"text_color","default":"Color.WHITE"},{"type":"float","name":"kerning","default":"0"},{"type":"boolean","name":"center_x","default":"false"},{"type":"boolean","name":"center_y","default":"false"},{"type":"Color","name":"shadow_color","default":"Color.TRANSPARENT"},{"type":"Vector2D","name":"shadow_offset","default":"Vector2D(1, 1)"},{"type":"boolean","name":"outlined","default":"false"},{"type":"Color","name":"outline_color","default":"Color.BLACK"}]},{"authority":"client","name":"DrawTexture","description":"Draws a Texture on the Canvas","description_long":"Draws a Texture on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"}]},{"authority":"client","name":"GetSize","description":"Gets the Canvas Size","return":[{"type":"Vector2D","description":"the current size","name":"size"}]},{"authority":"client","name":"Repaint","description":"Forces the repaint","description_long":"Forces the repaint, this will trigger Update event"},{"authority":"client","name":"Resize","description":"Resizes the Canvas if not using auto_resize","parameters":[{"type":"integer","name":"width"},{"type":"integer","name":"height"}]},{"authority":"client","name":"SetAutoRepaintRate","description":"Sets the repaint rate","description_long":"Sets it to -1 to stop auto repainting or 0 to repaint every frame","parameters":[{"type":"boolean","name":"auto_repaint_rate"}]},{"authority":"client","name":"SetAutoResize","description":"Sets if the canvas should auto resize to screen size","parameters":[{"type":"boolean","name":"auto_resize"}]},{"authority":"client","name":"SetScreenPosition","description":"Sets the Canvas Screen Position offset","parameters":[{"type":"Vector2D","name":"screen_position"}]},{"authority":"client","name":"SetVisibility","description":"Sets if it\'s visible on screen","parameters":[{"type":"boolean","name":"visible"}]}],"events":[{"name":"Update","authority":"client","description":"Called when the Canvas needs to be painted<br/><br/>You can only call <code>:Draw...()</code> methods from inside this event","arguments":[{"name":"self","type":"Canvas"},{"name":"width","type":"integer"},{"name":"height","type":"integer"}]}]}'),u=JSON.parse('{"name":"Character","description":"Characters represents Actors which can be possessed, can move and interact with world. They are the default Skeletal Mesh Character built for nanos world.","authority":"server","inheritance":["Entity","Actor","Pawn","Paintable","Damageable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"integer","name":"max_health","default":"100","description":"Current / Max Health"},{"type":"SoundPath","name":"death_sound","default":"nanos-world::A_Male_01_Death","description":"Played when Character dies"},{"type":"SoundPath","name":"pain_sound","default":"nanos-world::A_Male_01_Pain","description":"Played when Character takes damage"}]}],"functions":[{"authority":"both","name":"ClearMorphTargets","description":"Clear all Morph Target that are set to this Mesh","relations":{"functions":["SetMorphTarget","GetMorphTarget","GetAllMorphTargetNames"]}},{"authority":"server","name":"Drop","description":"Drops any Pickable the Character is holding","relations":{"functions":["GetPicked","PickUp"]}},{"authority":"server","name":"EnterVehicle","description":"Enters the Vehicle at Seat (0 - Driver)","parameters":[{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat","default":"0"}],"relations":{"functions":["GetVehicle","GetVehicleSeat"],"events":["EnterVehicle","AttemptEnterVehicle"]}},{"authority":"client","name":"GetAllMorphTargetNames","description":"Returns a table with all morph targets available","return":[{"type":"string[]","description":"table with all morph targets available"}],"relations":{"functions":["SetMorphTarget","GetMorphTarget","ClearMorphTargets"]}},{"authority":"both","name":"GetCameraMode","description":"Gets the camera mode","return":[{"type":"CameraMode","name":"camera_mode"}],"relations":{"functions":["SetCameraMode"]}},{"authority":"both","name":"GetCanAim","description":"Gets if can aim","return":[{"type":"boolean","name":"can_aim"}],"relations":{"functions":["SetCanAim"]}},{"authority":"both","name":"GetCanCrouch","description":"Gets if can crouch","return":[{"type":"boolean","name":"can_crouch"}]},{"authority":"both","name":"GetCanDrop","description":"Gets if can drop","return":[{"type":"boolean","name":"can_drop"}],"relations":{"functions":["SetCanDrop"]}},{"authority":"both","name":"GetCanGrabProps","description":"Gets if can grab props","return":[{"type":"boolean","name":"can_grab_props"}],"relations":{"functions":["SetCanGrabProps"]}},{"authority":"both","name":"GetCanPickupPickables","description":"Gets if can pickup Pickables (Weapons, Melee, Grenade...)","return":[{"type":"boolean","name":"can_pickup"}],"relations":{"functions":["SetCanPickupPickables"]}},{"authority":"both","name":"GetCanPunch","description":"Gets if can punch","return":[{"type":"boolean","name":"can_punch"}],"relations":{"functions":["SetCanPunch"]}},{"authority":"both","name":"GetCanSprint","description":"Gets if can sprint","return":[{"type":"boolean","name":"can_sprint"}],"relations":{"functions":["SetCanSprint"]}},{"authority":"both","name":"GetDamageMultiplier","description":"Gets the Damage Multiplier of a bone","return":[{"type":"float","description":"the damage multiplier of the bone","name":"multiplier"}],"parameters":[{"name":"bone_name","type":"string"}],"relations":{"functions":["SetDamageMultiplier"]}},{"authority":"both","name":"GetFallDamageTaken","description":"Gets the Fall Damage","return":[{"type":"integer","name":"damage"}],"relations":{"functions":["SetFallDamageTaken"]}},{"authority":"both","name":"GetFallingMode","description":"Gets the FallingMode","return":[{"type":"FallingMode"}]},{"authority":"both","name":"GetFlyingMode","description":"Gets if it\'s in Flying mode","return":[{"type":"boolean","name":"flying_mode"}],"relations":{"functions":["SetFlyingMode"]}},{"authority":"both","name":"GetGaitMode","description":"Gets the GaitMode","return":[{"type":"GaitMode","name":"gait_mode"}],"relations":{"functions":["SetGaitMode"]}},{"authority":"both","name":"GetGrabbedProp","description":"Gets the Grabbed Prop","return":[{"type":"Prop?","name":"prop"}],"relations":{"functions":["GrabProp","UnGrabProp"]}},{"authority":"both","name":"GetImpactDamageTaken","description":"Gets the impact damage taken","return":[{"type":"integer","name":"impact_damage"}],"relations":{"functions":["SetImpactDamageTaken"]}},{"authority":"both","name":"GetJumpZVelocity","description":"Gets the Jump Z Velocity","return":[{"type":"integer","name":"jump_z_velocity"}]},{"authority":"both","name":"GetMorphTarget","description":"Returns the value of a Morph Target","return":[{"type":"float","description":"value of the Morph Target","name":"value"}],"parameters":[{"type":"string","name":"name","description":"Morph Target Name"}],"relations":{"functions":["SetMorphTarget","ClearMorphTargets","GetAllMorphTargetNames"]}},{"authority":"both","name":"GetPicked","description":"Gets the Pickable if picking up","return":[{"type":"Pickable?","name":"object"}],"relations":{"functions":["PickUp","Drop"]}},{"authority":"both","name":"GetPunchDamage","description":"Gets the punch damage","return":[{"type":"integer","name":"punch_damage"}],"relations":{"functions":["SetPunchDamage"]}},{"authority":"both","name":"GetSpeedMultiplier","description":"Gets the speed multiplier","return":[{"type":"float","name":"speed_multiplier"}],"relations":{"functions":["SetSpeedMultiplier"]}},{"authority":"both","name":"GetStanceMode","description":"Gets the Stance Mode","return":[{"type":"StanceMode","name":"stance_mode"}],"relations":{"functions":["SetStanceMode"]}},{"authority":"both","name":"GetSwimmingMode","description":"Gets the Swimming Mode","return":[{"type":"SwimmingMode","name":"swimming_mode"}]},{"authority":"both","name":"GetTeam","description":"Gets the Team","return":[{"type":"integer","name":"team"}],"relations":{"functions":["SetTeam"]}},{"authority":"both","name":"GetVehicle","description":"Gets the entered Vehicle","return":[{"type":"Vehicle?","name":"vehicle"}],"relations":{"functions":["EnterVehicle","LeaveVehicle"]}},{"authority":"both","name":"GetVehicleSeat","description":"Gets the entered Vehicle seat","return":[{"type":"integer"}]},{"authority":"both","name":"GetViewMode","description":"Gets the View Mode","return":[{"type":"ViewMode","name":"view_mode"}],"relations":{"functions":["SetViewMode"]}},{"authority":"both","name":"GetWeaponAimMode","description":"Gets the Weapon Aim Mode","return":[{"type":"AimMode","name":"aim_mode"}],"relations":{"functions":["SetWeaponAimMode"]}},{"authority":"server","name":"GrabProp","description":"Gives a Prop to the Character","parameters":[{"type":"Prop","name":"prop"}],"relations":{"functions":["GetGrabbedProp"]}},{"authority":"both","name":"IsInputEnabled","description":"Gets if has input enabled","return":[{"type":"boolean","name":"is_enabled"}],"relations":{"functions":["SetInputEnabled"]}},{"authority":"both","name":"IsInRagdollMode","description":"Gets if Character is in ragdoll mode","return":[{"type":"boolean","name":"ragdoll_enabled"}]},{"authority":"both","name":"IsInvulnerable","description":"Gets if is invulnerable","return":[{"type":"boolean","name":"is_invulnerable"}],"relations":{"functions":["SetInvulnerable"]}},{"authority":"server","name":"LeaveVehicle","description":"Leaves the current Vehicle","relations":{"functions":["EnterVehicle","GetVehicle"],"events":["LeaveVehicle","AttemptLeaveVehicle"]}},{"authority":"server","name":"LookAt","description":"AI: Tries to make this Character to look at Location","parameters":[{"type":"Vector","name":"location","description":"World location to look"}]},{"authority":"server","name":"PickUp","description":"Gives a Melee/Grenade/Weapon (Pickable) to the Character","parameters":[{"type":"Pickable","name":"pickable"}],"relations":{"functions":["Drop","GetPicked"]}},{"authority":"server","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"AnimationSlotType","name":"slot_type","default":"AnimationSlotType.FullBody"},{"type":"boolean","name":"loop_indefinitely","default":"false"},{"type":"float","name":"blend_in_time","default":"0.25"},{"type":"float","name":"blend_out_time","default":"0.25"},{"type":"float","name":"play_rate","default":"1.0"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}],"relations":{"etc":[{"label":"StopAnimation","url":"/docs/next/scripting-reference/classes/base-classes/pawn#function-stopanimation"}]}},{"authority":"both","name":"ResetPhysicalAnimationSettings","description":"Resets all Physical Animation settings"},{"authority":"server","name":"SetAccelerationSettings","description":"Sets the Movement Max Acceleration of this Character","parameters":[{"type":"integer","name":"walking","default":"768"},{"type":"integer","name":"parachuting","default":"512"},{"type":"integer","name":"skydiving","default":"768"},{"type":"integer","name":"falling","default":"128"},{"type":"integer","name":"swimming","default":"256"},{"type":"integer","name":"swimming_surface","default":"256"},{"type":"integer","name":"flying","default":"1024"}]},{"authority":"server","name":"SetAirControl","description":"Sets the amount of movement control allowed when it is in air","parameters":[{"type":"float","name":"air_control","default":"0.2","description":"When falling, amount of lateral movement control available to the character. 0 = no control, 1 = full control at max speed of MaxWalkSpeed"},{"type":"float","name":"boost_multiplier","default":"512","description":"When falling, multiplier applied to air_control when lateral velocity is less than boost_velocity_threshold. Setting this to zero will disable air control boosting. Final result is clamped at 1"},{"type":"float","name":"boost_velocity_threshold","default":"25","description":"When falling, if lateral velocity magnitude is less than this value, air_control is multiplied by boost_multiplier. Setting this to zero will disable air control boosting"}]},{"authority":"server","name":"SetAnimationIdleWalkRunCrouching","description":"Sets the Blend Space (2D) Animation for Crouching<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"AnimationPath","name":"blend_space_path"},{"type":"boolean","name":"enable_turn_in_place","default":"false"}]},{"authority":"server","name":"SetAnimationIdleWalkRunProning","description":"Sets the Blend Space (2D) Animation for Proning<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"AnimationPath","name":"blend_space_path"}]},{"authority":"server","name":"SetAnimationIdleWalkRunStanding","description":"Sets the Blend Space (2D) Animation for Standing","description_long":"Sets the Blend Space (2D) Animation for Standing<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"AnimationPath","name":"blend_space_path"},{"type":"boolean","name":"enable_turn_in_place","default":"false"}]},{"authority":"server","name":"SetAnimationsTransitionCrouchingProning","description":"Sets the Transition Animation between Crouching and Proning","parameters":[{"type":"AnimationPath","name":"crouching_to_proning"},{"type":"AnimationPath","name":"pronng_to_crouching"}]},{"authority":"server","name":"SetAnimationsTransitionStandingCrouching","description":"Sets the Transition Animation between Standing and Crouching","parameters":[{"type":"AnimationPath","name":"standing_to_crouching"},{"type":"AnimationPath","name":"crouching_to_standing"}]},{"authority":"server","name":"SetCameraMode","description":"Sets the Camera Mode","description_long":"Sets the Camera Mode (i.e. Only TPS, FPS or if allow both)<br/><br/>Using FPSOnly CameraMode on AI will lock his body rotation (when using LookAt)","parameters":[{"type":"CameraMode","name":"camera_mode"}],"relations":{"functions":["GetCameraMode"]}},{"authority":"client","name":"SetCameraOffset","description":"Sets the Camera Offset (only affects TPS)","parameters":[{"type":"Vector","name":"camera_offset"}]},{"authority":"server","name":"SetCanAim","description":"Sets if this Character is allowed to Aim","parameters":[{"type":"boolean","name":"can_aim"}],"relations":{"functions":["GetCanAim"]}},{"authority":"server","name":"SetCanDeployParachute","description":"Sets if this Character is allowed to deploy the Parachute","parameters":[{"type":"boolean","name":"can_deploy_parachute"}]},{"authority":"server","name":"SetCanDive","description":"Sets if this Character is allowed to Dive","parameters":[{"type":"boolean","name":"can_dive"}]},{"authority":"server","name":"SetCanDrop","description":"Sets if this Character is allowed to Drop the Picked up item","parameters":[{"type":"boolean","name":"can_drop"}],"relations":{"functions":["GetCanDrop"]}},{"authority":"server","name":"SetCanGrabProps","description":"Sets if this Character is allowed to Grab any Prop","parameters":[{"type":"boolean","name":"can_grab_props"}],"relations":{"functions":["GetCanGrabProps"]}},{"authority":"server","name":"SetCanPickupPickables","description":"Sets if this Character is allowed to Pick up any Pickable (Weapon, Grenade, Melee...)","parameters":[{"type":"boolean","name":"can_pickup"}],"relations":{"functions":["GetCanPickupPickables"]}},{"authority":"server","name":"SetCanPunch","description":"Sets if this Character is allowed to Punch","parameters":[{"type":"boolean","name":"can_punch"}],"relations":{"functions":["GetCanPunch"]}},{"authority":"server","name":"SetCanSprint","description":"Sets if this Character is allowed to Sprint","parameters":[{"type":"boolean","name":"can_sprint"}],"relations":{"functions":["GetCanSprint"]}},{"authority":"server","name":"SetDamageMultiplier","description":"Changes how much damage this character takes on specific bones","parameters":[{"type":"string","name":"bone_name"},{"type":"float","name":"multiplier"}],"relations":{"functions":["GetDamageMultiplier"]}},{"authority":"server","name":"SetDeathSound","description":"Changes the Death sound when Character dies","parameters":[{"type":"string","name":"sound_asset"}]},{"authority":"server","name":"SetFallDamageTaken","description":"Set the Fall Damage multiplier taken when falling from High places","description_long":"Set the Fall Damage multiplier taken when falling from High places.<br/><br/>Setting to 0 will make the Character to do not take any damage","parameters":[{"type":"integer","name":"damage","description":"Default is 10"}],"relations":{"functions":["GetFallDamageTaken"]}},{"authority":"server","name":"SetFlyingMode","description":"Sets the Flying Mode","parameters":[{"type":"boolean","name":"flying_mode"}],"relations":{"functions":["GetFlyingMode"]}},{"authority":"server","name":"SetFootstepVolumeMultiplier","description":"Set the Footstep Volume multiplier","parameters":[{"type":"float","name":"volume_multiplier"}]},{"authority":"server","name":"SetFOVMultiplier","description":"Sets the Field of View multiplier","parameters":[{"type":"float","name":"multiplier"}]},{"authority":"server","name":"SetGaitMode","description":"Sets the Gait Mode","parameters":[{"type":"GaitMode","name":"gait_mode"}],"relations":{"functions":["GetGaitMode"]}},{"authority":"server","name":"SetHighFallingTime","description":"Sets time to transition to HighFalling state","description_long":"Sets time elapsed until automatically transition to HighFalling state (from SmallFalling) in seconds<br/><br/>Set it to -1 to never enter HighFalling time and consequently do not ragdoll when falling","parameters":[{"type":"float","name":"time","description":"Default is 1 second"}]},{"authority":"server","name":"SetHitReactionEnabled","description":"Sets if the character will react to damage by applying small dynamic ragdoll effect to local bones damaged","parameters":[{"type":"boolean","name":"is_enabled"}]},{"authority":"server","name":"SetImpactDamageTaken","description":"Set the Impact Damage taken when being roamed by things","description_long":"Set the Impact Damage taken when being roamed by things.<br/><br/>Setting to 0 will make the Character to do not take damage or enter ragdoll mode","parameters":[{"type":"integer","name":"impact_damage","description":"Default is 10"}],"relations":{"functions":["GetImpactDamageTaken"]}},{"authority":"server","name":"SetInputEnabled","description":"Enables/Disables Character\'s Input","parameters":[{"type":"boolean","name":"is_enabled"}],"relations":{"functions":["IsInputEnabled"]}},{"authority":"server","name":"SetInvulnerable","description":"Sets if the Character can receive any damage","parameters":[{"type":"boolean","name":"is_invulnerable"}],"relations":{"functions":["IsInvulnerable"]}},{"authority":"server","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset"}]},{"authority":"both","name":"SetMorphTarget","description":"Set Morph Target with Name and Value","parameters":[{"type":"string","name":"name","description":"Morph Target Name"},{"type":"float","name":"value"}],"relations":{"functions":["GetMorphTarget","ClearMorphTargets","GetAllMorphTargetNames"]}},{"authority":"server","name":"SetPainSound","description":"Changes the Pain sound when Character takes damage","parameters":[{"type":"SoundPath","name":"sound_asset"}]},{"authority":"server","name":"SetParachuteTexture","description":"Changes the Parachute Texture","parameters":[{"type":"ImagePath","name":"texture"}]},{"authority":"both","name":"SetPhysicalAnimationSettings","description":"Applies the physical animation settings to the body given","parameters":[{"type":"string","name":"bone","description":"The body we will be driving"},{"type":"boolean","name":"include_self","description":"Whether to modify the given body"},{"type":"boolean","name":"is_local_simulation","description":"Whether the drive targets are in world space or local"},{"type":"float","name":"orientation_strength","default":"0","description":"The strength used to correct orientation error"},{"type":"float","name":"angular_velocity_strength","default":"0","description":"The strength used to correct angular velocity error"},{"type":"float","name":"position_strength","default":"0","description":"The strength used to correct linear position error. Only used for non-local simulation"},{"type":"float","name":"velocity_strength","default":"0","description":"The strength used to correct linear velocity error. Only used for non-local simulation"},{"type":"float","name":"max_linear_force","default":"0","description":"The max force used to correct linear errors"},{"type":"float","name":"max_angular_force","default":"0","description":"The max force used to correct angular errors"}]},{"authority":"server","name":"SetPunchDamage","description":"Set the Punch Damage this Character will apply on others","parameters":[{"type":"integer","name":"punch_damage","description":"Default is 15"}],"relations":{"functions":["GetPunchDamage"]}},{"authority":"server","name":"SetRadialDamageToRagdoll","description":"Set the minimum radial damage (e.g. explosions) taken to enter in ragdoll mode","description_long":"Set the minimum radial damage taken (e.g. explosions) to enter in ragdoll mode.<br/><br/>Setting to -1 will make the Character to do not enter ragdoll mode when getting radial damage","parameters":[{"type":"integer","name":"damage","description":"Default is 50"}]},{"authority":"server","name":"SetRagdollMode","description":"Sets Character Ragdoll Mode","parameters":[{"type":"boolean","name":"ragdoll_enabled"}]},{"authority":"server","name":"SetSimulatePhysics","description":"Sets the Character Capsule to simulate physics","parameters":[{"type":"boolean","name":"simulate_physics"}]},{"authority":"server","name":"SetSpeedMultiplier","description":"Sets all speed multiplier","parameters":[{"type":"float","name":"speed_multiplier","description":"1 is normal"}],"relations":{"functions":["GetSpeedMultiplier"]}},{"authority":"server","name":"SetStanceMode","description":"Sets the Stance Mode","parameters":[{"type":"StanceMode","name":"stance_mode"}],"relations":{"functions":["GetStanceMode"]}},{"authority":"server","name":"SetTeam","description":"Sets a Team which will disable damaging same Team Members","parameters":[{"type":"integer","name":"team","description":"0 is neutral and default"}],"relations":{"functions":["GetTeam"]}},{"authority":"network-authority","name":"SetViewMode","description":"Sets the View Mode","parameters":[{"type":"ViewMode","name":"view_mode"}],"relations":{"functions":["GetViewMode"]}},{"authority":"network-authority","name":"SetWeaponAimMode","description":"Sets the Weapon\'s Aim Mode","parameters":[{"type":"AimMode","name":"aim_mode"}],"relations":{"functions":["GetWeaponAimMode"]}},{"authority":"server","name":"UnGrabProp","description":"UnGrabs/Drops the Prop the Character is holding"}],"events":[{"name":"Attack","authority":"both","description":"Triggered when the Character effectively attacks with a Melee","arguments":[{"name":"self","type":"Character"},{"name":"melee","type":"Melee"}]},{"authority":"server","name":"AttemptEnterVehicle","description":"Triggered when a Character attempts to enter a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat_index"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}],"relations":{"functions":["GetVehicle","EnterVehicle"],"events":["EnterVehicle"]}},{"authority":"server","name":"AttemptLeaveVehicle","description":"Triggered when this Character attempts to leave a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}],"relations":{"functions":["LeaveVehicle"],"events":["LeaveVehicle"]}},{"authority":"both","name":"AttemptReload","description":"Triggered when this Character attempts to reload","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"Drop","description":"When Character drops the currently picked up Pickable","arguments":[{"type":"Character","name":"self"},{"type":"Pickable","name":"object"},{"type":"boolean","name":"triggered_by_player"}]},{"authority":"both","name":"EnterVehicle","description":"When Character enters a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat_index"}],"relations":{"functions":["GetVehicle","EnterVehicle"],"events":["AttemptEnterVehicle"]}},{"authority":"both-net-authority-first","name":"FallingModeChange","description":"Called when FallingMode changes","arguments":[{"type":"Character","name":"self"},{"type":"FallingMode","name":"old_state"},{"type":"FallingMode","name":"new_state"}]},{"authority":"both","name":"Fire","description":"When Character fires a Weapon","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"}]},{"authority":"both-net-authority-first","name":"GaitModeChange","description":"Called when GaitMode changes","arguments":[{"type":"Character","name":"self"},{"type":"GaitMode","name":"old_state"},{"type":"GaitMode","name":"new_state"}]},{"authority":"both","name":"GrabProp","description":"When Character grabs up a Prop","arguments":[{"type":"Character","name":"self"},{"type":"Prop","name":"prop"}]},{"authority":"both","name":"Highlight","description":"When Character highlights/looks at a Prop or a Pickable","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"is_highlighted","description":"Whether the object is being highlighted or not"},{"type":"Prop|Pickable","name":"object"}]},{"authority":"server","name":"Interact","description":"Triggered when a Character interacts with a Prop or Pickable","arguments":[{"type":"Character","name":"self"},{"type":"Prop|Pickable","name":"object"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"LeaveVehicle","description":"When Character leaves a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"}],"relations":{"functions":["LeaveVehicle"],"events":["AttemptLeaveVehicle"]}},{"authority":"both","name":"PickUp","description":"When Character picks up anything","arguments":[{"type":"Character","name":"self"},{"type":"Pickable","name":"object"}],"relations":{"functions":["GetPicked"]}},{"authority":"both","name":"PullUse","description":"Triggered when a Character presses the use button for a Pickable (i.e. clicks left mouse button with this equipped)","arguments":[{"type":"Character","name":"self","description":"The Character that used it"},{"type":"Pickable","name":"pickable","description":"The Pickable which has just been used"}]},{"authority":"both","name":"Punch","description":"When Character punches","arguments":[{"type":"Character","name":"self"}]},{"authority":"both","name":"RagdollModeChange","description":"When Character enters or leaves ragdoll","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"old_state"},{"type":"boolean","name":"new_state"}]},{"authority":"both","name":"ReleaseUse","description":"Triggered when a Character releases the use button for a Pickable (i.e. releases left mouse button with this equipped)","arguments":[{"type":"Character","name":"self","description":"The Character that stopped using it"},{"type":"Pickable","name":"pickable","description":"The Pickable which has just stopped being used"}]},{"authority":"both","name":"Reload","description":"When Character reloads a weapon","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"},{"type":"integer","name":"ammo_to_reload"}]},{"authority":"both-net-authority-first","name":"StanceModeChange","description":"Called when StanceMode changes","arguments":[{"type":"Character","name":"self"},{"type":"StanceMode","name":"old_state"},{"type":"StanceMode","name":"new_state"}]},{"authority":"both-net-authority-first","name":"SwimmingModeChange","description":"Called when Swimming Mode changes","arguments":[{"type":"Character","name":"self"},{"type":"SwimmingMode","name":"old_state"},{"type":"SwimmingMode","name":"new_state"}]},{"authority":"both","name":"UnGrabProp","description":"When Character drops a Prop","arguments":[{"type":"Character","name":"self"},{"type":"Prop","name":"prop"}]},{"authority":"both-net-authority-first","name":"ViewModeChange","description":"When Character changes it\'s View Mode","arguments":[{"type":"Character","name":"self"},{"type":"ViewMode","name":"old_state"},{"type":"ViewMode","name":"new_state"}]},{"authority":"both-net-authority-first","name":"WeaponAimModeChange","description":"Called when Weapon Aim Mode changes","arguments":[{"type":"Character","name":"self"},{"type":"AimMode","name":"old_state"},{"type":"AimMode","name":"new_state"}]}]}'),y=JSON.parse('{"name":"CharacterSimple","description":"CharacterSimple is a simpler Character implementation with basic Movement implementation. Aimed for custom NPCs or basic Pawns.","authority":"both","inheritance":["Entity","Actor","Pawn","Paintable","Damageable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh"},{"type":"BlueprintPath","name":"custom_animation_blueprint","default":""},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"name":"CallAnimationBlueprintEvent","authority":"both","return":[{"type":"any...","description":"the function return values"}],"description":"Calls an Animation Blueprint Event or Function","description_long":"Calls an Animation Blueprint Event or Function<br/>Returns all Function return values on <strong>Client Side</strong>","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"authority":"authority","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":""},{"type":"boolean","name":"loop_indefinitely","default":"false"},{"type":"float","name":"blend_in_time","default":"0.25"},{"type":"float","name":"blend_out_time","default":"0.25"},{"type":"float","name":"play_rate","default":"1.0"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}]},{"authority":"authority","name":"SetAirControl","description":"Sets the amount of movement control allowed when it is in air","parameters":[{"type":"float","name":"air_control","default":"0.2","description":"When falling, amount of lateral movement control available to the character. 0 = no control, 1 = full control at max speed of MaxWalkSpeed"},{"type":"float","name":"boost_multiplier","default":"512","description":"When falling, multiplier applied to air_control when lateral velocity is less than boost_velocity_threshold. Setting this to zero will disable air control boosting. Final result is clamped at 1"},{"type":"float","name":"boost_velocity_threshold","default":"25","description":"When falling, if lateral velocity magnitude is less than this value, air_control is multiplied by boost_multiplier. Setting this to zero will disable air control boosting"}]},{"authority":"authority","name":"SetAnimationBlueprint","description":"Sets the Animation Blueprint of this Character","parameters":[{"type":"BlueprintPath","name":"custom_animation_blueprint"}]},{"authority":"authority","name":"SetMaxAcceleration","description":"Sets the max acceleration","parameters":[{"type":"integer","name":"acceleration","description":"Default is 2048"}]},{"authority":"authority","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh_asset"},{"type":"boolean","name":"adjust_capsule_size","description":"Auto adjust the capsule size based on the Mesh size"}]},{"authority":"authority","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh"},{"type":"boolean","name":"adjust_capsule_size","description":"Auto adjust the capsule size based on the Mesh size"}]},{"authority":"authority","name":"SetPawnSettings","description":"Sets the Pawn Settings of this Character","parameters":[{"type":"boolean","name":"use_controller_rotation_pitch"},{"type":"boolean","name":"use_controller_rotation_yaw"},{"type":"boolean","name":"use_controller_rotation_roll"}]},{"authority":"authority","name":"SetRotationSettings","description":"Sets the Rotation Settings of this Character","parameters":[{"type":"Rotator","name":"rotation_rate"},{"type":"boolean","name":"use_controller_desired_rotation"},{"type":"boolean","name":"orient_rotation_to_movement"}]},{"authority":"authority","name":"SetSpeedSettings","description":"Sets the Speed Settings of this Character","parameters":[{"type":"integer","name":"max_walk_speed"},{"type":"integer","name":"max_walk_speed_crouched"}]},{"authority":"both","name":"SetSpringArmSettings","description":"Sets the Spring Arm Settings of this Character","parameters":[{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 144)"},{"type":"float","name":"target_arm_length","default":"300.0"},{"type":"Vector","name":"socket_offset","default":"Vector(0, 0, 0)"},{"type":"boolean","name":"enable_camera_lag","default":"true"},{"type":"float","name":"camera_lag_speed","default":"15.0"},{"type":"float","name":"camera_lag_max_distance","default":"1.0"}]}]}'),f=JSON.parse('{"name":"Database","description":"The Database entity provides programmers a way to access SQL databases easily through scripting.","authority":"server","constructors":[{"name":"Default Constructor","parameters":[{"type":"DatabaseEngine","name":"database_engine","description":"Database Engine"},{"type":"string","name":"connection_string","description":"<a href=\'#connection-string\'>Connection String</a> used to create and connect to the database"},{"type":"integer","name":"pool_size","default":"10","description":"Size of the connection pool when calling several queries simultaneously"}]}],"functions":[{"name":"Close","authority":"server","description":"Closes the Database"},{"name":"Execute","authority":"server","description":"Execute a query synchronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"return":[{"type":"integer","description":"affected rows"},{"type":"string","description":"error (if any)"}],"examples":[{"title":"Inserts into database (SQLite)","content":"local affected_rows = my_database:Execute(\\"INSERT INTO MyTable VALUES (:0, \':1\')\\", 123, \\"MyValue\\")"}]},{"name":"ExecuteAsync","authority":"server","description":"Execute a query asynchronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"function","name":"callback","default":"nil","description":"Callback","function_parameters":[{"name":"rows_affected","type":"integer","description":"Amount of rows affected"},{"name":"error","type":"string?","description":"Error message, if got error"}]},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}]},{"name":"Select","authority":"server","description":"Selects a query synchronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"return":[{"type":"table[]","description":"rows fetched"},{"type":"string","description":"error (if any)"}],"examples":[{"title":"Selects from a table (SQLite)","content":"local rows = my_database:Select(\\"SELECT * FROM MyTable WHERE name = :0 AND title = :1\\", \\"Val\\", \\"AnotherVal\\")"}]},{"name":"SelectAsync","authority":"server","description":"Execute a select query asynchronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"function","name":"callback","default":"nil","description":"Callback","function_parameters":[{"name":"rows","type":"table[]","description":"All rows returned by the query"},{"name":"error","type":"string?","description":"Error message, if got error"}]},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"examples":[{"title":"Selects from a table asynchronously (SQLite)","content":"my_database:SelectAsync(\\"SELECT * FROM MyTable WHERE name = :0 AND title = :1\\", function(rows)\\n\\tConsole.log(NanosTable.Dump(rows))\\nend, \\"Val\\", \\"AnotherVal\\")"}]}]}'),g=JSON.parse('{"name":"Decal","description":"Decals are Materials that are projected onto meshes in your level, including Static Meshes and Skeletal Meshes.","authority":"client","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"MaterialPath","name":"material_asset","description":"Material Asset"},{"type":"Vector","name":"size","default":"Vector(128, 256, 256)","description":"Size of the Decal"},{"type":"float","name":"lifespan","default":"60","description":"Time until automatically destroyed in seconds"},{"type":"float","name":"fade_screen_size","default":"0.01","description":"Size percentage in screen to fade out"}]}]}'),b=JSON.parse('{"name":"File","description":"A File represents an entry to a system file.","authority":"both","constructors":[{"name":"Default Constructor","parameters":[{"type":"string","name":"file_path","description":"If on Server, this is the Path relative to server executable. Otherwise if on Client, this is the Path relative to Client\'s \'Packages/.transient/\' folder"},{"type":"boolean","name":"truncate","default":"false","description":"Whether or not to clear the file upon opening it"}]}],"functions":[{"name":"Close","authority":"both","description":"Closes the file and destroys the entity"},{"name":"Flush","authority":"both","description":"Flushes content to the file"},{"return":[{"type":"boolean","description":"if last operation failed"}],"authority":"both","name":"HasFailed","description":"Checks if the last operation has Failed"},{"return":[{"type":"boolean","description":"if status is Bad"}],"authority":"both","name":"IsBad","description":"Checks if the file status is Bad"},{"return":[{"type":"boolean","description":"if is EOF"}],"authority":"both","name":"IsEOF","description":"Checks if the file status is End of File"},{"return":[{"type":"boolean","description":"if status is Good"}],"authority":"both","name":"IsGood","description":"Checks if the file status is Good"},{"return":[{"type":"string","description":"file data"}],"authority":"both","name":"Read","description":"Reads characters from the File and returns it. Also moves the file pointer to the latest read position. Pass 0 to read the whole file","parameters":[{"type":"integer","name":"length","default":"0","description":"Length to be read from file, leave it empty to read the whole file"}]},{"authority":"both","name":"ReadAsync","description":"Reads characters from the File asynchronously.","parameters":[{"type":"integer","name":"length","description":"Length to be read from file, leave it empty to read the whole file"},{"type":"function","name":"callback","description":"Callback","function_parameters":[{"name":"file_content","type":"string","description":"File content"}]}]},{"return":[{"type":"table","description":"parsed table"}],"authority":"both","name":"ReadJSON","description":"Reads the whole file as a JSON and returns it."},{"authority":"both","name":"ReadJSONAsync","description":"Reads the whole file as a JSON and returns it asynchronously.","parameters":[{"type":"function","name":"callback","description":"Callback with the file read","function_parameters":[{"name":"file_content","type":"table","description":"File content in table format"}]}]},{"return":[{"type":"string","description":"file line data"}],"authority":"both","name":"ReadLine","description":"Reads and returns the next file line"},{"name":"Seek","authority":"both","description":"Sets the file pointer to a specific position","parameters":[{"type":"integer","name":"position","description":"Position to offset the file pointer"}]},{"return":[{"type":"integer","description":"file size"}],"authority":"both","name":"Size","description":"Returns the size of the file"},{"name":"Skip","authority":"both","description":"Skips n (amount) positions from the current file pointer position","parameters":[{"type":"integer","name":"amount","description":"Amount to offset the file pointer"}]},{"return":[{"type":"integer","description":"current file pointer position"}],"authority":"both","name":"Tell","description":"Returns the current file pointer position"},{"name":"Write","authority":"both","description":"Writes the Data at the current position of the file","parameters":[{"type":"string","name":"data","description":"Data to write to the file"}]}],"static_functions":[{"type":"boolean","name":"CreateDirectory","return":[{"type":"boolean","description":"if succeeded"}],"description":"Creates a Directory (for every folder passed)","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"Exists","return":[{"type":"boolean","description":"if exists"}],"description":"Verifies if a entry exists in the file system","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"name":"GetDirectories","description":"Gets a list of all directories given a path","description_long":"Gets a list of all directories given a path, optionally with filters","authority":"both","parameters":[{"type":"string","name":"path_filter","default":"","description":"Path filter"},{"type":"integer","name":"max_depth","default":"-1","description":"The maximum depth to go further in the folders while searching. Pass -1 for maximum depth"}],"return":[{"type":"string[]","description":"List of directories"}]},{"name":"GetFiles","description":"Gets a list of all files in a directory","description_long":"Gets a list of all files in a directory, optionally with filters","authority":"both","parameters":[{"type":"string|table","name":"path_filter","default":"","description":"Path filter"},{"type":"string","name":"extension_filter","default":"","description":"E.g.: <code>.lua</code>"},{"type":"integer","name":"max_depth","default":"-1","description":"The maximum depth to go further in the folders while searching. Pass -1 for maximum depth"}],"return":[{"type":"string[]","description":"List of files"}]},{"name":"GetFullPath","return":[{"type":"string","description":"the full path parsed"}],"description":"Gets the full path given a relative path based on the current side (client or server)","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file or directory"}]},{"name":"IsDirectory","return":[{"type":"boolean","description":"if is a directory"}],"description":"Checks if a path is a directory","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"IsRegularFile","return":[{"type":"boolean","description":"if is a regular file"}],"description":"Checks if a path is a file","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file"}]},{"name":"Remove","return":[{"type":"integer","description":"amount of files deleted"}],"description":"Deletes a folder or file","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"type":"integer","name":"Time","return":[{"type":"integer","description":"the last update time in unix time"}],"description":"Returns when a file was last modified in Unix time","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file"}]}]}'),v=JSON.parse('{"name":"Gizmo","description":"A tool to transform objects at runtime.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[]}],"functions":[{"name":"Activate","description":"Enable the interaction","authority":"client","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"Vector","name":"scale"}]},{"name":"Deactivate","description":"Disable the interaction","authority":"client"},{"name":"IsInteracting","authority":"client","description":"Returns if it\'s currently interacting","return":[{"type":"boolean","name":"is_interacting"}]},{"name":"PressPointer","authority":"client","description":"Triggers the press pointer event on it"},{"name":"ReleasePointer","authority":"client","description":"Triggers the release pointer event on it"},{"name":"SetAlignSpace","authority":"client","parameters":[{"type":"GizmoAlignSpace","name":"align_space"}]},{"name":"SetSnapSettings","authority":"client","parameters":[{"type":"float","name":"location_grid_size"},{"type":"float","name":"rotation_grid_size"},{"type":"float","name":"scale_grid_size"}]},{"name":"SetTransformMode","authority":"client","parameters":[{"type":"GizmoTransformMode","name":"transform_mode"},{"type":"boolean","name":"combine_translate_rotate"}]}],"events":[{"name":"Transform","authority":"client","description":"Triggered when the Gizmo has it\'s transform updated","arguments":[{"name":"self","type":"Gizmo","description":"The Gizmo itself"},{"name":"location","type":"Vector","description":"New Gizmo location"},{"name":"rotation","type":"Rotator","description":"New Gizmo rotation"},{"name":"scale","type":"Vector","description":"New Gizmo scale"}]}]}'),_=JSON.parse('{"name":"Grenade","description":"Grenades are Pickables which Characters can grab and throw. It explodes after X seconds after thrown, causing damage around.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":"nanos-world::SM_Grenade_G67"},{"type":"ParticlePath","name":"explosion_particles","default":"nanos-world::P_Grenade_Special"},{"type":"SoundPath","name":"explosion_sound","default":"nanos-world::A_Explosion_Large"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"authority":"server","name":"Explode","description":"Forces this grenade to Explode","relations":{"events":["Explode"]}},{"authority":"both","name":"GetBaseDamage","description":"Damage at Inner Radius","return":[{"type":"float","name":"base_damage"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetDamageFalloff","description":"Radius which BaseDamage will apply proportionally","return":[{"type":"float","name":"damage_falloff"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetDamageInnerRadius","description":"Radius which MinimumDamage will apply","return":[{"type":"float","name":"damage_inner_radius"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetDamageOuterRadius","description":"Radius which BaseDamage will apply","return":[{"type":"float","name":"damage_outer_radius"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetMinimumDamage","description":"Damage at Outer Radius","return":[{"type":"float","name":"minimum_damage"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetThrowForce","description":"Impulse applied when throwing","return":[{"type":"float","name":"throw_force"}],"relations":{"functions":["SetThrowForce"]}},{"authority":"both","name":"GetTimeToExplode","description":"Time until Explosion","return":[{"type":"float","name":"time"}],"relations":{"functions":["SetTimeToExplode"]}},{"authority":"server","name":"SetDamage","description":"Sets Damage parameters of this Grenade","parameters":[{"type":"integer","name":"base_damage","default":"90","description":"Max damage when inner radius"},{"type":"integer","name":"minimum_damage","default":"0","description":"Min damage when outer radius"},{"type":"integer","name":"damage_inner_radius","default":"200","description":"Radius which damage will be 100%"},{"type":"integer","name":"damage_outer_radius","default":"1000","description":"Radius which damage will be interpoled through falloff"},{"type":"float","name":"damage_falloff","default":"1","description":"Lerp function between Max and Min damage"}],"relations":{"functions":["GetBaseDamage","GetDamageFalloff","GetDamageInnerRadius","GetDamageOuterRadius","GetMinimumDamage"]}},{"authority":"server","name":"SetThrowForce","description":"Set Impulse applied when throwing","parameters":[{"type":"integer","name":"throw_force"}],"relations":{"functions":["GetThrowForce"]}},{"authority":"server","name":"SetTimeToExplode","description":"Set Time until Explosion after thrown","parameters":[{"type":"float","name":"time","description":"Time in seconds"}],"relations":{"functions":["GetTimeToExplode"]}}],"events":[{"name":"Explode","authority":"both","description":"Triggered when the grenade has exploded","arguments":[{"name":"self","type":"Grenade","description":"The grenade which exploded"}],"relations":{"functions":["Explode"]}},{"name":"Throw","authority":"both","description":"Triggered when the grenade has been thrown","arguments":[{"name":"self","type":"Grenade","description":"The grenade which exploded"},{"name":"handler","type":"Character","description":"The Character which has thrown it"}]}]}'),S=JSON.parse('{"name":"Light","description":"A Light represents a Lighting source.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Relevant only for Rect and Spot LightTypes"},{"type":"Color","name":"color","default":"Color(1, 1, 1)"},{"type":"LightType","name":"light_type","default":"LightType.Point"},{"type":"float","name":"intensity","default":"30"},{"type":"float","name":"attenuation_radius","default":"250"},{"type":"float","name":"cone_angle","default":"44","description":"Relevant only for Spot LightType"},{"type":"float","name":"inner_cone_angle_percent","default":"0","description":"Inner Cone Angle Percent (Relevant only for Spot LightType) (0-1)"},{"type":"float","name":"max_daw_distance","default":"5000","description":"Max Draw Distance (Good for performance) - 0 for infinite"},{"type":"boolean","name":"use_inverse_squared_falloff","default":"true","description":"Whether to use physically based inverse squared distance falloff, where Attenuation Radius is only clamping the light\'s contribution. (Spot and Point types only)"},{"type":"boolean","name":"cast_shadows","default":"true"},{"type":"boolean","name":"visible","default":"true"}]}],"functions":[{"name":"GetAttenuationRadius","authority":"both","return":[{"type":"float","name":"attenuation_radius"}],"relations":{"functions":["SetAttenuationRadius"]}},{"name":"GetCastShadows","authority":"both","return":[{"type":"boolean","name":"is_shadows_enabled"}],"relations":{"functions":["SetCastShadows"]}},{"name":"GetColor","authority":"both","return":[{"type":"Color","name":"color"}],"relations":{"functions":["SetColor"]}},{"name":"GetIntensity","authority":"both","return":[{"type":"float","name":"intensity"}],"relations":{"functions":["SetIntensity"]}},{"name":"SetAttenuationRadius","authority":"both","parameters":[{"type":"float","name":"attenuation_radius"}],"relations":{"functions":["GetAttenuationRadius"]}},{"name":"SetCastShadows","authority":"both","parameters":[{"type":"boolean","name":"is_shadows_enabled"}],"relations":{"functions":["GetCastShadows"]}},{"name":"SetColor","description":"Sets the light color","authority":"both","parameters":[{"type":"Color","name":"color","description":"The light color"}],"relations":{"functions":["GetColor"]}},{"name":"SetIntensity","authority":"both","parameters":[{"type":"float","name":"intensity"}],"relations":{"functions":["GetIntensity"]}},{"name":"SetTextureLightProfile","description":"Sets the light Texture Profile","authority":"both","parameters":[{"type":"LightProfile","name":"light_profile","description":"The Light Profile to use"}],"relations":{"etc":[{"label":"\ud83d\udca1 Light Profiles","url":"#light-profiles"}]}}]}'),w=JSON.parse('{"name":"Melee","description":"A Melee represents an Entity which can be Pickable by a Character and can be used to melee attack, Charactes can hold it with hands with pre-defined handling modes.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"HandlingMode","name":"handling_mode","default":"HandlingMode.Torch"},{"type":"MaterialPath","name":"crosshair_material","default":""},{"type":"boolean","name":"can_use","default":"true"}]}],"functions":[{"authority":"server","name":"AddAnimationCharacterUse","description":"Sets an Animation when attacking","description_long":"Sets an Animation when attacking<br/><br/>You can add more than one animation, which will be selected randomly when attacking","parameters":[{"type":"AnimationPath","name":"asset_path","description":"The Animation used when attacking"},{"type":"float","name":"play_rate","description":"The Animation Play Rate"},{"type":"AnimationSlotType","name":"slot_Type","description":"Whether to play it on upper body or full body"}]},{"authority":"server","name":"ClearAnimationsCharacterUse","description":"Clears the Character Attack Animation list"},{"authority":"both","name":"GetAnimationsCharacterUse","description":"Gets the Animations when Character uses it","return":[{"type":"AnimationPath[]"}]},{"authority":"both","name":"GetBaseDamage","description":"Gets the Base Damage","return":[{"type":"integer","name":"damage"}],"relations":{"functions":["SetBaseDamage"]}},{"authority":"both","name":"GetCooldown","description":"Gets the Cooldown between usages","return":[{"type":"float","name":"cooldown"}],"relations":{"functions":["SetCooldown"]}},{"authority":"both","name":"GetSoundUse","description":"Gets the Sound when Character uses it","return":[{"type":"SoundPath","name":"asset_path"}],"relations":{"functions":["SetSoundUse"]}},{"authority":"server","name":"SetBaseDamage","description":"Sets the Base Damage","parameters":[{"type":"integer","name":"damage","default":"","description":"The Base Damage value"}],"relations":{"functions":["GetBaseDamage"]}},{"authority":"both","name":"SetCooldown","description":"Sets the cooldown between attacking","parameters":[{"type":"float","name":"cooldown"}],"relations":{"functions":["GetCooldown"]}},{"authority":"server","name":"SetDamageSettings","description":"Sets the times when to start applying damage and when to end","description_long":"Sets the times when to start applying damage and when to end. During this time the collision of the melee will be enabled and the damage will be applied if it hits something","parameters":[{"type":"float","name":"damage_start_time","description":"The initial time to start applying damage"},{"type":"float","name":"damage_duration_time","description":"The duration time to stop applying damage"}]},{"authority":"both","name":"SetImpactSound","description":"Sets the Sound when hitting something","description_long":"Sets the Sound when hitting something<br/><br/>Note: Surfaces <b>Water</b> and <b>Flesh</b> already have default sounds and must be explicitly set to override","parameters":[{"type":"SurfaceType","name":"surface_type","description":"The surface to apply the sound. Use <code>SurfaceType.Default</code> to be the default to all hits"},{"type":"SoundPath","name":"asset_path","description":"The Sound used when attacking"},{"type":"float","name":"volume"},{"type":"float","name":"pitch"}]},{"authority":"both","name":"SetSoundUse","description":"Sets the Sound when attacking","parameters":[{"type":"SoundPath","name":"asset_path","description":"The Sound used when attacking"}],"relations":{"functions":["GetSoundUse"]}}],"events":[{"name":"Attack","authority":"both","description":"Triggered when the Character effectively attacks with this Melee","arguments":[{"name":"self","type":"Melee"},{"name":"handler","type":"Character"}]}]}'),k=JSON.parse('{"name":"Particle","description":"Class to spawn Particle Systems used to create effects in the world.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"ParticlePath","name":"asset"},{"type":"boolean","name":"auto_destroy","default":"true"},{"type":"boolean","name":"auto_activate","default":"true"}]}],"functions":[{"name":"Activate","description":"Activates the Emitter","authority":"both","parameters":[{"type":"boolean","name":"should_reset","description":"If should reset"}],"relations":{"functions":["Deactivate","IsActive"]}},{"name":"Deactivate","description":"Deactivate the Emitter","authority":"both","relations":{"functions":["Activate","IsActive"]}},{"name":"IsActive","description":"Returns if this Particle is active","authority":"both","return":[{"type":"boolean","name":"is_active"}],"relations":{"functions":["Activate","Deactivate"]}},{"name":"SetParameterBool","description":"Sets a boolean parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"boolean","name":"value","description":"The boolean value"}]},{"name":"SetParameterColor","description":"Sets a Color parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Color","name":"value","description":"The Color value"}]},{"name":"SetParameterFloat","description":"Sets a float parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"float","name":"value","description":"The float value"}]},{"name":"SetParameterInt","description":"Sets an integer parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"integer","name":"value","description":"The int value"}]},{"name":"SetParameterMaterial","description":"Sets a Material parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"MaterialPath","name":"value","description":"The Material value"}]},{"name":"SetParameterMaterialFromCanvas","description":"Sets a Material from a Canvas parameter in this Particle System","description_long":"This will create a Material and set this Canvas as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Canvas","name":"value","description":"The Canvas value"}]},{"name":"SetParameterMaterialFromTexture","description":"Sets a Material from a Texture parameter in this Particle System","description_long":"This will create a Material and set this Texture as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"ImagePath","name":"value","description":"The Texture value"}]},{"name":"SetParameterMaterialFromWebUI","description":"Sets a Material from a Canvas parameter in this Particle System","description_long":"This will create a Material and set this WebUI as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"WebUI","name":"value","description":"The WebUI value"}]},{"name":"SetParameterVector","description":"Sets a Vector parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Vector","name":"value","description":"The Vector value"}]}]}'),C=JSON.parse('{"name":"Player","description":"Players are Entities that represents the individual behind the mouse and keyboard. Players are spawned automatically when connected to the server.","inheritance":["Entity"],"functions":[{"authority":"both","name":"AttachCameraTo","description":"Attaches the Player`s Camera to an Actor","parameters":[{"name":"actor","type":"Actor"},{"name":"socket_offset","type":"Vector"},{"name":"blend_speed","type":"float"}]},{"authority":"server","name":"Ban","description":"Bans the player from the server","parameters":[{"name":"reason","type":"string"}]},{"authority":"server","name":"Connect","description":"Redirects the player to another server","parameters":[{"name":"IP","type":"string"},{"name":"password","type":"string","default":"","description":"Server password"}]},{"authority":"both","name":"GetAccountIconURL","description":"Return a URL which can be used through WebUI and Widgets to display the Player\'s Steam Avatar (64x64)","return":[{"type":"string","name":"account_icon_url"}]},{"authority":"both","name":"GetAccountID","return":[{"type":"string","name":"account_id"}]},{"authority":"both","name":"GetAccountName","return":[{"type":"string","name":"account_name"}]},{"authority":"client","name":"GetCameraArmLength","parameters":[{"name":"return_base","type":"boolean","default":"false","description":"Whether to return the current (false) or base (true) value. The base is the same value set by SetCameraArmLength(). Use base if you want to get the original value set by SetCameraArmLength() and not the current (interpolated) value."}],"return":[{"type":"float","name":"length"}],"relations":{"functions":["SetCameraArmLength"]}},{"authority":"client","name":"GetCameraLocation","return":[{"type":"Vector","name":"location"}],"relations":{"functions":["SetCameraLocation"]}},{"authority":"client","name":"GetCameraRotation","return":[{"type":"Rotator","name":"rotation"}],"relations":{"functions":["SetCameraRotation"]}},{"authority":"both","name":"GetControlledCharacter","return":[{"type":"Character?","name":"controlled_character"}]},{"name":"GetDimension","description":"Gets this Player\'s dimension","authority":"both","return":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"],"functions":["SetDimension"]}},{"authority":"server","name":"GetIP","return":[{"type":"string","name":"ip"}]},{"authority":"both","name":"GetName","return":[{"type":"string","name":"player_name"}],"relations":{"functions":["SetName"]}},{"authority":"both","name":"GetPing","return":[{"type":"integer","name":"ping"}]},{"authority":"both","name":"GetSteamID","return":[{"type":"string","name":"steam_id"}]},{"authority":"both","name":"GetVOIPChannel","return":[{"name":"channel","type":"integer"}],"relations":{"functions":["SetVOIPChannel"]}},{"authority":"both","name":"GetVOIPSetting","return":[{"name":"voip_setting","type":"VOIPSetting"}],"relations":{"functions":["SetVOIPSetting"]}},{"authority":"client","name":"IsHost","return":[{"type":"boolean","name":"is_host"}]},{"authority":"client","name":"IsLocalPlayer","return":[{"type":"boolean","name":"is_local_player"}]},{"authority":"server","name":"Kick","description":"Kicks the player from the server","parameters":[{"name":"reason","type":"string"}]},{"authority":"server","name":"Possess","description":"Makes a Player to possess and control a Pawn","parameters":[{"name":"new_pawn","type":"Pawn"},{"name":"blend_time","type":"float","default":"0"},{"name":"exp","type":"float","default":"0"}]},{"authority":"both","name":"ResetCamera","description":"Resets the Camera to default state (Unspectate and Detaches)"},{"authority":"both","name":"RotateCameraTo","description":"Smoothly moves the Player\'s Camera Rotation","parameters":[{"name":"rotation","type":"Rotator"},{"name":"time","type":"float"},{"name":"exp","type":"float","default":"0","description":"Exponential used to smooth interp, use 0 for linear movement"}]},{"authority":"both","name":"SetCameraArmLength","description":"Sets the Player\'s Camera Arm Length (Spring Arm length)","parameters":[{"name":"length","type":"float"},{"name":"force","type":"boolean","description":"Whether to bypass interpolation and set the target to its value directly"}],"relations":{"functions":["GetCameraArmLength"]}},{"authority":"both","name":"SetCameraFOV","description":"Sets the Player\'s Camera FOV (if not possessing a Character)","parameters":[{"name":"fov","type":"float","default":"90","description":"Value must be between 5 and 170. Pass empty to reset to default."}]},{"authority":"both","name":"SetCameraLocation","description":"Sets the Player\'s Camera Location (only works if not possessing any Character)","parameters":[{"name":"location","type":"Vector"}],"relations":{"functions":["GetCameraLocation"]}},{"authority":"both","name":"SetCameraRotation","description":"Sets the Player\'s Camera Rotation","parameters":[{"name":"rotation","type":"Rotator"}],"relations":{"functions":["GetCameraRotation"]}},{"authority":"both","name":"SetCameraSocketOffset","description":"Sets the Player\'s Camera Socket Offset (Spring Arm Offset)","parameters":[{"name":"socket_offset","type":"Vector"}]},{"authority":"both","name":"SetCameraSpeedSettings","description":"Sets the Player\'s Camera Speed Settings (if not possessing a Character)","parameters":[{"name":"max_speed","type":"float","default":"1200","description":"Maximum velocity magnitude allowed"},{"name":"acceleration","type":"float","default":"4000","description":"Acceleration applied by input (rate of change of velocity)"},{"name":"deceleration","type":"float","default":"4000","description":"Deceleration applied when there is no input (rate of change of velocity)"},{"name":"turning_boost","type":"float","default":"8","description":"Setting affecting extra force applied when changing direction, making turns have less drift and become more responsive. Velocity magnitude is not allowed to increase, that only happens due to normal acceleration. It may decrease with large direction changes. Larger values apply extra force to reach the target direction more quickly, while a zero value disables any extra turn force."}]},{"name":"SetDimension","description":"Sets this Player\'s dimension","authority":"server","parameters":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"],"functions":["GetDimension"]}},{"authority":"both","name":"SetManualCameraFade","description":"Turns on camera fading at the given opacity","description_long":"Turns on camera fading at the given opacity. Does not auto-animate, allowing user to animate themselves. Call StopCameraFade to turn fading back off.","parameters":[{"name":"in_fade_amount","type":"float","description":"Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."},{"name":"color","type":"Color"},{"name":"in_fade_audio","type":"boolean"}]},{"authority":"server","name":"SetName","description":"Sets the player\'s name","parameters":[{"name":"player_name","type":"string"}],"relations":{"functions":["GetName"]}},{"authority":"server","name":"SetVOIPChannel","description":"Sets the VOIP Channel of this Player (will only communicate with other players in the same channel)","parameters":[{"name":"channel","type":"integer"}],"relations":{"functions":["GetVOIPChannel"]}},{"authority":"both","name":"SetVOIPSetting","description":"Sets the VOIP Settings of this Player","parameters":[{"name":"voip_setting","type":"VOIPSetting"}],"relations":{"functions":["GetVOIPSetting"]}},{"authority":"both","name":"SetVOIPVolume","description":"Sets the VOIP Volume of this Player","parameters":[{"name":"volume","type":"float"}]},{"authority":"both","name":"Spectate","description":"Spectates other Player","parameters":[{"name":"player","type":"Player"},{"name":"blend_speed","type":"float","default":"0"}]},{"authority":"both","name":"StartCameraFade","description":"Does a camera fade to/from a solid color","description_long":"Does a camera fade to/from a solid color. Animates automatically","parameters":[{"name":"from_alpha","type":"float","description":"Alpha at which to begin the fade. Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."},{"name":"to_alpha","type":"float","description":"Alpha at which to finish the fade."},{"name":"duration","type":"float","description":"How long the fade should take, in seconds."},{"name":"to_color","type":"Color","description":"Color to fade to/from."},{"name":"should_fade_audio","type":"boolean","description":"True to fade audio volume along with the alpha of the solid color.","default":false},{"name":"hold_when_finished","type":"boolean","description":"True for fade to hold at the ToAlpha until explicitly stopped (e.g. with StopCameraFade)","default":false}]},{"authority":"both","name":"StopCameraFade","description":"Stops camera fading."},{"authority":"both","name":"TranslateCameraTo","description":"Smoothly moves the Player\'s Camera Location (only works if not possessing any Character)","parameters":[{"name":"location","type":"Vector"},{"name":"time","type":"float"},{"name":"exp","type":"float","default":"0","description":"Exponential used to smooth interp, use 0 for linear movement"}]},{"authority":"server","name":"UnPossess","description":"Release the Player from the Character"}],"events":[{"authority":"server","name":"DimensionChange","description":"Triggered when a Player changes it\'s dimension","arguments":[{"name":"self","type":"Player"},{"name":"old_dimension","type":"integer"},{"name":"new_dimension","type":"integer"}],"relations":{"functions":["SetDimension","GetDimension"]}},{"authority":"both","name":"Possess","description":"Trigerred when Player starts controlling a Character","arguments":[{"name":"self","type":"Player"},{"name":"character","type":"Character"}],"relations":{"functions":["GetControlledCharacter"]}},{"authority":"server","name":"Ready","description":"Triggered when Player is ready (the client fully joined, loaded the map and all entities and is ready to play)","arguments":[{"name":"self","type":"Player"}]},{"authority":"both","name":"UnPossess","description":"A Character was released from the Player","arguments":[{"name":"self","type":"Player"},{"name":"character","type":"Character"}],"relations":{"functions":["GetControlledCharacter"]}},{"authority":"both","name":"VOIP","description":"When a Player starts/ends using VOIP","arguments":[{"name":"self","type":"Player"},{"name":"is_talking","type":"boolean"}],"return":[{"type":"boolean","description":"When \'is_talking\' is true, return false to prevent this voice stream from playing (on server will prevent for everyone, on client will prevent only for the client)"}]}]}'),T=JSON.parse('{"name":"Prop","description":"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto","description":"Setting <code>CollisionType.Auto</code> will make it automatically switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> if they are smaller than radius <b>40</b> units."},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"GrabMode","name":"grab_mode","default":"GrabMode.Auto","description":"Whether or not the Prop can be grabbed"},{"type":"CCDMode","name":"ccd_mode","default":"CCDMode.Auto","description":"Whether or not the Prop should have CCD enabled (disabling it may cause Props passing through objects if it\'s kinda small). It\'s smart to force it disabled on \'visual only\' props."}]}],"functions":[{"name":"GetGrabMode","description":"Gets ability to Grab this Prop","return":[{"name":"grab_mode","type":"GrabMode"}],"authority":"both","relations":{"functions":["SetGrabMode"]}},{"name":"GetHandler","description":"Gets the Character (if existing) which is holding this","return":[{"type":"Character?","description":"the character that holds the object","name":"handler"}],"authority":"both"},{"name":"GetMesh","description":"Gets the Asset name","return":[{"type":"StaticMeshPath","description":"asset name","name":"asset"}],"authority":"both","relations":{"functions":["SetMesh"]}},{"name":"SetGrabMode","description":"Sets ability to Characters to Grab this Prop","parameters":[{"type":"GrabMode","name":"grab_mode","description":"If the Prop will be able to be grabbable or not. Set to Auto to automatically define based on Prop\'s size."}],"authority":"server","relations":{"functions":["GetGrabMode"]}},{"name":"SetMesh","description":"Changes the mesh in runtime","parameters":[{"type":"StaticMeshPath","name":"asset","description":"asset"}],"authority":"authority","relations":{"functions":["GetMesh"]}},{"name":"SetPhysicsDamping","description":"Sets the Physics damping of this Prop","parameters":[{"type":"float","name":"linear_damping","description":""},{"type":"float","name":"angular_damping","description":""}],"authority":"authority"}],"events":[{"name":"Grab","authority":"both","description":"Triggered when Character grabs a Prop","arguments":[{"type":"Prop","name":"self","description":"The prop which was Grabbed"},{"type":"Character","name":"character","description":"The new Grabber"}]},{"name":"Hit","authority":"both","description":"Triggered when this Prop hits something","arguments":[{"type":"Prop","name":"self","description":"The prop which has been hit"},{"type":"float","name":"impact_force","description":"The intensity of the Hit normalized by the Prop\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Prop velocity at the moment it hits"}]},{"name":"Interact","authority":"server","description":"When a Character interacts with this Prop (i.e. try to Grab it)","arguments":[{"type":"Prop","name":"self","description":"the object that undergoes an interaction"},{"type":"Character","name":"character","description":"the character who interacts with the object"}],"return":[{"type":"boolean","description":"Return false to prevent the interaction (i.e. prevent being grabbed)"}]},{"name":"TakeDamage","authority":"server","description":"When Prop takes Damage","arguments":[{"type":"Prop","name":"self","description":"the object that takes the damage"},{"type":"integer","name":"damage","description":"amount of damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player?","name":"instigator","description":"The player which caused the damage"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"name":"UnGrab","authority":"both","description":"Triggered when this Prop is ungrabbed","arguments":[{"type":"Prop","name":"self","description":"The prop which has been ungrabbed"},{"type":"Character","name":"character","description":"The old Grabber"}]}]}'),A=JSON.parse('{"name":"SceneCapture","description":"Scene Capture is an Actor which captures a fully dynamic image of the scene into a Texture. It captures the scene from its view frustum, stores that view as an image, which is then used within a Material.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)","description":"Location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Rotation"},{"type":"integer","name":"width","default":"128","description":"Width of the generated Texture (max is 4096)"},{"type":"integer","name":"height","default":"128","description":"Height of the generated Texture (max is 4096)"},{"type":"float","name":"render_rate","default":"0.033","description":"Render Rate (how frequent is the capture)"},{"type":"float","name":"view_distance","default":"5000","description":"Maximum distance of capturing"},{"type":"float","name":"fov_angle","default":"90","description":"FOV"},{"type":"boolean","name":"enable_distance_optimization","default":"true","description":"Reduces the rendering frequency if the entities with this Material are too far or not visible. Disable it to always render at the render_rate"}]}],"functions":[{"name":"AddRenderActor","description":"Adds an Actor to the Render Only list","description_long":"Adds an Actor to the Render Only list<br/><br/>Note: adding one actor to this will make the SceneCapture only to render those Actors.","authority":"client","parameters":[{"type":"Actor","name":"actor"}],"relations":{"functions":["RemoveRenderActor","ClearRenderActors"]}},{"name":"ClearRenderActors","description":"Clears the Render Only list","authority":"client","relations":{"functions":["AddRenderActor","RemoveRenderActor"]}},{"name":"EncodeToBase64","description":"Takes a snapshot of the SceneCapture and returns a Base64 of it","authority":"client","parameters":[{"type":"ImageFormat","name":"image_format","default":"ImageFormat.JPEG","description":"Which format to generate - JPEG is fastest but discards Alpha channel"}],"return":[{"type":"string"}],"relations":{"functions":["EncodeToBase64Async"]}},{"name":"EncodeToBase64Async","description":"Takes a snapshot of the SceneCapture and returns a Base64 of it (asynchronously)","authority":"client","parameters":[{"type":"ImageFormat","name":"image_format","default":"ImageFormat.JPEG","description":"Which format to generate - JPEG is fastest but discards Alpha channel"},{"type":"function","name":"callback","description":"Callback","function_parameters":[{"name":"base_64","type":"string","description":"The base 64 content"}]}],"relations":{"functions":["EncodeToBase64"]}},{"name":"RemoveRenderActor","description":"Removes an Actor from the Render Only list","authority":"client","parameters":[{"type":"Actor","name":"actor"}],"relations":{"functions":["AddRenderActor","ClearRenderActors"]}},{"name":"Resize","description":"Change the output Texture size\\nNote: too high texture will make the capture slower and will affect game performance","authority":"client","parameters":[{"type":"integer","name":"width"},{"type":"integer","name":"height"}]},{"name":"SetDistanceOptimizationEnabled","description":"Enables or not the rendering frequency optimization if the entities with this Material are too far","authority":"client","parameters":[{"type":"boolean","name":"enabled"}]},{"name":"SetFOVAngle","description":"Sets the FOV","authority":"client","parameters":[{"type":"float","name":"angle"}]},{"name":"SetFreeze","description":"Stops or Restore Capturing","authority":"client","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"SetRenderRate","description":"Set how frequent is the capture\\nNote: Setting to 0 will make it capture every frame","authority":"client","parameters":[{"type":"float","name":"render_rate"}]},{"name":"SetShowFlag","description":"Enables/Disables rendering features from being captured","description_long":"Enables/Disables rendering features from being captured<br/>A complete list of available flags can be found in the <a href=\'https://docs.unrealengine.com/5.0/en-US/API/Runtime/Engine/FEngineShowFlags/\'>Official Unreal Documentation</a>","authority":"client","parameters":[{"type":"string","name":"flag"},{"type":"boolean","name":"enable"}]}],"events":[{"name":"Capture","authority":"client","description":"Triggered when this SceneCapture does an update/renders a frame","arguments":[{"type":"SceneCapture","name":"self"}]}]}'),P=JSON.parse('{"name":"StaticMesh","description":"A StaticMesh entity represents a Mesh which can be spawned in the world, can\'t move and is more optimized for using in decorating the world.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"static_mesh_asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"}]}],"functions":[{"name":"GetMesh","description":"Gets the Asset path mesh used","return":[{"type":"StaticMeshPath","description":"asset path","name":"static_mesh_asset"}],"authority":"both","relations":{"functions":["SetMesh"]}},{"name":"IsFromLevel","description":"Gets if this StaticMesh is from the Level","return":[{"type":"boolean","description":"if this StaticMesh is from the level","name":"is_from_level"}],"authority":"client"},{"name":"SetMesh","description":"Changes the mesh in runtime","parameters":[{"type":"StaticMeshPath","name":"static_mesh_asset","description":"asset"}],"authority":"authority","relations":{"functions":["GetMesh"]}}]}'),x=JSON.parse('{"name":"Sound","description":"Class for playing in-game 2D and 3D sounds.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location","description":"Only used if 3D sound"},{"type":"SoundPath","name":"asset","description":"The Sound Asset to load"},{"type":"boolean","name":"is_2D_sound","default":"false","description":"Whether to spawn it as 2D or 3D"},{"type":"boolean","name":"auto_destroy","default":"true","description":"Whether to destroy after finished playing"},{"type":"SoundType","name":"sound_type","default":"SoundType.SFX","description":"Used to apply user\'s volume settings"},{"type":"float","name":"volume","default":"1"},{"type":"float","name":"pitch","default":"1"},{"type":"float","name":"inner_radius","default":"400","description":"Only used if 3D sound"},{"type":"float","name":"falloff_distance","default":"3600","description":"Only used if 3D sound"},{"type":"AttenuationFunction","name":"attenuation_function","default":"Linear","description":"Only used if 3D sound"},{"type":"boolean","name":"keep_playig_when_silent","default":"false","description":"Only used if 3D sound - Use with caution, it may cause performance issues!"},{"type":"SoundLoopMode","name":"loop_mode","default":"Default","description":"Whether should force sound to loop"}]}],"functions":[{"name":"FadeIn","authority":"client","description":"Plays the sound with a fade effect","parameters":[{"type":"float","name":"fade_in_duration"},{"type":"float","name":"fade_volume_level","default":"1.0"},{"type":"float","name":"start_time","default":"0.0"}]},{"name":"FadeOut","authority":"client","description":"Stops the sound with a fade effect","parameters":[{"type":"float","name":"fade_out_duration"},{"type":"float","name":"fade_volume_level","default":"0.0"},{"type":"boolean","name":"destroy_after_fadeout","default":"false"}]},{"return":[{"type":"float","name":"duration"}],"name":"GetDuration","authority":"client","description":"Gets the duration of the Sound"},{"return":[{"type":"float","name":"falloff_distance"}],"name":"GetFalloffDistance","authority":"client","relations":{"functions":["SetFalloffDistance"]}},{"return":[{"type":"float","name":"inner_radius"}],"name":"GetInnerRadius","authority":"client","relations":{"functions":["SetInnerRadius"]}},{"return":[{"name":"frequency","type":"float"}],"name":"GetLowPassFilter","authority":"client","relations":{"functions":["SetLowPassFilter"]}},{"return":[{"name":"path","type":"string"}],"name":"GetPath","authority":"client"},{"return":[{"name":"pitch","type":"float"}],"name":"GetPitch","authority":"client","relations":{"functions":["SetPitch"]}},{"return":[{"name":"sound_type","type":"float"}],"name":"GetSoundType","authority":"client"},{"return":[{"name":"volume","type":"float"}],"name":"GetVolume","authority":"client","relations":{"functions":["SetVolume"]}},{"return":[{"name":"is_2D_sound","type":"boolean"}],"name":"Is2D","authority":"client","description":"Gets if the sound is 2D"},{"return":[{"name":"is_playing","type":"boolean"}],"name":"IsPlaying","authority":"client","description":"Gets if the sound is playing"},{"name":"Play","authority":"client","description":"Starts the sound","parameters":[{"type":"float","name":"start_time","default":"0.0"}]},{"name":"SetFalloffDistance","authority":"client","description":"If a 3D Sound, sets the distance which the sound is inaudible","parameters":[{"type":"float","name":"falloff_distance"}],"relations":{"functions":["GetFalloffDistance"]}},{"name":"SetInnerRadius","authority":"client","description":"If a 3D Sound, sets the distance within the volume is 100%","parameters":[{"type":"float","name":"inner_radius"}],"relations":{"functions":["GetInnerRadius"]}},{"name":"SetLowPassFilter","authority":"client","description":"Sets lowpass filter frequency. Sets 0 to disable it.","parameters":[{"type":"float","name":"frequency"}],"relations":{"functions":["GetLowPassFilter"]}},{"name":"SetPaused","authority":"client","description":"Pauses the sound","parameters":[{"type":"boolean","name":"pause","default":"true"}]},{"name":"SetPitch","authority":"client","description":"Sets the Sound\'s pitch","parameters":[{"type":"float","name":"new_pitch"}],"relations":{"functions":["GetPitch"]}},{"name":"SetVolume","authority":"client","description":"Sets the Sound\'s volume","parameters":[{"type":"float","name":"new_volume","description":"from 0.0 to 1.0"}],"relations":{"functions":["GetVolume"]}},{"name":"Stop","authority":"client","description":"Stops the sound"},{"name":"StopDelayed","authority":"client","description":"Stops the sound after the provided delay","parameters":[{"type":"float","name":"delay"}]}]}'),M=JSON.parse('{"name":"TextRender","description":"A Text Render class is useful for spawning Texts in 3D world, you can even attach it to other entities.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"string","name":"text"},{"type":"Vector","name":"scale","default":"Vector(1, 1, 1)"},{"type":"Color","name":"color","default":"Color(1, 1, 1, 1)"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"TextRenderAlignCamera","name":"align_camera","default":"TextRenderAlignCamera.Unaligned"}]}],"functions":[{"name":"SetFont","authority":"both","description":"Sets the Font","parameters":[{"name":"font_type","type":"FontType"}]},{"name":"SetFreeze","authority":"both","description":"Freeze mesh rebuild, to avoid unnecessary mesh rebuilds when setting a few properties together","parameters":[{"name":"freeze","type":"boolean"}]},{"name":"SetGlyphSettings","authority":"both","description":"Sets the Glyph representation settings to generate the 3D Mesh for this text render","parameters":[{"type":"float","name":"extrude","default":"0"},{"type":"float","name":"level","default":"0"},{"type":"TextRenderBevelType","name":"bevel_type","default":"TextRenderBevelType.Convex"},{"type":"integer","name":"bevel_segments","default":"8"},{"type":"boolean","name":"outline","default":"false"}]},{"name":"SetMaxSize","authority":"both","description":"Sets the Max Size of the TextRender, optionally scaling it proportionally","parameters":[{"type":"integer","name":"max_width","default":"0"},{"type":"integer","name":"max_height","default":"0"},{"type":"boolean","name":"scale_proportionally","default":"true"}]},{"name":"SetText","authority":"both","description":"Sets the Text","parameters":[{"name":"text","type":"string"}]},{"name":"SetTextSettings","authority":"both","description":"Sets the Text & Font settings for this text render","parameters":[{"type":"float","name":"kerning","default":"0"},{"type":"float","name":"line_spacing","default":"0"},{"type":"float","name":"word_spacing","default":"0"},{"type":"TextRenderHorizontalAlignment","name":"horizontal_alignment","default":"TextRenderHorizontalAlignment.Center"},{"type":"TextRenderVerticalAlignment","name":"vertical_alignment","default":"0TextRenderVerticalAlignment.Center"}]}]}'),D=JSON.parse('{"name":"Trigger","description":"A Trigger class is a utility class to trigger events when any Entity enters an Area.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"Vector|float","name":"extent","description":"Size of the Trigger. If using <code>TriggerType.Sphere</code> it is treated as radius, otherwise as Vector extent"},{"type":"TriggerType","name":"trigger_type","default":"TriggerType.Sphere"},{"type":"boolean","name":"is_visible","default":"false","description":"Useful for debugging"},{"type":"Color","name":"color","default":"Color.RED","description":"Color to paint the Trigger bounds - if Visible"},{"type":"string[]","name":"overlap_only_classes","default":"{}","description":"Filter Trigger to only overlap specific Classes. Leave it empty for all Classes"}]}],"functions":[{"name":"ForceOverlapChecking","description":"Forces a Overlap checking to occur, will immediately trigger overlaps","authority":"authority"},{"name":"SetColor","description":"Sets the Trigger color (if visible)","authority":"both","parameters":[{"type":"Color","name":"color"}]},{"name":"SetExtent","description":"Sets the extent size of this trigger (sphere triggers can receive as float for radius)","authority":"authority","parameters":[{"type":"Vector|float","name":"extent"}]},{"name":"SetOverlapOnlyClasses","description":"Sets the filter to Trigger to only overlap specific Classes. Leave it empty for all Classes","authority":"authority","parameters":[{"type":"string[]","name":"overlap_only_classes"}],"examples":[{"title":"Sets to only overlap Characters","content":"my_trigger:SetOverlapOnlyClasses({ \\"Character\\", \\"CharacterSimple\\" })"}]}],"events":[{"name":"BeginOverlap","description":"Triggered when something overlaps this Trigger","authority":"authority","arguments":[{"type":"Trigger","name":"self","description":"The Trigger entity"},{"type":"Actor","name":"entity","description":"Any Actor which overlaps"}]},{"name":"EndOverlap","description":"Triggered when something leaves this Trigger","authority":"authority","arguments":[{"type":"Trigger","name":"self","description":"The Trigger entity"},{"type":"Actor","name":"entity","description":"Any Actor which left the Trigger"}]}]}'),R=JSON.parse('{"name":"VehicleWheeled","description":"Vehicles are wheeled entities which Characters can possesses and drive.","authority":"server","inheritance":["Entity","Actor","Vehicle","Paintable","Damageable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"boolean","name":"auto_create_physics","default":"true","description":"Can be disabled to improve performance when setting several configs. Must call <code>RecreatePhysics()</code> after all"},{"type":"boolean","name":"auto_unflip","default":"true","description":"Auto rotates the vehicle if flipped"},{"type":"SoundPath","name":"engine_sound","default":"nanos-world::A_Vehicle_Engine_01"},{"type":"SoundPath","name":"horn_sound","default":"nanos-world::A_Vehicle_Horn_Toyota"},{"type":"SoundPath","name":"brake_sound","default":"nanos-world::A_Vehicle_Brake"},{"type":"SoundPath","name":"engine_start_sound","default":"nanos-world::A_Car_Engine_Start"},{"type":"SoundPath","name":"vehicle_door_sound","default":"nanos-world::A_Vehicle_Door"},{"type":"boolean","name":"auto_start_engine","default":"true"},{"type":"BlueprintPath","name":"custom_animation_blueprint","default":""}]}],"functions":[{"authority":"client","name":"GetGear","description":"Gets the current Gear","return":[{"type":"integer","name":"gear"}]},{"authority":"client","name":"GetRPM","description":"Gets the current RPM","return":[{"type":"integer","name":"rpm"}]},{"authority":"server","name":"Horn","description":"Starts or stops the vehicles horn","parameters":[{"type":"boolean","name":"enable_horn"}]},{"authority":"server","name":"RecreatePhysics","description":"Recreate the Vehicle Physics","description_long":"Call this after configuring the vehicle if passed <code>auto_create_physics</code> to constructor"},{"authority":"server","name":"SetAerodynamicsSetup","description":"Configures the Vehicle Aerodynamics Settings","parameters":[{"type":"integer","name":"mass","default":"1500","description":"Mass of the vehicle chassis"},{"type":"float","name":"drag_coefficient","default":"0.3","description":"Force resisting forward motion at speed"},{"type":"integer","name":"vehicle_chassis_width","default":"180","description":"Chassis width used for drag force computation (cm)"},{"type":"integer","name":"vehicle_chassis_height","default":"140","description":"Chassis height used for drag force computation (cm)"},{"type":"float","name":"vehicle_downforce_coefficient","default":"0.3","description":"Force pressing vehicle into ground at speed"},{"type":"Vector","name":"center_of_mass_override","default":"Vector(0, 0, 50)","description":"Overrides the center of mass. Good for curves stabilization. Ideally the Z should be the same as the wheels radius"}]},{"authority":"server","name":"SetAutoStartEngine","description":"Sets if the Engine auto starts when the driver enters the Vehicle","parameters":[{"type":"boolean","name":"auto_start"}]},{"authority":"both","name":"SetCameraOffset","description":"Sets the Vehicle Camera Offset","parameters":[{"type":"Vector","name":"offset"}]},{"authority":"server","name":"SetDifferentialSetup","description":"Configures the type of Differential","parameters":[{"type":"DifferentialType","name":"differential_type","description":"Type of Differential"},{"type":"float","name":"front_rear_split","description":"Ratio of torque split between front and rear (less than 0.5 means more to front, bigger than 0.5 means more to rear, works only with 4W type)"}]},{"authority":"server","name":"SetEngineSetup","description":"Configures the Vehicle Engine (Torque, RPM, Braking)","parameters":[{"type":"integer","name":"max_torque","default":"700","description":"Max Engine Torque (Nm) is multiplied by TorqueCurve"},{"type":"integer","name":"max_rpm","default":"5700","description":"Maximum revolutions per minute of the engine"},{"type":"integer","name":"idle_rpm","default":"1200","description":"Idle RMP of engine then in neutral/stationary"},{"type":"float","name":"brake_effect","default":"0.05","description":"Braking effect from engine, when throttle released"},{"type":"integer","name":"rev_up_moi","default":"5","description":"Affects how fast the engine RPM speed up"},{"type":"integer","name":"rev_down_rate","default":"600","description":"Affects how fast the engine RPM slows down"},{"type":"table","table_properties":[{"name":"X","type":"Key"},{"name":"Y","type":"Value"}],"name":"torque_curve","default":"{}","description":"Map defining the torque [Normalized 0..1] for a given RPM"}]},{"authority":"server","name":"SetEngineStarted","description":"Sets if the Engine is turned off/on","description_long":"Sets if the Engine is turned off/on (this will affect Lights, Sounds and ability to Throttle)","parameters":[{"type":"boolean","name":"started"}]},{"authority":"server","name":"SetHeadlightsSetup","description":"Configures the Headlights Offset and Color.","parameters":[{"type":"Vector","name":"location"},{"type":"Color","name":"color","default":"Color(1, 0.86, 0.5)"}]},{"authority":"server","name":"SetSteeringSetup","description":"Configures the Vehicle Steering","parameters":[{"type":"SteeringType","name":"steering_type"},{"type":"float","name":"angle_ratio","default":"0.7","description":"Only applies when AngleRatio is selected"}]},{"authority":"server","name":"SetSteeringWheelSetup","description":"Configures where the Steering Wheel is located","description_long":"Configures where the Steering Wheel is located, so Characters can grab it procedurally properly","parameters":[{"type":"Vector","name":"relative_location","description":"Relative location of the steering wheel from the vehicle\'s origin"},{"type":"integer","name":"radius","description":"Radius of the steering wheel to align the hands properly"},{"type":"Rotator","name":"rotation","description":"Rotation of the steering wheel to align the hands properly","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"SetTaillightsSetup","description":"Configures the Taillights Offset.","parameters":[{"type":"Vector","name":"location"}]},{"authority":"server","name":"SetTireFlat","description":"Sets a Tire as Flat or not","parameters":[{"type":"integer","name":"wheel_index"},{"type":"boolean","name":"is_flat"}]},{"authority":"server","name":"SetTransmissionSetup","description":"Configures the Vehicle Transmission","parameters":[{"type":"float","name":"transmission_final_ratio","default":"3.08","description":"The final gear ratio multiplies the transmission gear ratios"},{"type":"integer","name":"transmission_change_up_rpm","default":"4500","description":"Engine Revs at which gear up change occurs"},{"type":"integer","name":"transmission_change_down_rpm","default":"2000","description":"Engine Revs at which gear down change occurs"},{"type":"float","name":"transmission_gear_change_time","default":"0.4","description":"Time it takes to switch gears (seconds)"},{"type":"float","name":"transmission_efficiency","default":"0.9","description":"Mechanical frictional losses mean transmission might operate at 0.94 (94% efficiency)"}]},{"authority":"server","name":"SetWheel","description":"Configures a Vehicle Wheel","description_long":"Wheels can be updated in runtime by calling SetWheel again, you can for example change the suspension high or disable a wheel totally by toggling affected_by_engine off or setting radius to 0.","parameters":[{"type":"integer","name":"index","description":"Index of the wheel (0-N). Set it in ASC order"},{"type":"string","name":"bone_name","description":"Name of the bone to attach this wheel to"},{"type":"integer","name":"radius","default":"32","description":"Radius of the wheel"},{"type":"integer","name":"width","default":"20","description":"Width of the wheel"},{"type":"integer","name":"max_steer_angle","default":"50","description":"Steer angle in degrees for this wheel"},{"type":"Vector","name":"offset","default":"Vector(0, 0, 0)","description":"If bone_name is specified, offset the wheel from the bone\'s location. Otherwise this offsets the wheel from the vehicle\'s origin"},{"type":"boolean","name":"is_affected_by_engine","default":"true","description":"Whether engine should power this wheel"},{"type":"boolean","name":"is_affected_by_brake","default":"true","description":"Whether brake should affect this wheel"},{"type":"boolean","name":"is_affected_by_handbrake","default":"true","description":"Whether handbrake should affect this wheel"},{"type":"boolean","name":"has_abs_enabled","default":"false","description":"Advanced Braking System Enabled"},{"type":"boolean","name":"has_traction_control_enabled","default":"false","description":"Straight Line Traction Control Enabled"},{"type":"integer","name":"max_brake_torque","default":"1500","description":"Max brake torque for this wheel (Nm)"},{"type":"integer","name":"max_handbrake_torque","default":"3000","description":"Max handbrake brake torque for this wheel (Nm). A handbrake should have a stronger brake torque than the brake"},{"type":"integer","name":"cornering_stiffness","default":"1000","description":"Tyre Cornering Ability"},{"type":"float","name":"side_slip_modifier","default":"1.0","description":"Wheel Lateral Skid Grip Loss, lower number less grip on skid"},{"type":"float","name":"friction_force_multiplier","default":"2.0","description":"Friction Force Multiplier"},{"type":"float","name":"slip_threshold","default":"20.0","description":"Wheel Longitudinal Slip Threshold"},{"type":"float","name":"skid_threshold","default":"20.0","description":"Wheel Lateral Skid Threshold"},{"type":"float","name":"suspension_spring_rate","default":"250.0","description":"Spring Force (N/m)"},{"type":"float","name":"suspension_spring_preload","default":"50.0","description":"Spring Preload (N/m)"},{"type":"float","name":"suspension_max_raise","default":"10.0","description":"How far the wheel can go above the resting position"},{"type":"float","name":"suspension_max_drop","default":"10.0","description":"How far the wheel can drop below the resting position"},{"type":"float","name":"suspension_smoothing","default":"0.0","description":"Smooth suspension [0-off, 10-max] - Warning might cause momentary visual inter-penetration of the wheel against objects/terrain"},{"type":"float","name":"suspension_damping_ratio","default":"0.5","description":"Suspension damping, larger value causes the suspension to come to rest faster [range 0 to 1]"},{"type":"float","name":"suspension_wheel_load_ratio","default":"0.5","description":"Amount wheel load effects wheel friction. <br/> - At 0 wheel friction is completely independent of the loading on the wheel (This is artificial as it always assumes even balance between all wheels) <br/> - At 1 wheel friction is based on the force pressing wheel into the ground. This is more realistic. <br/> - Lower value cures lift off over-steer, generally makes vehicle easier to handle under extreme motions."},{"type":"Vector","name":"suspension_axis","default":"Vector(0, 0, -1)","description":"Local body direction in which where suspension forces are applied (typically along -Z-axis)"},{"type":"Vector","name":"suspension_force_offset","default":"Vector(0, 0, 0)","description":"Vertical offset from where suspension forces are applied (along Z-axis)"},{"type":"SuspensionSweepShape","name":"suspension_sweep_shape","default":"SuspensionSweepShape.Raycast","description":"Wheel suspension trace type, defaults to ray trace"}]}],"events":[{"name":"Horn","description":"Triggered when Vehicle honks","authority":"both","arguments":[{"type":"VehicleWheeled","name":"self"},{"type":"boolean","name":"is_honking"}]}]}'),V=JSON.parse('{"name":"VehicleWater","description":"VehicleWater are entities which Characters can possesses and drive over the water with dynamic physics.","authority":"server","inheritance":["Entity","Actor","Vehicle","Paintable","Damageable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"authority":"server","name":"SetEngineOffset","description":"Sets the relative location of the Engine (where the Physics Thruster, sounds and effects are attached)","description_long":"Sets the relative location of the Engine (where the Physics Thruster, sounds and effects are attached). Default is Vector(-200, 0, 0)","parameters":[{"type":"Vector","name":"offset"}]},{"authority":"server","name":"SetThrustStrength","description":"Sets the force of the Engine/Thruster","description_long":"Sets the force of the Engine/Thruster. Default is 1000","parameters":[{"type":"integer","name":"force"}]}]}'),G=JSON.parse('{"name":"Weapon","description":"Weapons are entities with firing, reloading and aiming functionalities.<br/><br/>They are fully customizable, all pieces of the weapon can be changed with immense possibility of creation.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"name":"Default Constructor","parameters":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"},{"name":"asset","type":"SkeletalMeshPath"},{"name":"collision_type","type":"CollisionType","default":"CollisionType.Auto"},{"name":"gravity_enabled","type":"boolean","default":"true"}]}],"functions":[{"authority":"both","name":"GetAmmoBag","description":"Gets this Weapon\'s Ammo Bag","return":[{"name":"ammo_bag","type":"integer"}],"relations":{"functions":["SetAmmoBag"]}},{"authority":"both","name":"GetAmmoClip","description":"Gets this Weapon\'s Ammo Clip","return":[{"name":"ammo_clip","type":"integer"}],"relations":{"functions":["SetAmmoClip"]}},{"authority":"both","name":"GetAmmoToReload","return":[{"name":"ammo_to_reload","type":"integer"}]},{"authority":"both","name":"GetAnimationCharacterFire","return":[{"name":"animation_character_fire_path","type":"AnimationPath"}],"relations":{"functions":["SetAnimationCharacterFire"]}},{"authority":"both","name":"GetAnimationFire","return":[{"name":"animation_fire_path","type":"AnimationPath"}],"relations":{"functions":["SetAnimationFire"]}},{"authority":"both","name":"GetAnimationReload","description":"Gets the reload animation","return":[{"name":"reload_animation_path","type":"AnimationPath"}],"relations":{"functions":["SetAnimationReload"]}},{"authority":"both","name":"GetBulletColor","return":[{"type":"Color","name":"bullet_color"}],"relations":{"functions":["SetBulletColor"]}},{"authority":"both","name":"GetBulletCount","return":[{"type":"integer","name":"bullet_count"}]},{"authority":"both","name":"GetCadence","return":[{"name":"cadence","type":"float"}],"relations":{"functions":["SetCadence"]}},{"authority":"both","name":"GetCanHoldUse","return":[{"name":"can_hold_use","type":"boolean"}]},{"authority":"both","name":"GetClipCapacity","return":[{"name":"clip","type":"integer"}],"relations":{"functions":["SetClipCapacity"]}},{"authority":"both","name":"GetDamage","return":[{"name":"damage","type":"integer"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetHandlingMode","return":[{"name":"handling_mode","type":"HandlingMode"}],"relations":{"functions":["SetHandlingMode"]}},{"authority":"both","name":"GetHoldReleaseUse","return":[{"type":"boolean","name":"hold_release_use"}]},{"authority":"both","name":"GetLeftHandLocation","return":[{"name":"left_hand_location","type":"Vector"}]},{"authority":"both","name":"GetLeftHandRotation","return":[{"name":"left_hand_rotation","type":"Rotator"}]},{"authority":"both","name":"GetMagazineMesh","return":[{"name":"magazine_mesh","type":"StaticMeshPath"}],"relations":{"functions":["SetMagazineMesh"]}},{"authority":"both","name":"GetParticlesBulletTrail","return":[{"name":"particle_bullet_trail_asset_path","type":"ParticlePath"}],"relations":{"functions":["SetParticlesBulletTrail"]}},{"authority":"both","name":"GetParticlesShells","return":[{"name":"particle_shells_asset_path","type":"ParticlePath"}],"relations":{"functions":["SetParticlesShells"]}},{"authority":"both","name":"GetRecoil","return":[{"name":"recoil","type":"float"}],"relations":{"functions":["SetRecoil"]}},{"authority":"both","name":"GetRightHandOffset","return":[{"name":"right_hand_offset","type":"Vector"}],"relations":{"functions":["SetRightHandOffset"]}},{"authority":"both","name":"GetSightFOVMultiplier","return":[{"name":"sight_fov_multiplier","type":"float"}],"relations":{"functions":["SetSightFOVMultiplier"]}},{"authority":"both","name":"GetSightLocation","return":[{"name":"sight_location","type":"Vector"}]},{"authority":"both","name":"GetSightRotation","return":[{"name":"sight_rotation","type":"Rotator"}]},{"authority":"both","name":"GetSoundAim","return":[{"name":"sound_aim_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundAim"]}},{"authority":"both","name":"GetSoundDry","return":[{"name":"sound_dry_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundDry"]}},{"authority":"both","name":"GetSoundFire","return":[{"name":"sound_fire_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundFire"]}},{"authority":"both","name":"GetSoundLoad","return":[{"name":"sound_load_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundLoad"]}},{"authority":"both","name":"GetSoundUnload","return":[{"name":"sound_unload_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundUnload"]}},{"authority":"both","name":"GetSoundZooming","return":[{"name":"sound_zooming_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundZooming"]}},{"authority":"both","name":"GetSpread","return":[{"name":"spread","type":"float"}],"relations":{"functions":["SetSpread"]}},{"authority":"both","name":"PlayAnimation","description":"Plays an Animation on this Weapon","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":"DefaultSlot"},{"type":"boolean","name":"loop_indefinitely","default":"false","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"blend_in_time","default":"0.25","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"blend_out_time","default":"0.25","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"play_rate","default":"1.0","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group. This parameter is only used if the Weapon has an Animation Blueprint"}]},{"authority":"server","name":"Reload","description":"Forces this Weapon to reload","description_long":"Forces this Weapon to reload (only if being handled by a Character)"},{"authority":"server","name":"SetAmmoBag","description":"Sets this Weapon\'s Ammo in the Bag","parameters":[{"name":"new_ammo_bag","type":"integer"}],"relations":{"functions":["GetAmmoBag"]}},{"authority":"server","name":"SetAmmoClip","description":"Sets this Weapon\'s Ammo in the Clip","parameters":[{"name":"new_ammo_clip","type":"integer"}],"relations":{"functions":["GetAmmoClip"]}},{"authority":"server","name":"SetAmmoSettings","description":"Aux for setting and configuring ammo","parameters":[{"name":"ammo_clip","type":"integer"},{"name":"ammo_bag","type":"integer"},{"name":"ammo_to_reload","type":"integer","default":"ammo_clip"},{"name":"clip_capacity","type":"integer","default":"ammo_clip"}]},{"authority":"server","name":"SetAnimationCharacterFire","description":"Animation played by the Character when Firing","parameters":[{"name":"animation_character_fire_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}],"relations":{"functions":["GetAnimationCharacterFire"]}},{"authority":"server","name":"SetAnimationFire","description":"Animation played by the Weapon when Firing","parameters":[{"name":"animation_fire_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}],"relations":{"functions":["GetAnimationFire"]}},{"authority":"server","name":"SetAnimationReload","description":"Animation played by the Character when Reloading","parameters":[{"name":"reload_animation_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}],"relations":{"functions":["GetAnimationReload"]}},{"authority":"server","name":"SetAutoReload","description":"If the Character will reload automatically when ammo empties","description_long":"If the Character will reload automatically when ammo empties. Default is true","parameters":[{"name":"auto_reload","type":"boolean"}]},{"authority":"server","name":"SetBulletColor","description":"Set the Bullet Color","description_long":"Set the Bullet Color<br/><br/>Only has effect if using Bullet Trail particle P_Bullet_Trail or if you particle has the Color parameter","parameters":[{"name":"bullet_color","type":"Color"}],"relations":{"functions":["GetBulletColor"]}},{"authority":"server","name":"SetBulletSettings","description":"Aux for setting and configuring the Bullet","parameters":[{"name":"bullet_count","type":"integer","description":"1 for common weapons<br/>> 1 for shotguns"},{"name":"bullet_max_distance","type":"integer"},{"name":"bullet_velocity","type":"integer","description":"Visuals only"},{"name":"bullet_color","type":"Color"}]},{"authority":"server","name":"SetCadence","description":"Speed of shots","parameters":[{"name":"cadence","type":"float","description":"1 shot at each <code>cadence</code> second"}],"relations":{"functions":["GetCadence"]}},{"authority":"server","name":"SetClipCapacity","description":"Capacity of the Weapon\'s clip","parameters":[{"name":"clip","type":"integer"}],"relations":{"functions":["GetClipCapacity"]}},{"authority":"server","name":"SetDamage","description":"Set the Base Weapon\'s Damage","description_long":"Base Weapon\'s Damage<br/><br/>This will be multiplied by multiplier factors when hitting specific bones","parameters":[{"name":"damage","type":"integer"}],"relations":{"functions":["GetDamage"]}},{"authority":"server","name":"SetHandlingMode","description":"Sets how the Character grabs this Weapon","parameters":[{"name":"handling_mode","type":"HandlingMode"}],"relations":{"functions":["GetHandlingMode"]}},{"authority":"server","name":"SetLeftHandTransform","description":"Left Hand Offset","parameters":[{"name":"left_hand_location","type":"Vector"},{"name":"left_hand_rotation","type":"Rotator"}]},{"authority":"server","name":"SetMagazineMesh","description":"Set the mesh used when the Character reloads the weapon","description_long":"Set the mesh used when the Character reloads the weapon.<br/><br/>Will drop this Mesh as an animation effect.","parameters":[{"name":"magazine_mesh","type":"StaticMeshPath"},{"name":"magazine_mesh_hide_bone","type":"string","default":"b_gun_mag","description":"Weapon bone to hide when reloading it"}],"relations":{"functions":["GetMagazineMesh"]}},{"authority":"server","name":"SetParticlesBarrel","description":"Particle of the Fire Blast in the muzzle","parameters":[{"name":"particle_asset_path","type":"ParticlePath"}]},{"authority":"server","name":"SetParticlesBulletTrail","description":"Particle of the Bullet flying","parameters":[{"name":"particle_bullet_trail_asset_path","type":"ParticlePath"}],"relations":{"functions":["GetParticlesBulletTrail"]}},{"authority":"server","name":"SetParticlesShells","description":"Particle of the empty bullet flying from the weapon when shooting","parameters":[{"name":"particle_shells_asset_path","type":"ParticlePath"}],"relations":{"functions":["GetParticlesShells"]}},{"authority":"server","name":"SetRecoil","description":"Base Weapon\'s Recoil","parameters":[{"name":"recoil","type":"float","description":"0 means no Recoil, default is 1"}],"relations":{"functions":["GetRecoil"]}},{"authority":"server","name":"SetRightHandOffset","description":"Set the offset of Right Hand","description_long":"Set the Offset of Right Hand. To position relative to the camera.","parameters":[{"name":"right_hand_offset","type":"Vector"}],"relations":{"functions":["GetRightHandOffset"]}},{"authority":"server","name":"SetSightFOVMultiplier","description":"The FOV multiplier when ADS","parameters":[{"name":"sight_fov_multiplier","type":"float"}],"relations":{"functions":["GetSightFOVMultiplier"]}},{"authority":"server","name":"SetSightTransform","description":"Offset applied to align player\'s head to weapon\'s sight and rotation applied on the weapon when ADS","parameters":[{"name":"sight_location","type":"Vector"},{"name":"sight_rotation","type":"Rotator"}]},{"authority":"server","name":"SetSoundAim","description":"Sound when Aiming","parameters":[{"name":"sound_aim_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundAim"]}},{"authority":"server","name":"SetSoundDry","description":"Sound when weapon has not bullet and try to shoot","parameters":[{"name":"sound_dry_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundDry"]}},{"authority":"server","name":"SetSoundFire","description":"Sound when Shooting","parameters":[{"name":"sound_fire_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundFire"]}},{"authority":"server","name":"SetSoundFireLastBullets","description":"Sound when firing with only having X remaining bullets in the magazine","description_long":"Sound when firing with only having X remaining bullets in the magazine, useful for last shot \'ping\' or sound when low on bullets","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"remaining_bullets_count","type":"integer","default":"1","description":"The amount of remaining bullet to start playing this sound"}]},{"authority":"server","name":"SetSoundLoad","description":"Sound when Loading a magazine","parameters":[{"name":"sound_load_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundLoad"]}},{"authority":"server","name":"SetSoundUnload","description":"Sound when Unloading a magazine","parameters":[{"name":"sound_unload_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundUnload"]}},{"authority":"server","name":"SetSoundZooming","description":"Sound when Zooming","parameters":[{"name":"sound_zooming_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundZooming"]}},{"authority":"server","name":"SetSpread","description":"Base Weapon\'s Spread","parameters":[{"name":"spread","type":"float","description":"the higher the less precision - recommended value: 20"}],"relations":{"functions":["GetSpread"]}},{"authority":"server","name":"SetUsageSettings","description":"Sets if the Weapon can hold to keep firing and if it needs to release to fire","parameters":[{"name":"can_hold_use","type":"boolean"},{"name":"hold_release_use","type":"boolean"}]},{"authority":"server","name":"SetWallbangSettings","description":"Sets how the bullet will pass through walls","parameters":[{"name":"max_distance","type":"integer","description":"Max distance to pass through another wall"},{"name":"damage_multiplier","type":"float","description":"Damage given if wallbangged"}]}],"events":[{"authority":"both","name":"AmmoBagChange","description":"When the Ammo Bag is changed, by reloading or manually setting through scripting","arguments":[{"name":"self","type":"Weapon"},{"name":"old_ammo_clip","type":"integer"},{"name":"new_ammo_clip","type":"integer"}]},{"authority":"both","name":"AmmoClipChange","description":"When the Ammo Clip is changed, by reloading or manually setting through scripting","arguments":[{"name":"self","type":"Weapon"},{"name":"old_ammo_clip","type":"integer"},{"name":"new_ammo_clip","type":"integer"}]},{"authority":"both","name":"Fire","description":"Triggered when Weapon fires (this will be triggered for each shot)","arguments":[{"name":"self","type":"Weapon"},{"name":"shooter","type":"Character"}]},{"authority":"both","name":"Reload","description":"When a Weapon is reloaded, optionally by a Character","arguments":[{"name":"self","type":"Weapon"},{"name":"character","type":"Character"},{"name":"ammo_to_reload","type":"integer"}]}]}'),I=JSON.parse('{"name":"WebUI","description":"Class for spawning a dynamic Web Browser.","authority":"client","inheritance":["Entity"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"string","name":"name","description":"Used for debugging logs"},{"type":"HTMLPath","name":"path","description":"Web URL or <a href=\'#html-path-searchers\'>HTML File Path</a> as <code>file://my_file.html</code>"},{"type":"WidgetVisibility","name":"visibility","default":"WidgetVisibility.Visible","description":"if WebUI is visible on screen"},{"type":"boolean","name":"is_transparent","default":"true","description":"if WebUI background is transparent"},{"type":"boolean","name":"auto_resize","default":"true","description":"if should auto resize when screen changes it\'s size (useful OFF when you are painting meshes with WebUI)"},{"type":"integer","name":"width","default":"0","description":"size of the WebUI width when you are not using auto_resize"},{"type":"integer","name":"height","default":"0","description":"size of the WebUI height when you are not using auto_resize"}]}],"functions":[{"name":"BringToFront","authority":"client","description":"Puts this WebUI in the front of all WebUIs and Widgets"},{"name":"CallEvent","authority":"client","description":"Calls an Event on the Browser\'s JavaScript","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","description":"Arguments to pass to the event"}]},{"name":"ExecuteJavaScript","authority":"client","description":"Executes a JavaScript code in the Browser","description_long":"Executes a JavaScript code in the Browser<br/>Note: This method is experimental and should be used cautiously. Events are still the preferred way of communicating between Packages and WebUI.","parameters":[{"type":"string","name":"javascript_code"}]},{"name":"GetName","authority":"client","description":"Gets this WebUI name","return":[{"name":"name","type":"string"}]},{"name":"GetSize","authority":"client","description":"Gets the current size of this WebUI","return":[{"type":"Vector2D"}]},{"name":"GetVisibility","authority":"client","description":"Returns the current WebUI visibility","return":[{"name":"visibility","type":"WidgetVisibility"}],"relations":{"functions":["SetVisibility"]}},{"name":"IsFrozen","authority":"client","description":"Returns if this WebUI is currently frozen","return":[{"name":"freeze","type":"boolean"}]},{"name":"LoadHTML","authority":"client","description":"Loads a pure HTML in this Browser","parameters":[{"type":"string","name":"html"}]},{"name":"LoadURL","authority":"client","description":"Loads a new File/URL in this Browser","parameters":[{"type":"HTMLPath","name":"url"}]},{"name":"RemoveFocus","authority":"client","description":"Removes the focus from this WebUI (and sets it back to game viewport)","description_long":"Removes the focus from this WebUI (and sets it back to game viewport)<br/>You MUST call this after you don\'t need keyboard input anymore"},{"name":"SendKeyEvent","authority":"client","description":"Sends a Key Event into the WebUI programatically","parameters":[{"type":"WebUIKeyType","name":"key_type"},{"type":"integer","name":"key_code"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"}]},{"name":"SendMouseClickEvent","authority":"client","description":"Sends a Mouse Click into the WebUI programatically","description_long":"You must send both Down and Up to make it work properly","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"WebUIMouseType","name":"mouse_type","description":"Which mouse button"},{"type":"boolean","name":"is_mouse_up","description":"Whether the event was up or down"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"},{"type":"integer","name":"click_count","default":"1","description":"Use 2 for double click event"}]},{"name":"SendMouseMoveEvent","authority":"client","description":"Sends a Mouse Move Event into the WebUI programatically","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"},{"type":"boolean","name":"mouse_leave","default":"false"}]},{"name":"SendMouseWheelEvent","authority":"client","description":"Sends a Mouse Event into the WebUI programatically","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"float","name":"delta_x"},{"type":"float","name":"delta_y"}]},{"name":"SetFocus","authority":"client","description":"Enables the focus on this browser (i.e. can receive Keyboard input and will trigger input events)","description_long":"Enables the focus on this browser (i.e. can receive Keyboard input and will trigger input events<br/>Note: Only one browser can have focus per time."},{"name":"SetFreeze","authority":"client","description":"Freezes the WebUI Rendering to the surface (it will still execute the JS under the hood)","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"SetLayout","authority":"client","description":"Sets the Layout as Canvas on Screen","description_long":"Sets the Layout as Canvas on Screen. <strong>Anchors</strong>:<br/><br/><img src=\'/img/docs/anchors.webp\' />","parameters":[{"type":"Vector2D","name":"screen_location/offset_left_top","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"size/offset_right_bottom","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector(1, 1)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector(0.5, 0.5)"}]},{"name":"SetVisibility","authority":"client","description":"Sets the visibility in screen","parameters":[{"type":"WidgetVisibility","name":"visibility"}],"relations":{"functions":["GetVisibility"]}},{"name":"SpawnSound","authority":"client","description":"Spawns a Sound entity to plays this WebUI sound","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"boolean","name":"is_2d","default":"true"},{"type":"float","name":"volume","default":"1.0"},{"type":"integer","name":"inner_radius","default":"400"},{"type":"integer","name":"falloff_distance","default":"3600"},{"type":"AttenuationFunction","name":"attenuation_function","default":"AttenuationFunction.Linear"}],"return":[{"type":"Sound"}]}],"events":[{"name":"Fail","authority":"client","description":"Triggered when this page fails to load","arguments":[{"type":"integer","name":"error_code"},{"type":"string","name":"message"}]},{"name":"Ready","authority":"client","description":"Triggered when this page is fully loaded"}]}'),E=JSON.parse('{"name":"Widget","description":"The Widget class supports spawning Unreal Widgets classes through scripting and manipulate them such as Blueprints!","authority":"client","inheritance":["Entity"],"constructors":[{"name":"UserWidget Constructor","description":"Spawns a Widget passing a UserWidget blueprint","parameters":[{"type":"BlueprintPath","name":"blueprint_path","description":"A custom UserWidget Blueprint to spawn"}]},{"name":"Native Widget Constructor","description":"Spawns a Widget passing a NativeWidget enum","parameters":[{"type":"NativeWidget","name":"native_widget","description":"One of the native Widgets to spawn"}]}],"functions":[{"name":"AddChild","authority":"client","description":"Adds a new child widget to this Widget container, if this is a <a href=\'https://docs.unrealengine.com/5.1/en-US/API/Runtime/UMG/Components/UPanelWidget/\'>Panel</a>","parameters":[{"type":"WebUI|Widget","name":"other","description":""}]},{"name":"AddToViewport","authority":"client","description":"Adds it to the game\'s viewport and fills the entire screen"},{"name":"BindBlueprintEventDispatcher","description":"Assigns and Binds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback","description":"Callback function to call","function_parameters":[{"name":"self","type":"Blueprint"},{"name":"params","type":"any..."}]}],"return":[{"type":"function","description":"the callback itself"}]},{"name":"BringToFront","authority":"client","description":"Puts this Widget in the front of all WebUIs and Widgets","description_long":"Puts this Widget in the front of all WebUIs and Widgets. Note: You can only call it if the Widget is parented to the Viewport!"},{"name":"CallBlueprintEvent","return":[{"type":"any...","description":"the function return values"}],"description":"Calls a Blueprint Event or Function","description_long":"Calls a Blueprint Event or Function<br/>Returns all Function return values on <strong>Client Side</strong>","authority":"client","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"name":"GetBlueprintPropertyValue","description":"Gets a Blueprint Property/Variable value","authority":"client","return":[{"type":"any","description":"the value"}],"parameters":[{"type":"string","name":"property_name"}],"relations":{"functions":["SetBlueprintPropertyValue"]}},{"name":"GetVisibility","authority":"client","description":"Returns the current WebUI visibility","return":[{"name":"visibility","type":"WidgetVisibility"}],"relations":{"functions":["SetVisibility"]}},{"name":"SetBlueprintPropertyValue","description":"Sets a Blueprint Property/Variable value directly","authority":"client","parameters":[{"type":"string","name":"property_name"},{"type":"any","name":"value"}],"relations":{"functions":["GetBlueprintPropertyValue"]}},{"name":"SetCanvasLayout","authority":"client","description":"Sets the Layout as Canvas on Screen","description_long":"Sets the Layout as Canvas on Screen.<br/><br/>Note: This method only works if this Widget is child of a Canvas Panel.<br/><br/><strong>Anchors</strong>:<br/><br/><img src=\'/img/docs/anchors.webp\' />","parameters":[{"type":"Vector2D","name":"screen_location/offset_left_top","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"size/offset_right_bottom","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector(1, 1)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector(0.5, 0.5)"}]},{"name":"SetContentForSlot","authority":"client","description":"Sets the widget for a given <a href=\'https://docs.unrealengine.com/5.0/en-US/using-named-slots-in-umg-for-unreal-engine/\'>slot</a> by name, if this is a <a href=\'https://docs.unrealengine.com/5.1/en-US/API/Runtime/UMG/Blueprint/UUserWidget/\'>UserWidget</a>","parameters":[{"type":"string","name":"slot_name"},{"type":"Widget?","name":"widget","description":"Pass it nil to remove it"}]},{"name":"SetFocus","authority":"client","description":"Enables the focus on this Widget (i.e. can receive Keyboard input and will trigger input events)","description_long":"Enables the focus on this Widget (i.e. can receive Keyboard input and will trigger input events<br/>Note: Only one Widget can have focus per time."},{"name":"SetVisibility","authority":"client","description":"Sets the visibility in screen","parameters":[{"type":"WidgetVisibility","name":"visibility"}],"relations":{"functions":["GetVisibility"]}},{"name":"SpawnWidget3D","authority":"client","description":"Spawns a 3D Widget actor rendering this Widget in the world","return":[{"type":"Widget3D","name":"widget_3D"}],"parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"WidgetSpace","name":"widget_space","default":"WidgetSpace.World"},{"type":"bool","name":"auto_size","default":"false"},{"type":"Vector2D","name":"size","description":"Only works if auto_size = false","default":"Vector2D(500, 500)"},{"type":"float","name":"auto_repaint_rate","description":"Leaves -1 to repaint every frame","default":"-1"},{"type":"Vector2D","name":"pivot","default":"Vector2D(0.5, 0.5)"}]},{"name":"UnbindBlueprintEventDispatcher","description":"Unbinds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback?","description":"Optional callback to unbind"}]}],"events":[]}'),W=JSON.parse('{"name":"Widget3D","description":"The Widget3D class is the 3D representation of a Widget class spawned in the world.","authority":"client","inheritance":["Entity","Actor"],"functions":[{"return":[{"name":"widget","type":"Widget"}],"name":"GetWidget","authority":"client"},{"name":"Repaint","authority":"client","description":"Forces this to repaint"},{"name":"SetAutoRepaintRate","authority":"client","description":"Sets the auto repaint rate","parameters":[{"type":"float","name":"rate"}]}],"events":[]}'),N=JSON.parse('{"name":"Color","description":"A color composed of components (R, G, B, A) with floating point precision.","constructors":[{"name":"Default Constructor","parameters":[{"name":"R","type":"number","default":"0","description":"Red color percentage (0-1)"},{"name":"G","type":"number","default":"X","description":"Green color percentage (0-1)"},{"name":"B","type":"number","default":"X","description":"Blue color percentage (0-1)"},{"name":"A","type":"number","default":"1","description":"Alpha transparency percentage (0-1)"}]}],"operators":[{"name":"+","operator":"__add","lhs":"Color|number","rhs":"Color|number","return":"Color","description":"Adds two Colors or a number into each component"},{"name":"-","operator":"__sub","lhs":"Color","rhs":"Color|number","return":"Color","description":"Subtracts two Colors or a number from each component"},{"name":"*","operator":"__mul","lhs":"Color|number","rhs":"Color|number","return":"Color","description":"Multiplies two Colors or a number into each component"},{"name":"/","operator":"__div","lhs":"Color","rhs":"Color|number","return":"Color","description":"Divides two Colors or a number from each component"},{"name":"==","operator":"__eq","lhs":"Color","rhs":"Color","return":"boolean","description":"Checks if two Colors have the same values"},{"name":"tostring","operator":"tostring","lhs":"Color","return":"string","description":"Gets a string representation of this struct"}],"properties":[{"name":"R","type":"number","description":"Red color percentage (0-1)"},{"name":"G","type":"number","description":"Green color percentage (0-1)"},{"name":"B","type":"number","description":"Blue color percentage (0-1)"},{"name":"A","type":"number","description":"Alpha transparency percentage (0-1)"}],"static_properties":[{"name":"WHITE","value":"Color(1, 1, 1)"},{"name":"BLACK","value":"Color(0, 0, 0)"},{"name":"TRANSPARENT","value":"Color(0, 0, 0, 0)"},{"name":"RED","value":"Color(1, 0, 0)"},{"name":"GREEN","value":"Color(0, 1, 0)"},{"name":"BLUE","value":"Color(0, 0, 1)"},{"name":"YELLOW","value":"Color(1, 1, 0)"},{"name":"CYAN","value":"Color(0, 1, 1)"},{"name":"MAGENTA","value":"Color(1, 0, 1)"},{"name":"ORANGE","value":"Color(1, 0.5, 0)"},{"name":"CHARTREUSE","value":"Color(0.5, 1, 1)"},{"name":"AQUAMARINE","value":"Color(0, 1, 0.5)"},{"name":"AZURE","value":"Color(0, 0.5, 1)"},{"name":"VIOLET","value":"Color(0.5, 0, 1)"},{"name":"ROSE","value":"Color(1, 0, 0.5)"}],"functions":[{"name":"ToHex","description":"Gets the Hexadecimal representation of this Color","parameters":[{"name":"appends_transparency","type":"boolean","default":"true","description":"Appends transparency part"}],"return":[{"type":"string","description":"Hexadecimal representation of this Color"}]}],"static_functions":[{"name":"RandomPalette","description":"Returns a random color from Color Palette","parameters":[{"name":"includes_black","type":"boolean","default":"true","description":"Includes blacks in the scope"}],"return":[{"type":"Color","description":"Random color from Color Palette"}]},{"name":"Random","description":"Returns a random color from all color scope","return":[{"type":"Color","description":"Random color from all color scope"}]},{"name":"FromRGBA","description":"Returns the color from 0-255 range values","parameters":[{"name":"r","type":"number","default":"0","description":"Red"},{"name":"g","type":"number","default":"0","description":"Green"},{"name":"b","type":"number","default":"0","description":"Blue"},{"name":"a","type":"number","default":"0","description":"Alpha"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromCYMK","description":"Returns a color from the CYMK format","parameters":[{"name":"c","type":"number","default":"0","description":"Cyan"},{"name":"y","type":"number","default":"0","description":"Yellow"},{"name":"m","type":"number","default":"0","description":"Magenta"},{"name":"k","type":"number","default":"0","description":"Black"},{"name":"a","type":"number","default":"0","description":"Alpha"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHSL","description":"Returns a color from the HSL format","parameters":[{"name":"h","type":"number","default":"0","description":"Hue"},{"name":"s","type":"number","default":"0","description":"Saturation"},{"name":"l","type":"number","default":"0","description":"Lightness"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHSV","description":"Returns a color from the HSV format","parameters":[{"name":"h","type":"number","default":"0","description":"Hue"},{"name":"s","type":"number","default":"0","description":"Saturation"},{"name":"v","type":"number","default":"0","description":"Value"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHEX","description":"Returns a color from the Hexadecimal format","parameters":[{"name":"hex","type":"string","description":"Hexadecimal"}],"return":[{"type":"Color","description":"Final Color"}]}]}'),B=JSON.parse('{"name":"Matrix","description":"A Matrix is an array of numbers this can be used for geometric and positional calculations. This is mainly used internally.","constructors":[{"name":"Default Constructor","parameters":[{"name":"rotation","type":"Rotator","description":"The rotation of the matrix"},{"name":"origin","type":"Vector","description":"The origin of the matrix"}]}],"functions":[{"name":"TransformVector","description":"Transform the vector with the matrix","return":[{"type":"Vector","description":"The new vector"}],"parameters":[{"type":"Vector","name":"vector","description":"The vector who will be transformed"}]},{"name":"GetTransposed","description":"Returns a new matrix transposed (<a href=\\"https://en.wikipedia.org/wiki/Transpose\\">Wikipedia</a>)","return":[{"type":"Matrix","description":"The matrix transpoosed"}]}]}'),L=JSON.parse('{"name":"Rotator","description":"A container for rotation information (Pitch, Yaw, Roll). All rotation values are stored in degrees.","operators":[{"name":"+","operator":"__add","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"},{"name":"-","operator":"__sub","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"},{"name":"*","operator":"__mul","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"}],"constructors":[{"name":"Default Constructor","parameters":[{"name":"pitch","type":"number","default":"0","description":"Pitch"},{"name":"yaw","type":"number","default":"pitch","description":"Yaw"},{"name":"roll","type":"number","default":"pitch","description":"Roll"}]}],"properties":[{"name":"Pitch","type":"number","description":"Rotation around the right axis (around Y axis), Looking up and down (0=Straight Ahead, +Up, -Down)"},{"name":"Yaw","type":"number","description":"Rotation around the up axis (around Z axis), Running in circles 0=East, +North, -South."},{"name":"Roll","type":"number","description":"Rotation around the forward axis (around X axis), Tilting your head, 0=Straight, +Clockwise, -CCW."}],"functions":[{"name":"GetForwardVector","description":"Get the forward (X) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the forward direction"}]},{"name":"GetRightVector","description":"Get the right (Y) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the right direction"}]},{"name":"GetUpVector","description":"Get the up (Z) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the up direction"}]},{"name":"RotateVector","description":"Rotate a vector rotated by this rotator.","parameters":[{"type":"Vector","name":"vector","description":"the vector to rotate by the Rotator"}],"return":[{"type":"Vector","description":"the rotated vector"}]},{"name":"Normalize","description":"In-place normalize, removes all winding and creates the \u201cshortest route\u201d rotation."},{"name":"UnrotateVector","description":"Returns the vector rotated by the inverse of this rotator.","parameters":[{"type":"Vector","name":"vector","description":"The vector to rotate by the inverse of the Rotator"}],"return":[{"type":"Vector","description":"the unrotated vector"}]},{"name":"Quaternion","description":"Get Rotation as a quaternion.","return":[{"type":"Quat","description":"the rotation as a quaternion"}]},{"name":"GetNormalized","description":"Returns a new Rotator normalized.","return":[{"type":"Rotator","description":"the normalized Rotator"}]},{"name":"IsNearlyZero","description":"Checks whether rotator is near to zero within a specified tolerance","parameters":[{"type":"number","name":"tolerance","description":"Tolerance to check","default":"0.000001"}],"return":[{"type":"boolean","description":"whether the rotator is nearly zero"}]},{"name":"IsZero","description":"Checks whether all components of the rotator are exactly zero","return":[{"type":"boolean","description":"whether the rotator is exactly zero"}]}],"static_functions":[{"name":"Random","description":"Generates a random rotation, with optional random roll","parameters":[{"type":"boolean","name":"roll","description":"Whether to use a random roll in the rotator, otherwise uses 0 for roll","default":"false"},{"type":"float","name":"min","description":"Minimum value","default":"-180"},{"type":"float","name":"max","description":"Maximum value","default":"180"}],"return":[{"type":"Rotator","description":"the random rotation"}]}]}'),j=JSON.parse('{"name":"Quat","description":"Floating point Quaternion that can represent a rotation about an axis in 3-D space","operators":[{"name":"+","operator":"__add","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"},{"name":"-","operator":"__sub","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"},{"name":"*","operator":"__mul","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"}],"constructors":[{"name":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"The quaternion\'s X-component"},{"name":"Y","type":"number","default":"X","description":"The quaternion\'s Y-component"},{"name":"Z","type":"number","default":"X","description":"The quaternion\'s Z-component"},{"name":"W","type":"number","default":"X","description":"The quaternion\'s W-component"}]}],"properties":[{"name":"X","type":"number","description":"The quaternion\'s X-component"},{"name":"Y","type":"number","description":"The quaternion\'s Y-component"},{"name":"Z","type":"number","description":"The quaternion\'s Z-component"},{"name":"W","type":"number","description":"The quaternion\'s W-component"}],"functions":[{"name":"Normalize","description":"In place normalize this Quaternion"},{"name":"Rotator","description":"Get the Rotator representation of this Quaternion","return":[{"type":"Rotator","description":"Rotator representation of this Quaternion"}]},{"name":"Inverse","description":"Returns the inverse of this Quaternion","return":[{"type":"Quat","description":"Inverse of this Quaternion"}]}]}'),O=JSON.parse('{"name":"Vector","description":"A Vector composed of components (X, Y, Z) with floating point precision. Used mainly for entity position.","operators":[{"name":"+","operator":"__add","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"-","operator":"__sub","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"*","operator":"__mul","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"/","operator":"__div","lhs":"Vector","rhs":"Vector|number","return":"Vector"},{"name":"^","operator":"__pow","lhs":"Vector","rhs":"Vector|number","return":"Vector"}],"constructors":[{"name":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"X Coordinate"},{"name":"Y","type":"number","default":"X","description":"Y Coordinate"},{"name":"Z","type":"number","default":"X","description":"Z Coordinate"}]}],"properties":[{"name":"X","type":"number","description":"X Coordinate"},{"name":"Y","type":"number","description":"Y Coordinate"},{"name":"Z","type":"number","description":"Z Coordinate"}],"functions":[{"name":"Equals","description":"Check against another vector for equality, within specified error limits","description_long":"Check if the vector is equal to another vector, within specified error limits","return":[{"type":"boolean","description":"Are the vectors equal or not"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to compare to"},{"type":"number","name":"tolerance","default":"0.000001","description":"The error limits"}]},{"name":"Distance","description":"Distance between two points","description_long":"Returns the distance of 2 vectors","return":[{"type":"number","description":"The distance betweem the vectors"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to get the distance to"}]},{"name":"DistanceSquared","description":"Squared distance between two points","description_long":"Return the squared distance of 2 vectors","return":[{"type":"number","description":"The squared distance betweem the vectors"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to get the squared distance to"}]},{"name":"GetUnsafeNormal","description":"Calculates normalized version of vector without checking for zero length","description_long":"Returns the normalized version of vector without checking for zero length","return":[{"type":"Vector","description":"The unsafe normal"}],"parameters":[]},{"name":"GetSafeNormal","description":"Gets a normalized copy of the vector, checking it is safe to do so based on the length","description_long":"Returns a normalized copy of the vector, checking it is safe to do so based on the length","return":[{"type":"Vector","description":"The safe normal"}],"parameters":[]},{"name":"IsNearlyZero","description":"Checks whether vector is near to zero within a specified tolerance","return":[{"type":"boolean","description":"If the bool is near to zero"}],"parameters":[{"type":"number","name":"tolerance","default":"0.000001","description":"The error limits"}]},{"name":"IsZero","description":"Checks whether all components of the vector are exactly zero","return":[{"type":"boolean","description":"If all components of the vector are exactly zero"}]},{"name":"Normalize","description":"Normalize this vector in-place if it is larger than a given tolerance. Leaves it unchanged if not","return":[{"type":"boolean","description":"If the vector has been modified"}]},{"name":"Size","description":"Get the length (magnitude) of this vector","return":[{"type":"number","description":"The lenght of the vector"}]},{"name":"SizeSquared","description":"Get the squared length of this vector","return":[{"type":"number","description":"The squared length of the vector"}]},{"name":"Rotation","description":"Returns the orientation corresponding to the direction in which the vector points","return":[{"type":"Rotator","description":"The orientation of the vector"}]}]}'),F=JSON.parse('{"name":"Vector2D","description":"A Vector2D composed of components (X, Y) with floating point precision. Used mainly for HUD and Drawing on screen.","operators":[{"name":"+","operator":"__add","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"-","operator":"__sub","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"*","operator":"__mul","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"/","operator":"__div","lhs":"Vector2D","rhs":"Vector2D|number","return":"Vector2D"}],"constructors":[{"name":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"X Coordinate"},{"name":"Y","type":"number","default":"X","description":"Y Coordinate"}]}],"properties":[{"name":"X","type":"number","description":"X Coordinate"},{"name":"Y","type":"number","description":"Y Coordinate"}]}'),U=JSON.parse('{"name":"Assets","description":"Retrieve Assets Data from Asset Packs.","authority":"both","static_functions":[{"name":"GetAnimations","description":"Gets a list containing all Animation Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetAssetPacks","description":"Gets a list containing information about all loaded Asset Packs","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"Name","type":"string"},{"name":"Path","type":"string"},{"name":"Author","type":"string"},{"name":"Version","type":"string"}]}]},{"name":"GetAssetPath","description":"Gets the file path of an asset","authority":"both","parameters":[{"type":"string","name":"asset","description":"The asset reference in the format <code>asset-pack::AssetKey</code>"},{"type":"AssetType","name":"asset_type","description":"The Asset Type"}],"return":[{"type":"string","description":"The file path defined in the Assets.toml"}]},{"name":"GetBlueprints","description":"Gets a list containing all Blueprints Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetMaps","description":"Gets a list containing all Map Asset Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetMaterials","description":"Gets a list containing all Materials Asset Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetOthers","description":"Gets a list containing all Other Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetParticles","description":"Gets a list containing all Particle Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetSkeletalMeshes","description":"Gets a list containing all Skeletal Mesh Asset Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetSounds","description":"Gets a list containing all Sound Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetStaticMeshes","description":"Gets a list containing all Static Mesh Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"Precache","description":"Manually adds an Asset to be loaded during the Player\'s loading screen","authority":"server","parameters":[{"type":"string","name":"asset_path","description":"The Asset Key"},{"type":"AssetType","name":"asset_type","description":"The Asset Type"}],"examples":[{"title":"Precaches a Static Mesh","content":"Assets.Precache(\\"my-asset-pack::SM_MyStaticMesh\\", AssetType.StaticMesh)"}]}]}'),z=JSON.parse('{"name":"Chat","description":"Configure, send and intercept chat messages.","authority":"both","static_functions":[{"name":"AddMessage","description":"Adds a chat message which will display local only","authority":"client","parameters":[{"type":"string","name":"message","description":""}]},{"name":"BroadcastMessage","description":"Sends a chat message to all Players","authority":"server","parameters":[{"type":"string","name":"message","description":"The message to send to all Players"}],"examples":[{"title":"Sends a message to everyone","content":"Chat.BroadcastMessage(\\"Welcome to the server!\\")"}]},{"name":"Clear","description":"Clears all messages","authority":"client"},{"name":"SendMessage","description":"Sends a chat message to a Player only","authority":"server","parameters":[{"type":"Player","name":"player","description":"The player to receive the message"},{"type":"string","name":"message","description":"The message"}]},{"name":"SetConfiguration","description":"Configures the Chat visuals and position","authority":"client","parameters":[{"type":"Vector2D","name":"screen_location","description":"","default":"Vector2D(-25, 0)"},{"type":"Vector2D","name":"size","description":"","default":"Vector2D(600, 250)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector2D(1, 0.5)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector2D(1, 0.5)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector2D(1, 0.5)"},{"type":"boolean","name":"justify","description":"","default":"true"},{"type":"boolean","name":"show_scrollbar","description":"","default":"true"}]},{"name":"SetVisibility","description":"Sets if the Chat is visible or not","authority":"client","parameters":[{"type":"boolean","name":"is_visible","description":""}]}],"events":[{"name":"ChatEntry","description":"Called when a new Chat Message is received, this is also triggered when new messages are sent programatically","description_long":"Called when a new Chat Message is received, this is also triggered when new messages are sent programatically<br/><br/>This is useful for creating your own Chat interface while still use the built-in system","authority":"client","arguments":[{"type":"string","name":"message","description":"The message"},{"type":"Player?","name":"player","description":"The player who sent the message or <code>nil</code> if this was called on client side or was sent through code"}]},{"name":"Close","description":"When player closes the Chat","authority":"client"},{"name":"Open","description":"When player opens the Chat","authority":"client"},{"name":"PlayerSubmit","description":"Called when a player submits a message in the chat","authority":"both","return":[{"type":"boolean","description":"Return false to prevent the message from being sent"}],"arguments":[{"type":"string","name":"message","description":"The message sent by the player"},{"type":"Player","name":"player","description":"The player who sent the message - on client it will always be the localplayer"}]}]}'),H=JSON.parse('{"name":"Client","description":"Static Class present on Client side.","authority":"client","static_functions":[{"name":"CopyToClipboard","description":"Copies a text to Clipboard","authority":"client","parameters":[{"type":"string","name":"text"}]},{"name":"Disconnect","description":"Disconnects from the server","authority":"client"},{"name":"GetAllValuesKeys","description":"Gets a list of all values keys","authority":"client","return":[{"type":"string[]","description":"a list with all values keys"}],"relations":{"functions":["GetValue","SetValue"]}},{"name":"GetConnectedServerIP","description":"Gets the current connected server IP:Port","authority":"client","return":[{"type":"string"}]},{"name":"GetFrameTime","description":"Gets the current Frame Time","authority":"client","return":[{"type":"float","description":"The Frame Time"}]},{"name":"GetLocalPlayer","description":"Gets the local Player","authority":"client","return":[{"type":"Player","description":"The local Player"}]},{"name":"GetMap","description":"Returns the current Map","authority":"client","return":[{"type":"string","description":"The current Map"}]},{"name":"GetNearClipPlane","description":"Gets the Near Clip Plane value","authority":"client","return":[{"type":"float"}],"relations":{"static_functions":["SetNearClipPlane"]}},{"name":"GetPackages","description":"Returns a list of Packages running","authority":"client","return":[{"type":"table[]","description":"a list of Packages data","table_properties":[{"name":"title","type":"string"},{"name":"name","type":"string"},{"name":"type","type":"PackageType"},{"name":"version","type":"string"},{"name":"author","type":"string"}]}],"parameters":[{"type":"PackageType","name":"package_type_filter","description":"Which Package type to return. Leave it default (-1) to return all types.","default":"-1"}]},{"name":"GetTime","description":"Gets the Unix Epoch Time in milliseconds","authority":"client","return":[{"type":"integer","description":"the unix timestamp"}]},{"name":"GetValue","description":"Gets a value given a key","authority":"client","return":[{"type":"any","description":"Value at key or fallback if key doesn\'t exist"}],"parameters":[{"type":"string","name":"key","description":""},{"type":"any","name":"fallback","description":""}],"relations":{"functions":["GetAllValuesKeys"],"static_functions":["SetValue"]}},{"name":"IsPackageLoaded","description":"Returns if a Package is currently loaded","authority":"client","return":[{"type":"boolean","description":"If the package is loaded"}],"parameters":[{"type":"string","name":"package_name","description":""}]},{"name":"SetDebugEnabled","description":"Enables/Disables Debug settings and Client Console to be used","authority":"client","parameters":[{"type":"boolean","name":"enable_debug","description":""}]},{"name":"SetEscapeMenuText","description":"Sets the Escape Menu text","authority":"client","examples":[{"title":"Adding customized texts","content":["Client.SetEscapeMenuText([[","    <h1>Header 1</>","    <h2>Header 2</>","    <h3>Header 3</>","    <strong>Strong</>","    Normal Text","]])"]}],"parameters":[{"type":"string","name":"text","description":"Supports using <code>&#60h1&#62</code>, <code>&#60h2&#62</code>, <code>&#60h3&#62</code> and <code>&#60strong&#62</code> tags in the text."}]},{"name":"SetHighlightColor","description":"Changes the Highlight Color for highlighted actors at a specific Index","description_long":"Changes the Highlight Color for highlighted actors at a specific Index. Multiply it by 5 (or more) for having a glowing effect.<br/><br/><code>HighlightMode.Always</code> will always be visible, even behind walls<br/><code>HighlightMode.OnlyHidden</code> will only be visible if behind a wall<br/><code>HighlightMode.OnlyVisible</code> will only be visible if not behind a wall<br/><br/>Note: You can only have 3 differents indexes (0, 1 or 2).","authority":"client","parameters":[{"type":"Color","name":"highlight_color","description":""},{"type":"integer","name":"index","description":""},{"type":"HighlightMode","name":"mode","description":"","default":"HighlightMode.Always"}]},{"name":"SetNearClipPlane","description":"Sets the Near Clip Plane","authority":"client","parameters":[{"type":"float","name":"near_clip_plane","description":""}],"relations":{"static_functions":["GetNearClipPlane"]}},{"name":"SetOutlineColor","description":"Changes the Outline Color for outlined actors at a specific Index","description_long":"Changes the Outline Color for outlined actors at a specific Index. Multiply it by 5 (or more) for having a glowing effect.<br/><br/>Note: You can only have 3 differents indexes (0, 1 or 2), and the default Outline color index used by the game is  <code>0</code> (when interacting with stuff).","authority":"client","parameters":[{"type":"Color","name":"outline_color","description":""},{"type":"integer","name":"index","description":"","default":"0"},{"type":"float","name":"thickness","description":"","default":"2"}]},{"name":"SetValue","description":"Sets a global value in the Client, which can be accessed from anywhere (client side)","description_long":"Sets a global value in the Client, which can be accessed from anywhere (client side)<br/><br/>Please refer to <a href=\\"/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"client","parameters":[{"type":"string","name":"key","description":""},{"type":"any","name":"value","description":""}],"relations":{"functions":["GetAllValuesKeys"],"static_functions":["GetValue"]}},{"name":"Subscribe","description":"Subscribes for an Event","authority":"client","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":""},{"type":"function","name":"callback","description":""}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"client","parameters":[{"type":"string","name":"event_name","description":""},{"type":"function","name":"callback","description":"","default":"nil"}]}],"events":[{"name":"SpawnLocalPlayer","description":"Called when the local player spawns (just after the game has loaded)","authority":"client","arguments":[{"type":"Player","name":"local_player","description":""}]},{"name":"Tick","description":"Called Every Frame. Do not abuse","authority":"client","arguments":[{"type":"float","name":"delta_time","description":""}]},{"name":"WindowFocusChange","description":"Called when the game is focused/unfocused","authority":"client","arguments":[{"type":"boolean","name":"is_focused","description":"If it\'s focused"}]}]}'),q=JSON.parse('{"name":"Console","description":"Exposes access to registering Console Commands and Logging messages.","authority":"both","static_functions":[{"name":"Error","description":"Logs a red error in the console with stack information","description_long":"Logs a red error in the console with stack information, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]},{"name":"Log","description":"Logs and formats a message in the console","description_long":"Logs and formats a message in the console, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}],"examples":[{"title":"Basic","content":"Console.Log(\\"Hello, world!\\")","output":"Hello, world!"},{"title":"With formatting (string)","content":["local player_name = \\"John\\"","Console.Log(\\"Hello %s!\\", player_name)"],"output":"Hello John!"},{"title":"With formatting (integer)","content":["local health = 50","local max_health = 100","Console.Log(\\"Player health: %d/%d\\", health, max_health)"],"output":"Player health: 50/100"}]},{"name":"RegisterCommand","description":"Registers a new Console Command","authority":"both","parameters":[{"type":"string","name":"command","description":"The command"},{"type":"function","name":"callback","description":"The callback to be called when the command is inputted","function_parameters":[{"name":"params","type":"any..."}]},{"type":"string","name":"description","description":"The command description to display in the console"},{"type":"string[]","name":"parameters","description":"The list of supported parameters to display in the console"}],"examples":[{"title":"Registering to a command that sends a message to everyone","content":["Console.RegisterCommand(\\"hello\\", function(text)","    Console.Log(\\"Sending a \'Hello %s\' to everyone!\\", text)","    Chat.BroadcastMessage(\\"Hello \\" .. text)","end, \\"says a message to everyone\\", { \\"my_text\\" })"]}]},{"name":"RunCommand","description":"Runs a Console Command programmatically","authority":"both","parameters":[{"type":"string","name":"command","description":"The command"}],"examples":[{"title":"Running a Console Command","content":"Console.RunCommand(\\"hello\\")"}]},{"name":"Warn","description":"Logs an orange warning in the console with stack information","description_long":"Logs an orange warning in the console with stack information, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]}],"events":[{"name":"Close","description":"When player closes the Console","authority":"client"},{"name":"LogEntry","description":"Called when a log is received","authority":"both","arguments":[{"type":"string","name":"text","description":"Log Message"},{"type":"LogType","name":"type","description":"Type of the log"}]},{"name":"Open","description":"When player opens the Console","authority":"client"},{"name":"PlayerSubmit","description":"Called when a console command is submitted","authority":"both","arguments":[{"type":"string","name":"text","description":"Text submitted"}],"examples":[{"title":"Handles Console Inputs","content":["if (text == \\"some_text\\") then","    Console.Log(\\"Player submitted some_text!\\")","end"]}]}]}'),J=JSON.parse('{"name":"Debug","description":"Draws Debug shapes in the world.","authority":"client","static_functions":[{"name":"DrawBox","description":"Draws a Debug box in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Vector","name":"extent","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"Color","name":"color","description":""},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawCoordinateSystem","description":"Draws a Debug coordinate system in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"float","name":"size","description":"","default":"100"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawCrosshairs","description":"Draws a Debug crosshair in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"float","name":"size","description":"","default":"100"},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawCylinder","description":"Draws a Debug cylinder in the world","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""},{"type":"float","name":"radius","description":""},{"type":"integer","name":"segments","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawDirectionalArrow","description":"Draws a Debug directional arrow in the world","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""},{"type":"float","name":"arrow_size","description":"","default":"100"},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawLine","description":"Draws a Debug Line in the World","authority":"client","parameters":[{"type":"Vector","name":"start_position","description":""},{"type":"Vector","name":"end_position","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawPoint","description":"Draws a Debug Point in the World","authority":"client","parameters":[{"type":"Vector","name":"start_position","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"size","description":"","default":"10"}]},{"name":"DrawSphere","description":"Draws a Debug sphere in the World","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"float","name":"radius","description":""},{"type":"integer","name":"segments","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawString","description":"Draws a Debug string in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"string","name":"text","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"boolean","name":"draw_shadow","description":"","default":"false"},{"type":"float","name":"font_scale","description":"","default":"1"}]}]}'),K=JSON.parse('{"name":"Discord","description":"Initialize and set Discord activity.","authority":"client","static_functions":[{"name":"Initialize","description":"Initializes the Discord Integration with your custom client_id","authority":"client","parameters":[{"type":"integer","name":"client_id","description":""}]},{"name":"SetActivity","description":"Communicates with Discord and sets a custom user status","authority":"client","parameters":[{"type":"string","name":"state","description":""},{"type":"string","name":"details","description":""},{"type":"string","name":"large_image","description":""},{"type":"string","name":"large_text","description":""},{"type":"string","name":"reset_time","description":"Whether or not to reset current activity elapsed time","default":"false"}]}]}'),$=JSON.parse('{"name":"Events","description":"Subscribe for user-defined Events.","authority":"both","static_functions":[{"authority":"server","name":"BroadcastRemote","description":"Calls an Event on Server which will be triggered in all Client\'s Packages of all Players","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"BroadcastRemoteDimension","description":"Calls an Event on Server which will be triggered in all Client\'s Packages of all Players in that dimension","parameters":[{"type":"integer","name":"dimension","description":"The Dimension to send this event"},{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"both","name":"Call","description":"Calls an Event which will be triggered in all Local Packages","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"client","name":"CallRemote","description":"Calls an Event if on Client which will be triggered in all Server Packages","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"CallRemote","description":"Calls an Event if on Server which will be triggered in all Client\'s Packages of a specific Player","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"Player","name":"player","description":"The remote player to send this event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"both","return":[{"type":"function","description":"the subscribed callback itself"}],"name":"Subscribe","description":"Subscribes for an user-created event which will be triggered for only local called events","parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"authority":"both","return":[{"type":"function","description":"the subscribed callback itself"}],"name":"SubscribeRemote","description":"Subscribes for an user-created event which will be triggered for only remote called events","parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"authority":"both","name":"Unsubscribe","description":"Unsubscribes from all subscribed events in this Package with that event name, optionally passing the function to unsubscribe only that callback","parameters":[{"type":"string","name":"event_name","description":"The Event Name to unsubscribe"},{"type":"function","name":"callback","default":"nil","description":"The callback function to unsubscribe"}]},{"authority":"both","name":"UnsubscribeRemote","description":"Unsubscribes from all subscribed remote events in this Package with that event name, optionally passing the function to unsubscribe only that callback","parameters":[{"type":"string","name":"event_name","description":"The Event Name to unsubscribe"},{"type":"function","name":"callback","default":"nil","description":"The callback function to unsubscribe"}]}]}'),Y=JSON.parse('{"name":"HTTP","description":"HTTP Requests Interface.","authority":"both","static_functions":[{"name":"Request","return":[{"type":"table","table_properties":[{"name":"Status","type":"integer"},{"name":"Data","type":"string"}]}],"description":"Makes a synchronous HTTP Request.<br/><br/>The request will be made synchronously and will freeze the server until it\'s done.","authority":"server","parameters":[{"type":"string","name":"uri","description":"The main URI (the base address)"},{"type":"string","name":"endpoint","default":"","description":"The endpoint"},{"type":"HTTPMethod","name":"method","default":"HTTPMethod.GET","description":"The HTTP Method to be used"},{"type":"string","name":"data","default":"","description":"Payload"},{"type":"string","name":"content_type","default":"application/json","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\'>Content Type</a> to be used"},{"type":"boolean","name":"compress","default":"false","description":"Whether or not to compress the content with gzip"},{"type":"table","name":"headers","default":"{}","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\'>Headers</a> to be used"}]},{"name":"RequestAsync","description":"Makes an asynchronous HTTP Request","description_long":"Makes an asynchronous HTTP Request.<br/><br/>The request will be made asynchronously and returned safetly in the same thread in the callback provided when it\'s done.<br/><br/><b>Note:</b> If a request is still running when unloading packages, the server will freeze until it\'s finished, then the package will unload.","authority":"both","parameters":[{"type":"string","name":"uri","description":"The main URI (the base address)"},{"type":"string","name":"endpoint","default":"","description":"The endpoint"},{"type":"HTTPMethod","name":"method","default":"HTTPMethod.GET","description":"The HTTP Method to be used"},{"type":"string","name":"data","default":"","description":"Payload"},{"type":"string","name":"content_type","default":"application/json","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\'>Content Type</a> to be used"},{"type":"boolean","name":"compress","default":"false","description":"Whether or not to compress the content with gzip"},{"type":"table","name":"headers","default":"{}","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\'>Headers</a> to be used"},{"type":"function","name":"callback","default":"nil","description":"The result","function_parameters":[{"name":"status","type":"integer","description":"The HTTP status"},{"name":"data","type":"string","description":"The response data"}]}]},{"name":"SetConnectionTimeout","description":"Sets the global Connection Timeout in seconds","authority":"both","parameters":[{"type":"integer","name":"connection_timeout","description":"The timeout in seconds"}]},{"name":"SetReadWriteTimeout","description":"Sets the global Read and Write Timeout in seconds","authority":"both","parameters":[{"type":"integer","name":"read_write_timeout","description":"The timeout in seconds"}]}]}'),X=JSON.parse('{"name":"Input","description":"Create custom keybindings and retrieve input information.","authority":"client","static_functions":[{"authority":"client","name":"Bind","description":"Binds a function to an Input defined using <code>Register</code> or from the game","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"InputEvent","name":"input_event","description":"Which event to register (Released/Pressed)"},{"type":"function","name":"callback","description":"The function to trigger","function_parameters":[{"name":"delta?","type":"float"}]}]},{"authority":"client","name":"GetGameKeyBindings","description":"Returns a table with all Game KeyBindings","return":[{"type":"table","table_properties_custom":"\\n\\t\\"[BINDING_NAME_01]\\" = {\\n\\t\\t\\"[KEY_01]\\",\\n\\t\\t\\"[KEY_02]\\",\\n\\t\\t...\\n\\t},\\n\\t\\"[BINDING_NAME_02]\\" = {\\n\\t\\t\\"[KEY_03]\\",\\n\\t\\t\\"[KEY_04]\\",\\n\\t\\t...\\n\\t},\\n\\t..."}]},{"authority":"client","name":"GetKeyCode","description":"Gets the key code of a key","parameters":[{"type":"string","name":"key_name"}],"return":[{"type":"integer"}]},{"authority":"client","name":"GetKeyIcon","description":"Gets the icon path of a key","parameters":[{"type":"string","name":"key_name"},{"type":"boolean","name":"dark_mode","default":"false"}],"return":[{"type":"string"}]},{"authority":"client","name":"GetMappedKeys","description":"Returns the keys bound to a keybinding","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"}],"return":[{"type":"string[]","description":"list of all keys"}]},{"authority":"client","name":"GetModifierKeys","description":"Gets the currently pressed modifier keys","return":[{"type":"KeyModifier"}],"examples":[{"title":"Checks if has Shift pressed","content":["local modifier_keys = Input.GetModifierKeys()","local has_shift_pressed = modifier_keys & KeyModifier.LeftShiftDown"],"output":"true"}]},{"authority":"client","name":"GetScriptingKeyBindings","description":"Returns a table with all Scripting KeyBindings","return":[{"type":"table","table_properties_custom":"\\n\\t\\"[BINDING_NAME_01]\\" = {\\n\\t\\t\\"[KEY_01]\\",\\n\\t\\t\\"[KEY_02]\\",\\n\\t\\t...\\n\\t},\\n\\t\\"[BINDING_NAME_02]\\" = {\\n\\t\\t\\"[KEY_03]\\",\\n\\t\\t\\"[KEY_04]\\",\\n\\t\\t...\\n\\t},\\n\\t..."}]},{"name":"InputKey","description":"Forces an Input Key event on Local Player","description_long":"Forces an Input Key event on Local Player<br/><br/>This won\'t trigger any Scripting event as it bypass internal validations","authority":"client","parameters":[{"type":"string","name":"key_name","description":"Key Name to input"},{"type":"InputEvent","name":"input_event","description":"Which Event to input"},{"type":"float","name":"amount_depressed","description":"The amount pressed","default":"1"}]},{"name":"IsInputEnabled","description":"","authority":"client","return":[{"type":"boolean","description":"if the input is visible"}],"relations":{"static_functions":["SetInputEnabled"]}},{"name":"IsKeyDown","description":"Returns if a key is being pressed","authority":"client","return":[{"type":"boolean","description":"if the key is pressed"}],"parameters":[{"type":"string","name":"key_name","description":""}]},{"name":"IsMouseEnabled","description":"","authority":"client","return":[{"type":"boolean","description":"if the mouse is visible"}],"relations":{"static_functions":["SetMouseEnabled"]}},{"authority":"client","name":"Register","description":"Registers a keybinding to a default key","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key_name","description":"The Key to use by default if this wasn\'t set before"},{"type":"string","name":"description","description":"Text to show on Key Bindings Settings"}]},{"authority":"client","name":"ResetBindings","description":"Resets all bound functions by this Package"},{"name":"SetInputEnabled","description":"Toggles Local Player input","authority":"client","parameters":[{"type":"boolean","name":"enable_input","description":""}],"relations":{"static_functions":["IsInputEnabled"]}},{"name":"SetMouseCursor","description":"Sets the current Mouse Cursor type","authority":"client","parameters":[{"type":"CursorType","name":"cursor_type","description":""}]},{"name":"SetMouseEnabled","description":"Displays/Hides Mouse Cursor","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}],"relations":{"static_functions":["IsMouseEnabled"]}},{"authority":"client","name":"Unbind","description":"Unbinds an Input function","description_long":"Unbinds all Input functions related to the given binding_name and input_event","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"InputEvent","name":"input_event","description":"Which event to register (Released/Pressed)"},{"type":"function","name":"callback","description":"The specific function to unbind","default":"nil"}]},{"authority":"client","name":"Unregister","description":"Unregisters a keybinding","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key_name"}]}],"events":[{"name":"KeyBindingChange","description":"A key binding has been changed through the settings","authority":"client","arguments":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key","description":"The new key associated"},{"type":"float","name":"scale","description":"The scale input (usually 1 or -1)"}]},{"name":"KeyDown","description":"A keyboard key is being pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"KeyPress","description":"A keyboard key has been pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"KeyUp","description":"A keyboard key has been released","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"MouseDown","description":"A mouse button has been pressed / is being pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]},{"name":"MouseEnable","description":"When mouse cursor is displayed/hidden","authority":"client","arguments":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"MouseMove","description":"Called when the mouse moves","authority":"client","arguments":[{"type":"float","name":"cursor_delta_x","description":""},{"type":"float","name":"cursor_delta_y","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]},{"name":"MouseScroll","description":"Called when the mouse scrolls","authority":"client","arguments":[{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""},{"type":"float","name":"delta","description":""}]},{"name":"MouseUp","description":"A mouse button has been released","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]}]}'),Q=JSON.parse('{"name":"Level","description":"Work with Unreal level in runtime.","authority":"client","static_functions":[{"name":"CallLevelBlueprintEvent","return":[{"type":"any...","description":"the function return values"}],"description":"Calls a Level Blueprint custom event (which can be added when creating levels through Unreal Engine)","authority":"client","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"authority":"client","name":"GetStreamLevels","description":"Gets a list of all Stream Levels","return":[{"type":"table[]","table_properties":[{"name":"name","type":"string","description":"The short name of the Level"},{"name":"path","type":"string","description":"The full path to the Level file"},{"name":"is_loaded","type":"boolean","description":"If the Level was marked to be loaded"},{"name":"is_visible","type":"boolean","description":"If the Level is currently visible"},{"name":"is_temp","type":"boolean","description":"If the Level is temporary (an instance loaded, shouldn\'t be directly unloaded)"}]}]},{"authority":"client","name":"LoadStreamLevel","description":"Loads a Level in runtime","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"should_block_on_load","default":"false","description":"If this should be a blocking operation - the game will freeze"},{"type":"boolean","name":"make_visible_after_load","default":"true","description":"If this should be visible automatically after loaded"}]},{"authority":"client","name":"SetStreamLevelVisibility","description":"Sets a Stream Level visibility","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"visibility","description":"If this level should be visible"}]},{"authority":"client","name":"UnloadStreamLevel","description":"Unloads a Level in runtime","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"should_block_on_unload","default":"false","description":"If this should be a blocking operation - the game will freeze"}]}],"events":[{"name":"StreamLevelHide","authority":"client","description":"Called when a Stream Level is hidden","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelLoad","authority":"client","description":"Called when a Stream Level is loaded","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelShow","authority":"client","description":"Called when a Stream Level is shown","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelUnload","authority":"client","description":"Called when a Stream Level is unloaded","arguments":[{"type":"string","name":"level_name"}]}]}'),Z=JSON.parse('{"name":"Navigation","description":"Creates a reachable path into navigable space.","authority":"client","static_functions":[{"name":"FindPathToLocation","description":"Finds a Path given Start and End location","description_long":"Finds a Path given Start and End location (only if map has a NavMesh)","authority":"client","return":[{"type":"table","table_properties":[{"name":"IsValid","type":"boolean"},{"name":"IsPartial","type":"boolean"},{"name":"Length","type":"number"},{"name":"Cost","type":"number"},{"name":"PathPoints","type":"Vector[]"}]}],"parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""}]},{"name":"GetRandomPointInNavigableRadius","description":"Finds random, point in navigable space restricted to Radius around Origin. Resulting location is not tested for reachability from the Origin","description_long":"Finds random, point in navigable space restricted to Radius around Origin. Resulting location is not tested for reachability from the Origin (only if map has a NavMesh)","authority":"client","return":[{"type":"Vector","description":"The random point"}],"parameters":[{"type":"Vector","name":"origin","description":""},{"type":"float","name":"radius","description":""}]},{"name":"GetRandomReachablePointInRadius","description":"Finds random, reachable point in navigable space restricted to radius around origin","description_long":"Finds random, reachable point in navigable space restricted to radius around origin (only if map has a NavMesh)","authority":"client","return":[{"type":"Vector","description":"The random point"}],"parameters":[{"type":"Vector","name":"origin","description":""},{"type":"float","name":"radius","description":""}]}]}'),ee=JSON.parse('{"name":"Package","description":"Class which represents the current Package","authority":"both","static_functions":[{"name":"Export","description":"Makes any variable available in the global scope","authority":"both","parameters":[{"type":"string","name":"variable_name","description":"Name of the variable to export"},{"type":"any","name":"value","description":"Value to be set in the global scope"}]},{"name":"FlushPersistentData","description":"Flushes the Persistent Data pending changes to disk immediately","description_large":"Flushes the Persistent Data pending changes to disk immediately. Note: this operation is already performed automatically under the hood, it is not necessary to keep always flushing and should only be used when really needed, as disk writing is a slow operation","authority":"both"},{"name":"GetCompatibilityVersion","description":"Returns the package compatibility version","authority":"both","return":[{"type":"string","description":"The package compatibility version"}]},{"name":"GetDirectories","description":"Gets a list of all directories in this package","description_long":"Gets a list of all files in this package, optionally with filters","authority":"both","parameters":[{"type":"string","name":"path_filter","default":"","description":"Path filter"}],"return":[{"type":"string[]","description":"List of directories"}]},{"name":"GetFiles","description":"Gets a list of all files in this package","description_long":"Gets a list of all files in this package, optionally with filters","authority":"both","parameters":[{"type":"string|table","name":"path_filter","default":"","description":"Path filter"},{"type":"string","name":"extension_filter","default":"","description":"Example: <code>.lua</code>"}],"return":[{"type":"string[]","description":"List of files"}]},{"name":"GetName","description":"Returns the package name/path","authority":"both","return":[{"type":"string","description":"The package name/path"}]},{"name":"GetPersistentData","description":"Gets the Persistent Value from the disk","description_large":"Gets a Persistent Value from the disk<br/>Pass no parameter to return the whole table, or a key to get a specific value","authority":"both","return":[{"type":"table","description":"Persistent values from disk"}],"parameters":[{"type":"string?","name":"key","default":"","description":"The key to get the data"}],"relations":{"static_functions":["SetPersistentData"]}},{"name":"GetTitle","description":"Returns the package title","authority":"both","return":[{"type":"string","description":"The package title"}]},{"name":"GetVersion","description":"Returns the package version","authority":"both","return":[{"type":"string","description":"The package version"}]},{"name":"Require","description":"Includes new .lua files","description_long":"Includes new .lua files<br/><br/>We currently support 5 searchers, which are looked in the following order:<br/><ol><li>Relative to <code>current-file-path/</code></li><li>Relative to <code>current-package/Client/</code> or <code>current-package/Server/</code> (depending on your side)</li><li>Relative to <code>current-package/Shared/</code></li><li>Relative to <code>current-package/</code></li><li>Relative to <code>Packages/</code></li></ol>","authority":"both","parameters":[{"type":"string","name":"script_file","description":"Path to the script file to require"},{"type":"boolean?","name":"force_load","description":"Whether to force loading this file even if it was already loaded"}],"return":[{"type":"any","description":"Any return values from the included file"}]},{"name":"SetPersistentData","description":"Sets a Persistent Value which will be saved to disk","authority":"both","parameters":[{"type":"string","name":"key","description":"Key to index data into"},{"type":"any","name":"value","description":"Value to set at the key"}],"relations":{"static_functions":["GetPersistentData"]}},{"name":"Subscribe","description":"Subscribes to an Event","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event to subscribe to"},{"type":"function","name":"callback","description":"Callback to run on the event occurring"}],"return":[{"type":"function","description":"The function callback"}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event to unsubscribe to"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to specifically unsubscribe to"}]}],"events":[{"name":"Load","authority":"both","description":"Called when this package is loaded","description_long":"Called when this package is loaded<br/><br/>This event is triggered differently depending on the situation:<br/><ul><li>When the <b>server starts</b> or you run <code>package reload all</code> the event triggers only after ALL packages are loaded.</li><li>In all other cases (<code>package load/reload</code> or <code>Package.Load/Reload</code>) the event is triggered immediately after the package is loaded/reloaded.</li></ul>"},{"name":"Unload","authority":"both","description":"Called when this package is unloaded"}]}'),te=JSON.parse('{"name":"PostProcess","authority":"client","description":"Interaction with Post Process effects.","static_functions":[{"authority":"client","name":"RemoveMaterial","description":"Removes the current Post Process Material"},{"authority":"client","name":"SetBloom","description":"Set Post Process Bloom Settings","parameters":[{"type":"float","name":"intensity","default":"0.675"},{"type":"float","name":"threshold","default":"-1"}]},{"authority":"client","name":"SetChromaticAberration","description":"Set Post Process Chromatic Abberation Settings","parameters":[{"type":"float","name":"intensity","default":"0"},{"type":"float","name":"start_offset","default":"0"}]},{"authority":"client","name":"SetExposure","description":"Set Post Process Exposure Settings","parameters":[{"type":"float","name":"exposure_compensation","default":"1"},{"type":"float","name":"min_ev100","default":"-10"},{"type":"float","name":"max_ev100","default":"20"},{"type":"float","name":"low_percent","default":"10"},{"type":"float","name":"high_percent","default":"90"}]},{"authority":"client","name":"SetFilm","description":"Set Post Process Film Settings","parameters":[{"type":"float","name":"slope","default":"0.8"},{"type":"float","name":"toe","default":"0.55"},{"type":"float","name":"shoulder","default":"0.26"},{"type":"float","name":"black_clip","default":"0"},{"type":"float","name":"white_clip","default":"0.3"}]},{"authority":"client","name":"SetGlobalSaturation","description":"Set Post Process Saturation Colors. Use Alpha for overall Saturation intensity","parameters":[{"type":"Color","name":"color"}]},{"authority":"client","name":"SetImageEffects","description":"Set Post Process Image Effect Settings","parameters":[{"type":"float","name":"vignette_intensity","default":"0.6"},{"type":"float","name":"grain_jitter","default":"0"},{"type":"float","name":"grain_intensity","default":"0"}]},{"authority":"client","name":"SetLookupTable","description":"Set Post Process Lookup Table (LUT) Texture","parameters":[{"type":"ImagePath","name":"texture_path"}]},{"authority":"client","name":"SetMaterial","description":"Sets a Post Process Material","parameters":[{"type":"MaterialPath","name":"material_path","description":"The Material Asset to set as Post Process"}]},{"authority":"client","name":"SetSunAngle","description":"Sets the sun\'s angle (0-360)","parameters":[{"type":"float","name":"angle"}]}]}'),ae=JSON.parse('{"name":"Server","description":"Server represents all Server controls in the Server side.","authority":"server","static_functions":[{"authority":"server","name":"BanByAccountID","description":"Ban the player from the server by it\'s Account ID, ideal for banning from inside PlayerConnect event","parameters":[{"name":"player_account_id","type":"string"},{"name":"reason","type":"string"}]},{"name":"ChangeMap","description":"Restarts the server in a new Map, restarts all packages and reconnects all players","authority":"server","parameters":[{"type":"string","name":"map_path","description":"The new map to load"}]},{"name":"GetAllValuesKeys","description":"Gets a list of all values keys","authority":"server","return":[{"type":"string[]","description":"a list with all values keys"}],"relations":{"functions":["GetValue","SetValue"]}},{"name":"GetCompressionLevel","description":"Returns the server Compression Level being used","authority":"server","return":[{"type":"integer","description":"the server Compression Level"}]},{"name":"GetCustomSettings","description":"Returns the Server Custom Settings passed as parameter or New Game screen","authority":"server","return":[{"type":"table[]","description":"a list of the Custom Settings","table_properties_custom":"\\n\\t\\"[KEY_01]\\" = \\"[VALUE_01]\\",\\n\\t\\"[KEY_02]\\" = \\"[VALUE_02]\\",\\n\\t..."}]},{"name":"GetDescription","description":"Returns the Server Description","authority":"server","return":[{"type":"string","description":"the Server Description"}],"relations":{"static_functions":["SetDescription"]}},{"name":"GetIP","description":"Returns the server Public IP","authority":"server","return":[{"type":"string","description":"the server Public IP"}]},{"name":"GetMap","description":"Returns the current Map Package name","authority":"server","return":[{"type":"string","description":"the current map package"}]},{"name":"GetMapAsset","description":"Returns the current Map Asset reference","authority":"server","return":[{"type":"string","description":"the current map asset"}]},{"name":"GetMapConfig","description":"Returns a list of the Custom Config of the current map (stored in the MAP_NAME.toml)","authority":"server","return":[{"type":"table","description":"a list of the Custom Config of the current map"}]},{"name":"GetMapSpawnPoints","description":"Returns a list of the Spawn Points of the current map (stored in the MAP_NAME.toml)","authority":"server","return":[{"type":"table[]","description":"a list of the Spawn Points of the current map","table_properties":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"}]}]},{"name":"GetMaxPlayers","description":"Returns the Max Players configured","authority":"server","return":[{"type":"integer","description":"the max players configured"}],"relations":{"static_functions":["SetMaxPlayers"]}},{"name":"GetName","description":"Returns the Server Name","authority":"server","return":[{"type":"string","description":"The Server Name"}],"relations":{"static_functions":["SetName"]}},{"name":"GetPackages","description":"Returns a list of Packages running, optionally returns all Packages installed in the server","authority":"server","return":[{"type":"table[]","description":"a list of Packages data","table_properties":[{"name":"title","type":"string"},{"name":"name","type":"string"},{"name":"type","type":"PackageType"},{"name":"version","type":"string"},{"name":"author","type":"string"}]}],"parameters":[{"type":"boolean","name":"only_loaded","description":"Set to true the function return only loaded and running packages. Caution: setting to false will retrieve Packages list from disk, which is a slow operation!","default":"true"},{"type":"PackageType","name":"package_type_filter","description":"Which Package type to return. Leave it default (-1) to return all types.","default":"-1"}]},{"name":"GetPort","description":"Returns the server Port","authority":"server","return":[{"type":"integer","description":"the server Port"}]},{"name":"GetQueryPort","description":"Returns the server QueryPort","authority":"server","return":[{"type":"integer","description":"the server QueryPort"}]},{"name":"GetTickRate","description":"Returns the Configured Tick Rate","authority":"server","return":[{"type":"integer","description":"the server Tick Rate"}]},{"name":"GetTime","description":"Gets the Unix Epoch Time in milliseconds","authority":"server","return":[{"type":"integer","description":"the unix timestamp"}]},{"name":"GetValue","description":"Gets a value given a key","authority":"server","return":[{"type":"any","description":"Value at key or fallback if key doesn\'t exist"}],"parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"fallback","description":"Fallback Value if key doesn\'t exist"}],"relations":{"functions":["GetAllValuesKeys"],"static_functions":["SetValue"]}},{"name":"GetVersion","description":"Returns the server version","authority":"server","return":[{"type":"string","description":"the server version"}]},{"name":"IsAnnounced","description":"Returns if the Server is announced in the Master List","authority":"server","return":[{"type":"boolean","description":"if the Server is announced in the Master List"}]},{"name":"IsPackageLoaded","description":"Returns if a Package is currently loaded","authority":"server","return":[{"type":"boolean","description":"If the package is loaded"}],"parameters":[{"type":"string","name":"package_name","description":""}]},{"authority":"server","name":"KickByAccountID","description":"Kicks the player from the server by it\'s Account ID, ideal for kicking from inside PlayerConnect event","parameters":[{"name":"player_account_id","type":"string"},{"name":"reason","type":"string"}]},{"name":"LoadPackage","description":"Loads a Package","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to load"}],"return":[{"type":"boolean","description":"if the Package was loaded"}],"relations":{"functions":["ReloadPackage","UnloadPackage"]}},{"name":"ReloadPackage","description_long":"Reloads a Package<br/>Note: the package is effectively reloaded in the next server tick","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to reload"}],"return":[{"type":"boolean","description":"if the Package was found"}],"relations":{"functions":["LoadPackage","UnloadPackage"]}},{"name":"Restart","description":"Restarts the server, reloading all Packages and reconnecting all Players","authority":"server"},{"name":"SetDescription","description":"Sets the description of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"description","description":"The new description"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}],"relations":{"static_functions":["GetDescription"]}},{"name":"SetLogo","description":"Sets the logo of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"logo_url","description":"The new logo"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetMaxPlayers","description":"Sets the maximum player slots of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"integer","name":"max_players","description":"The maximum players"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}],"relations":{"static_functions":["GetMaxPlayers"]}},{"name":"SetName","description":"Sets the name of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"name","description":"The new name"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}],"relations":{"static_functions":["GetName"]}},{"name":"SetPassword","description":"Sets the password of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"password","description":"The new password"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetValue","description":"Sets a global value in the Server, which can be accessed from anywhere (server side)","authority":"server","parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"value","description":"Value"},{"name":"sync_on_client","type":"boolean","default":"false","description":"If enabled will sync this value through all clients, accessible through Client.GetValue() static class."}],"relations":{"functions":["GetAllValuesKeys"],"static_functions":["GetValue"]}},{"name":"Stop","description":"Stops the server","authority":"server"},{"name":"Subscribe","description":"Subscribes for an Event","authority":"server","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":"The name of the Event"},{"type":"function","name":"function","description":"Callback function"}]},{"name":"Unban","description":"Unbans a Player by it\'s account ID","authority":"server","parameters":[{"type":"string","name":"account_id","description":"nanos account ID"}]},{"name":"UnloadPackage","description":"Unloads a Package","description_long":"Unloads a Package<br/>Note: the package is effectively unloaded in the next server tick","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package you want unload"}],"return":[{"type":"boolean","description":"if the Package was found"}],"relations":{"functions":["LoadPackage","ReloadPackage"]}},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The name of the Events"},{"type":"function","name":"function","description":"Callback function","default":"nil"}]}],"events":[{"name":"ChangeMap","description":"Called when the map changes","description_long":"Called when the map changes. This is always called just before Restart event","authority":"server","arguments":[{"type":"string","name":"old_map"},{"type":"string","name":"new_map"}]},{"name":"PlayerConnect","description":"Called when a player is attempting to connect to the server","description_long":"Called when a player is attempting to connect to the server<br/><br/>Use Server.KickByAccountID() or Server.BanByAccountID() to kick or ban the player from inside this event.","authority":"server","arguments":[{"type":"string","name":"IP","description":"IP of the player"},{"type":"string","name":"player_account_ID","description":"Account ID of the player"},{"type":"string","name":"player_name","description":"Player name"},{"type":"string","name":"player_steam_ID","description":"SteamID of the player"}],"relations":{"functions":["KickByAccountID","BanByAccountID"]}},{"name":"Restart","description":"Server has been restarted","authority":"server"},{"name":"Start","description":"Server has been started","authority":"server"},{"name":"Stop","description":"Server has been stopped","authority":"server"},{"name":"Tick","description":"Triggered every 33ms by default","description_long":"Triggered every 33ms by default<br/><br/>Caution: Only small operations should be performed here, otherwise this can lead to server lag and delays","authority":"server","arguments":[{"type":"float","name":"delta_time","description":""}]}]}'),ne=JSON.parse('{"name":"Sky","description":"Interact with built-in Sky & Weather system.","authority":"client","static_functions":[{"authority":"client","name":"ChangeWeather","description":"Changes the Weather","parameters":[{"type":"WeatherType","name":"weather","description":"weather to change"},{"type":"float","name":"transition_time","description":"fade time to completely change to new weather"}]},{"authority":"client","name":"DestroyAllSky","description":"Destroys all Directional Lights, Sky Lights, Exponential Height Fogs, Volumetric Clouds, Sky Atmosphere, Ultra Dynamic Sky Actors and all Actors with the <code>Sun</code> Actor Tag from the Level"},{"authority":"client","name":"GetTimeOfDay","description":"Gets the current time","return":[{"type":"integer","description":"hours"},{"type":"integer","description":"minutes"},{"type":"integer","description":"seconds"}],"relations":{"static_functions":["SetTimeOfDay"]}},{"authority":"client","name":"GetWeather","description":"Gets the current weather","return":[{"type":"WeatherType"}]},{"authority":"client","name":"IsSpawned","description":"Returns if the Ultra Dynamic Sky was spawned","parameters":[{"type":"boolean","name":"including_weather","description":"if to check for Weather Actor too"}],"return":[{"type":"boolean"}]},{"authority":"client","name":"Reconstruct","description":"Reconstruct the Ultra Dynamic Sky Actor, forces most of the changes to be applied"},{"authority":"client","name":"SetAnimateTimeOfDay","description":"Sets whether or not to animate the time of day","parameters":[{"type":"boolean","name":"animate","description":"Whether or not to animate the time of day"},{"type":"float?","name":"day_length","default":"30.0","description":"The time (in minutes) from sunrise to sunset"},{"type":"float?","name":"night_length","default":"15.0","description":"The time (in minutes) from sunset to sunrise"}]},{"authority":"client","name":"SetCloudCoverage","description":"The amount of coverage for the cloud layer, from a clear sky to overcast","parameters":[{"type":"float","name":"cloud_coverage"}]},{"authority":"client","name":"SetContrast","description":"A simple contrast boost for the sky material. Cannot affect volumetric clouds","parameters":[{"type":"float","name":"contrast"}]},{"authority":"client","name":"SetFog","description":"The fogginess of the scene. The impact this has on fog density is scaled from the Fog Density category","parameters":[{"type":"float","name":"fog_percentage"}]},{"authority":"client","name":"SetMoonAngle","description":"Sets the Moon Angle","parameters":[{"type":"float","name":"yaw"},{"type":"float","name":"pitch"}]},{"authority":"client","name":"SetMoonGlowIntensity","description":"Sets the Moon Glow Intensity","parameters":[{"type":"float","name":"glow_intensity"}]},{"authority":"client","name":"SetMoonLightIntensity","description":"Sets the Moon Light Intensity","parameters":[{"type":"float","name":"intensity"}]},{"authority":"client","name":"SetMoonPhase","description":"Sets the Moon Phase","parameters":[{"type":"float","name":"phase","description":"Ranges from 0-30"}]},{"authority":"client","name":"SetMoonScale","description":"Sets the Moon Scale","parameters":[{"type":"float","name":"scale"}]},{"authority":"client","name":"SetMoonTexture","description":"Sets the Moon Texture","description_long":"Sets the Moon Texture<br /><br />Set it to empty to restore the default. After setting it, you must call <code>Sky.Reconstruct()</code> to have it applied properly","parameters":[{"type":"ImagePath","name":"texture"}]},{"authority":"client","name":"SetMoonTextureRotation","description":"Sets the Moon Texture Rotation","parameters":[{"type":"float","name":"rotation"}]},{"authority":"client","name":"SetMoonVerticalOffset","description":"Sets the Moon Vertical Offset","parameters":[{"type":"float","name":"offset"}]},{"authority":"client","name":"SetNightBrightness","description":"Can be used to scale the brightness of the sky and lighting, at night","parameters":[{"type":"float","name":"brightness"}]},{"authority":"client","name":"SetOverallIntensity","description":"The overall brightness of the shader","parameters":[{"type":"float","name":"intensity"}]},{"authority":"client","name":"SetSkyMode","description":"Sets the Sky Mode","description_long":"Sets the Sky Mode<br /><br />After setting it, you must call <code>Sky.Reconstruct()</code> to have it applied properly","parameters":[{"type":"SkyMode","name":"sky_mode"}]},{"authority":"client","name":"SetSunAngle","description":"Sets the Sun Angle","parameters":[{"type":"float","name":"yaw"},{"type":"float","name":"pitch"}]},{"authority":"client","name":"SetSunLightIntensity","description":"Sets the Sun Light Intensity","parameters":[{"type":"float","name":"intensity"}]},{"authority":"client","name":"SetSunScale","description":"Sets the Sun Scale","parameters":[{"type":"float","name":"radius"}]},{"authority":"client","name":"SetTimeOfDay","description":"Sets the current time","parameters":[{"type":"integer","name":"hours"},{"type":"integer","name":"minutes"}],"relations":{"static_functions":["GetTimeOfDay"]}},{"authority":"client","name":"SetVolumetricCloudColor","description":"Sets the Volumetric Cloud Color","description_long":"Sets the Volumetric Cloud Color<br /><br />This is only applied if <code>SetSkyMode(SkyMode.VolumetricClouds)</code> is set","parameters":[{"type":"Color","name":"color"}]},{"authority":"client","name":"Spawn","description":"Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page","description_long":"Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page. Internally this calls <code>Sky.DestroyAllSky()</code> automatically","parameters":[{"type":"boolean","name":"spawn_weather","default":"false","description":"Whether or not to spawn the Weather Actor (to be able to use Weather related methods)"},{"type":"boolean","name":"find_existing","default":"true","description":"Whether or not to try to find existing Sky & Weather Actors spawned in the map, using their references instead"}]}]}'),ie=JSON.parse('{"name":"Steam","description":"Interact with Steam APIs.","authority":"client","static_functions":[{"name":"SetRichPresence","description":"Sets Steam Rich Presence text","authority":"client","parameters":[{"type":"string","name":"text","description":""}]}]}'),re=JSON.parse('{"name":"Timer","description":"Execute code at specified time intervals.","authority":"both","static_functions":[{"name":"Bind","authority":"both","description":"Binds a Timer to any Actor. The timer will be automatically cleared when the Actor is destroyed","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"},{"type":"Actor","name":"actor","description":"Actor to be bound"}],"examples":[{"title":"Binding a Timer to an Entity","content":["local character = Character(Vector(), Rotator(), \\"nanos-world::SK_Male\\")","","local my_timer = Timer.SetTimeout(function(_character)","    -- Do something with _character","    -- Ex: Destroy the character after 10 seconds","    _character:Destroy()","end, 10000, character)","","-- Binds the Timer to the Character","-- This will ensure it will never trigger if the character is destroyed before it","-- With this you don\'t need to validate if the \'_character\' parameter is valid","Timer.Bind(my_timer, character)"]}]},{"name":"ClearInterval","authority":"both","description":"Stops the execution of the function specified in SetInterval()","parameters":[{"type":"integer","name":"interval_id","description":"The ID value returned by SetInterval() is used as the parameter for this method"}]},{"name":"ClearTimeout","authority":"both","description":"Stops the execution of the function specified in SetTimeout()","parameters":[{"type":"integer","name":"timeout_id","description":"The ID value returned by SetTimeout() is used as the parameter for this method"}]},{"name":"GetElapsedTime","authority":"both","description":"Returns the time elapsed since the last tick","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"integer","name":"elapsed_time"}]},{"name":"GetRemainingTime","authority":"both","description":"Returns the time remaining to the next tick","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"integer","name":"remaining_time"}]},{"name":"IsValid","authority":"both","description":"Checks if a Timer is currently active or waiting to be triggered","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"boolean","name":"is_valid"}]},{"name":"Pause","authority":"both","description":"Pauses the Timer","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"ResetElapsedTime","authority":"both","description":"Resets a Timer to restart from beginning","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"Resume","authority":"both","description":"Resumes the Timer","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"SetInterval","authority":"both","description":"Same as SetTimeout(), but repeats the execution of the function continuously","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed.<br/>Return false to stop it from being called."},{"type":"integer","name":"milliseconds","default":"0","description":"The time in milliseconds the timer should delay in between executions of the specified function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"integer","description":"the interval_id"}]},{"name":"SetTimeout","authority":"both","description":"Executes a function, after waiting a specified number of milliseconds","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed"},{"type":"integer","name":"milliseconds","default":"0","description":"The time in milliseconds to wait before executing the function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"integer","description":"the timeout_id"}]}]}'),oe=JSON.parse('{"name":"Trace","description":"Trace a ray against the world and get collided objects information.","authority":"client","static_functions":[{"name":"BoxMulti","description":"Trace a box against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a box against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the box"},{"type":"Vector","name":"end_location","description":"End location of the box"},{"type":"Vector","name":"half_size","description":"Distance from the center of box along each axis"},{"type":"Rotator","name":"orientation","description":"Orientation of the box"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"BoxSingle","description":"Trace a box against the world and returns a table with the first blocking hit information","description_long":"Trace a box against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the box"},{"type":"Vector","name":"end_location","description":"End location of the box"},{"type":"Vector","name":"half_size","description":"Distance from the center of box along each axis"},{"type":"Rotator","name":"orientation","description":"Orientation of the box"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"CapsuleMulti","description":"Trace a capsule against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a capsule against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the capsule"},{"type":"Vector","name":"end_location","description":"End location of the capsule"},{"type":"float","name":"radius","description":"Radius of the capsule to sweep"},{"type":"float","name":"half_height","description":"Distance from center of capsule to tip of hemisphere endcap."},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"CapsuleSingle","description":"Trace a capsule against the world and returns a table with the first blocking hit information","description_long":"Trace a capsule against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the capsule"},{"type":"Vector","name":"end_location","description":"End location of the capsule"},{"type":"float","name":"radius","description":"Radius of the capsule to sweep"},{"type":"float","name":"half_height","description":"Distance from center of capsule to tip of hemisphere endcap."},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"LineMulti","description":"Trace a ray against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a ray against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the ray"},{"type":"Vector","name":"end_location","description":"End location of the ray"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"LineSingle","description":"Trace a ray against the world and returns a table with the first blocking hit information","description_long":"Trace a ray against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the ray"},{"type":"Vector","name":"end_location","description":"End location of the ray"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"SphereMulti","description":"Trace a sphere against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a sphere against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the sphere"},{"type":"Vector","name":"end_location","description":"End location of the sphere"},{"type":"float","name":"radius","description":"Radius of the sphere"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"SphereSingle","description":"Trace a sphere against the world and returns a table with the first blocking hit information","description_long":"Trace a sphere against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the sphere"},{"type":"Vector","name":"end_location","description":"End location of the sphere"},{"type":"float","name":"radius","description":"Radius of the sphere"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]}]}'),se=JSON.parse('{"name":"Viewport","description":"Work with screen properties and effects.","authority":"client","static_functions":[{"name":"DeprojectScreenToWorld","description":"Transforms a 2D screen coordinates into 3D world-space location","authority":"client","parameters":[{"type":"Vector2D","name":"screen_position","description":"Screen position"}],"return":[{"type":"table","table_properties":[{"name":"Position","type":"Vector"},{"name":"Direction","type":"Vector"}]}]},{"name":"GetMousePosition","description":"Gets the current mouse screen location","authority":"client","return":[{"type":"Vector2D","description":"The current mouse screen location"}],"relations":{"static_functions":["SetMousePosition"]}},{"name":"GetViewportScale","description":"Gets the scale of viewport","authority":"client","return":[{"type":"float","description":"The scale of viewport"}]},{"name":"GetViewportSize","description":"Gets the size of viewport","authority":"client","return":[{"type":"Vector2D","description":"The size of viewport"}]},{"name":"ProjectWorldToScreen","description":"Transforms a 3D world-space vector into 2D screen coordinates","authority":"client","parameters":[{"type":"Vector","name":"world_position","description":"World 3D position"}],"return":[{"type":"Vector2D"}]},{"name":"SetBloodScreenEnabled","description":"Enables/Disables the Blood Screen effect","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"SetBloodScreenIntensity","description":"Manually sets the Blood Screen intensity","description_long":"If you want the Blood Screen to do not be overridden, disable it with <code>Client.SetBloodScreenEnabled(false)</code> before","authority":"client","parameters":[{"type":"float","name":"intensity","description":"From 0.0 to 1.0"}]},{"name":"SetCrosshairEnabled","description":"Enables/Disables the Crosshair","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"SetHardwareCursor","description":"Loads and sets a hardware cursor in the game from a PNG image","description_long":"Loads and sets a hardware cursor in the game from a PNG image<br/>Note: due an engine limitation modifying an already set cursor image will not change the cursor until the game is restarted","authority":"client","parameters":[{"type":"CursorType","name":"cursor_shape","description":""},{"type":"ImagePath","name":"cursor_path","description":"a PNG image relative to Assets/"},{"type":"Vector2D","name":"hotspot","description":"","default":"Vector(0, 0)"}]},{"name":"SetMousePosition","description":"Sets the mouse position","authority":"client","parameters":[{"type":"Vector2D","name":"new_position","description":""}],"relations":{"static_functions":["GetMousePosition"]}}],"events":[{"name":"Resize","description":"Called when the screen is resized","authority":"client","arguments":[{"type":"Vector2D","name":"new_size","description":"New new screen size"}]}]}'),le=JSON.parse('{"name":"JSON","description":"JSON library.","static_functions":[{"name":"stringify","description":"Returns a string representing value encoded in JSON","return":[{"type":"string","description":"the table in JSON"}],"parameters":[{"type":"table","name":"value","description":"the table that will become JSON"}],"examples":[{"title":"Stringifies a Lua table","content":"local encoded_value = JSON.stringify({ 1, 2, 3, { x = 10, y = Vector(1, 2, 3) }, \\"he\\" })","output":"[1,2,3,{\\"x\\":10,\\"y\\":\\"Vector(1.0, 2.0, 3.0)\\"},\\"he\\"]"}]},{"name":"parse","description":"Returns a value representing the decoded JSON string","return":[{"type":"any","description":"the json in table"}],"parameters":[{"type":"string","name":"value","description":"the JSON that will become a table"}],"examples":[{"title":"Parses a JSON string into a Lua table","content":"local decoded_value = JSON.parse(\'[1,2,3,{\\"x\\":10,\\"y\\":\\"Vector(1.0, 2.0, 3.0)\\"},\\"he\\"]\')","output":"the table { 1, 2, 3, { x = 10, y = Vector(1, 2, 3) }, \\"he\\" }"}]}]}'),ce=JSON.parse('{"name":"TOML","description":"TOML library.","static_functions":[{"name":"Dump","description":"Returns a string representing value encoded in TOML","return":[{"type":"string","description":"the table in TOML"}],"parameters":[{"type":"table","name":"value","description":"the table that will become TOML"}],"examples":[{"title":"Stringifies a Lua table","content":"local encoded_value = TOML.Dump({ 1, 2, 3, { x = 10, y = Vector(1, 2, 3) }, \\"he\\" })","output":"[ 1, 2, 3, { y = \\"Vector(1.000000, 2.000000, 3.000000)\\", x = 10 }, \\"he\\" ]"}]},{"name":"Parse","description":"Returns a value representing the decoded TOML string","return":[{"type":"any","description":"the TOML in table"}],"parameters":[{"type":"string","name":"value","description":"the TOML that will become a table"}],"examples":[{"title":"Parses a TOML string into a Lua table","content":"local decoded_value = TOML.Parse(\\"my_table = [ 1, 2, 3 ]\\")","output":"the table { [\\"my_table\\"] = { [1] = 1, [2] = 2, [3] = 3 } }"}]}]}'),pe=JSON.parse('{"name":"NanosMath","description":"A table containing useful and aux Math functions.","static_functions":[{"name":"Round","description":"Rounds a number","return":[{"type":"number","description":"the rounded number"}],"parameters":[{"type":"number","name":"value","description":"The number to be rounded"}]},{"name":"Clamp","description":"Clamps a number","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"},{"type":"number","name":"min","description":"The min value"},{"type":"number","name":"max","description":"The max value"}]},{"name":"ClampAxis","description":"Clamps an angle to the range of [0, 360]","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"}],"examples":[{"title":"Clamping an angle","content":"local axis = NanosMath.ClampAxis(720)"}]},{"name":"NormalizeAxis","description":"Clamps an angle to the range of [-180, 180]","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"}]},{"name":"RelativeTo","description":"Calculates the location and rotation relative to an actor","return":[{"type":"Vector","description":"the location relative to the actor"},{"type":"Rotator","description":"the rotation relative to the actor"}],"parameters":[{"type":"Vector","name":"location","description":"The location of the new system"},{"type":"Rotator","name":"rotation","description":"The rotation of the new system"},{"type":"Actor","name":"actor","description":"The actor to be translated to the new system"}]},{"name":"RandomFloat","description":"Returns a random float value","return":[{"type":"float","description":"the random value"}],"parameters":[{"type":"float","name":"min","description":"Minimum value"},{"type":"float","name":"max","description":"Maximum value"}]},{"name":"FInterpTo","description":"Interpolate number from Current to Target","return":[{"type":"number"}],"parameters":[{"type":"number","name":"current"},{"type":"number","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}],"examples":[{"title":"Interpolating a number until it reaches 100 with speed 3","content":["local my_value = 0","Client.Subscribe(\\"Tick\\", function(delta_time)","    my_value = NanosMath.FInterpTo(my_value, 100, delta_time, 3)","end)"]}]},{"name":"RInterpTo","description":"Interpolate Rotator from Current to Target","return":[{"type":"Rotator"}],"parameters":[{"type":"Rotator","name":"current"},{"type":"Rotator","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"RInterpConstantTo","description":"Interpolate Rotator from Current to Target with a constant step","return":[{"type":"Rotator"}],"parameters":[{"type":"Rotator","name":"current"},{"type":"Rotator","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"VInterpTo","description":"Interpolate Vector from Current to Target","return":[{"type":"Vector"}],"parameters":[{"type":"Vector","name":"current"},{"type":"Vector","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}],"examples":[{"title":"Interpolating a Vector until it reaches Vector(1000, 200, 100) with speed 5","content":["local my_value = Vector(0, 0, 0)","Client.Subscribe(\\"Tick\\", function(delta_time)","    my_value = NanosMath.VInterpTo(my_value, Vector(1000, 200, 100), delta_time, 5)","end)"]}]},{"name":"VInterpConstantTo","description":"Interpolate Vector from Current to Target with a constant step","return":[{"type":"Vector"}],"parameters":[{"type":"Vector","name":"current"},{"type":"Vector","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]}]}'),de=JSON.parse('{"name":"NanosUtils","description":"A table containing useful and aux functions.","static_functions":[{"name":"IsEntityValid","description":"Returns if an entity is valid","return":[{"type":"boolean","description":"if the entity is valid"}],"parameters":[{"type":"any","name":"entity","description":"Entity to verify"}]},{"name":"Benchmark","description":"Benchmarks a function performance","description_long":"Benchmarks a function performance, outputs in the console the elapsed time","parameters":[{"type":"string","name":"name","description":"Benchmark name to output"},{"type":"number","name":"amount","description":"Amount of times to loop"},{"type":"function","name":"func","description":"The function to call"},{"type":"any","name":"args...","description":"The arguments of the function to call"}],"examples":[{"title":"Benchmarks a function","content":["local arg1 = math.random()","local arg2 = math.random()","","NanosUtils.Benchmark(\\"My Heavy Operation\\", 1000, function(param1, param2)","    -- Do some heavy operations here","    local result = param1 * param2","end, arg1, arg2)",""],"output":"Benchmark \'My Heavy Operation\' (x1000) took 1.5ms"}]}]}'),he=JSON.parse('{"name":"NanosTable","description":"A table containing useful and aux table functions.","static_functions":[{"name":"Dump","description":"Dumps a table into a readable text","return":[{"type":"string","description":"the table as readable text"}],"parameters":[{"type":"table","name":"table","description":"Table to dump"}],"examples":[{"title":"Dumps a table","content":["local table = {","    \\"my_key\\" = 123,","    [2] = \\"my_value\\"","}","","local dump_text = NanosTable.Dump(table)","","Console.Log(dump_text)","","-- Outputs Text","--[[","{","   \\"my_key\\": 123,","    2 = \\"my_value\\"","}","--]]"]}]},{"name":"ShallowCopy","description":"Performs a shallow copy of a table","return":[{"type":"table","description":"the copied table"}],"parameters":[{"type":"table","name":"table","description":"The table to shallow copy"}]}]}'),me=JSON.parse('{"name":"string","description":"This library provides generic functions for string manipulation, such as finding and extracting substrings, and pattern matching. When indexing a string in Lua, the first character is at position 1 (not at 0, as in C). Indices are allowed to be negative and are interpreted as indexing backwards, from the end of the string. Thus, the last character is at position -1, and so on.","functions":[{"name":"StartsWith","description":"Test whether this string starts with given string","is_native":false,"return":[{"type":"boolean"}],"parameters":[{"type":"string","name":"other_string","description":"The given string"}],"examples":[{"title":"Checks if string starts with text","content":["local str = \\"awesome text!\\"","local starts = str:StartsWith(\\"awesome\\")"],"output":"true"}]},{"name":"EndsWith","description":"Test whether this string ends with given string","is_native":false,"return":[{"type":"boolean"}],"parameters":[{"type":"string","name":"other_string","description":"The given string"}],"examples":[{"title":"Checks if string ends with text","content":["local str = \\"awesome text!\\"","local ends = str:EndsWith(\\"text!\\")"],"output":"true"}]},{"name":"Trim","description":"Returns a new string with removed whitespace characters from the front and end of this string","is_native":false,"return":[{"type":"string"}],"examples":[{"title":"Removes extra spaces","content":["local str = \\"  Hello world!    \\"","local new_str = str:Trim()"],"output":"Hello world!"}]},{"name":"FormatArgs","description":"A better string.Format, replace <code>{num}</code> by the corresponding vararg in a string","is_native":false,"examples":[{"title":"Replaces {1} and {2} with corresponding texts","content":["local str = \\"Hello {2} I\'m {1}\\"","local new_str = str:FormatArgs(\\"a noob\\", \\"world!\\")"],"output":"Hello world! I\'m a noob"}],"return":[{"type":"string"}],"parameters":[{"type":"any...","name":"args","description":"The args"}]},{"name":"byte","description":"Returns the internal numeric codes of the characters <code>s[start_pos], s[start_pos + 1], ..., s[end_pos]</code>","is_native":true,"return":[{"type":"integer...","description":"the internal numeric code"}],"parameters":[{"type":"integer","name":"start_pos","default":"1","description":"The first character of the string to get the byte of"},{"type":"integer","name":"end_pos","default":"start_pos","description":"The last character of the string to get the byte of"}]},{"name":"char","description":"Receives zero or more integers. Returns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument","is_native":true,"return":[{"type":"string","description":"the string"}],"parameters":[{"type":"integer...","name":"values"}]},{"parameters":[{"type":"string","name":"haystack","description":"The string to search in."},{"type":"string","name":"needle","description":"The string to find, can contain patterns if enabled."},{"type":"number","name":"startPos","description":"The position to start the search from, can be negative start position will be relative to the end position."},{"type":"boolean","name":"noPatterns","description":"Disable patterns."}],"return":[{"type":"number"},{"type":"number"},{"type":"string"}],"is_native":true,"name":"find","description":"Looks for the first match of <code>pattern</code> in the string."},{"parameters":[{"type":"string","name":"str","description":"The string to convert."},{"type":"number","name":"repetitions","description":"Timer to repeat, this values gets rounded internally."},{"type":"string","name":"separator","description":"String that will separate the repeated piece. Notice that it doesn\'t add this string to the start or the end of the result, only between the repeated parts."}],"return":[{"type":"string"}],"is_native":true,"name":"rep","description":"Returns a string that is the concatenation of <code>n</code> copies of the string <code>s</code> separated by the string <code>sep</code>."},{"parameters":[{"type":"string","name":"str","description":"The string to convert."}],"return":[{"type":"string"}],"is_native":true,"name":"lower","description":"Returns a copy of this string with all uppercase letters changed to lowercase."},{"parameters":[{"type":"string","name":"str","description":"The string to convert."}],"return":[{"type":"string"}],"is_native":true,"name":"upper","description":"Returns a copy of this string with all lowercase letters changed to uppercase."},{"parameters":[{"type":"function","name":"func","description":"The function to get the bytecode of"},{"type":"boolean","name":"stripDebugInfo","description":"True to strip the debug data, false to keep it"}],"return":[{"type":"string"}],"is_native":true,"name":"dump","description":"Returns a string containing a binary representation (a *binary chunk*) of the given function."},{"parameters":[{"type":"string","name":"string","description":"String which should be searched in for matches."},{"type":"string","name":"pattern","description":"The pattern that defines what should be matched."},{"type":"number","name":"startPosition","description":"The start index to start the matching from, can be negative to start the match from a position relative to the end."}],"return":[{"type":"number"}],"is_native":true,"name":"match","description":"Looks for the first match of <code>pattern</code> in the string."},{"parameters":[{"type":"string","name":"str","description":"The string to be reversed."}],"return":[{"type":"string"}],"is_native":true,"name":"reverse","description":"Returns a string that is the string <code>s</code> reversed."},{"parameters":[{"type":"string","name":"string","description":"The string you\'ll take a sub-string out of."},{"type":"number","name":"StartPos","description":"The position of the first character that will be included in the sub-string."},{"type":"number","name":"EndPos","description":"The position of the last character to be included in the sub-string. It can be negative to count from the end."}],"return":[{"type":"string"}],"is_native":true,"name":"sub","description":"Returns the substring of the string that starts at <code>i</code> and continues until <code>j</code>."},{"parameters":[{"type":"string","name":"data","description":"The string to search in"},{"type":"string","name":"pattern","description":"The pattern to search for"}],"return":[{"type":"function"}],"is_native":true,"name":"gmatch","description":"Returns an iterator function that, each time it is called, returns the next captures from <code>pattern</code> over the string s. "},{"parameters":[{"type":"string","name":"str","description":"The string to find the length of."}],"return":[{"type":"number"}],"is_native":true,"name":"len","description":"Returns its length."},{"parameters":[{"type":"string","name":"string","description":"String which should be modified."},{"type":"string","name":"pattern","description":"The pattern that defines what should be matched and eventually be replaced."},{"type":"string","name":"replacement","description":"In case of a string the matched sequence will be replaced with it. In case of a table, the matched sequence will be used as key and the table will tested for the key, if a value exists it will be used as replacement.  In case of a function all matches will be passed as parameters to the function, the return value(s) of the function will then be used as replacement."},{"type":"number","name":"maxReplaces","description":"Maximum number of replacements to be made."}],"return":[{"type":"string"},{"type":"number"}],"is_native":true,"name":"gsub","description":"Returns a copy of s in which all (or the first <code>n</code>, if given) occurrences of the <code>pattern</code> have been replaced by a replacement string specified by <code>repl</code>."},{"parameters":[{"type":"string","name":"format","description":"The string to be formatted"},{"type":"number","name":"formatParameters","description":"Values to be formatted into the string."}],"return":[{"type":"string"}],"is_native":true,"name":"format","description":"Returns a formatted version of its variable number of arguments following the description given in its first argument."}]}'),ue=JSON.parse('{"name":"table","description":"This library provides generic functions for table manipulation. It provides all its functions inside the table <code>table</code>.","static_functions":[{"parameters":[{"type":"table","name":"tbl","description":"The table to insert the variable into."},{"type":"number","name":"position","description":"The position in the table to insert the variable. If the third argument is nil this argument becomes the value to insert at the end of given table.","default":"#tbl + 1"},{"type":"any","name":"value","description":"The variable to insert into the table.","default":""}],"return":[{"type":"number"}],"is_native":true,"description":"Inserts element value at <code>position</code> in <code>tbl</code>","description_long":"Inserts element value at <code>position</code> in <code>tbl</code>, shifting up the elements <code>tbl[position], tbl[position + 1], \xb7\xb7\xb7, tbl[#tbl]</code>","name":"insert"},{"parameters":[{"type":"table","name":"tbl","description":"The table to sort."},{"type":"function","name":"sorter","description":"If specified, the function will be called with 2 parameters each.\\r\\nReturn true in this function if you want the first parameter to come first in the sorted array."}],"is_native":true,"description":"Sorts the <code>tbl</code> elements in a given order, in-place, from <code>tbl[1]</code> to <code>tbl[#tbl]</code>","description_long":"Sorts the <code>tbl</code> elements in a given order, in-place, from <code>tbl[1]</code> to <code>tbl[#tbl]</code>. If <code>sorter</code> is given, then it must be a function that receives two <code>tbl</code> elements and returns true when the first element must come before the second in the final order, so that, after the sort, i &lt;= j implies <code>not sorter(tbl[j], tbl[i])</code>. If <code>sorter</code> is not given, then the standard Lua operator &lt; is used instead.<br/><br/>The <code>sorter</code> function must define a consistent order; more formally, the function must define a strict weak order. (A weak order is similar to a total order, but it can equate different elements for comparison purposes).<br/><br/>The sort algorithm is not stable: Different elements considered equal by the given order may have their relative positions changed by the sort.","name":"sort"},{"parameters":[{"type":"table","name":"source_table","description":"The source table from which the elements are to be moved."},{"type":"number","name":"from","description":"The start index of the source range from which the elements are to be moved."},{"type":"number","name":"to","description":"The end index of the source range until which the elements are to be moved."},{"type":"number","name":"dest","description":"The index within the destination table where the moved elements should be inserted. If this is not specified, the moved elements will be inserted at the end of the table."},{"type":"table","name":"dest_table","description":"The destination table to which the elements are to be moved. By default, this is the same as the source table.","default":"source_table"}],"return":[{"type":"table"}],"is_native":true,"description":"Moves elements from the <code>source_table</code> to the <code>dest_table</code>","description_long":"Moves elements from the <code>source_table</code> to the <code>dest_table</code>, performing the equivalent to the following multiple assignment: <code>dest_table[dest], \xb7\xb7\xb7 = a1[from], \xb7\xb7\xb7, source_table[to]</code>.<br /><br />The destination range can overlap with the source range. The number of elements to be moved must fit in a Lua integer.","name":"move"},{"parameters":[{"type":"table","name":"tbl","description":"The table to remove the value from."},{"type":"number","name":"index","description":"The index of the value to remove."}],"return":[{"type":"any"}],"is_native":true,"description":"Removes from <code>tbl</code> the element at position <code>index</code>, returning the value of the removed element","description_long":"Removes from <code>tbl</code> the element at position <code>index</code>, returning the value of the removed element.<br /><br />When <code>index</code> is an integer between 1 and <code>#tbl</code>, it shifts down the elements <code>tbl[index + 1], tbl[index + 2], \xb7\xb7\xb7, tbl[#tbl]</code> and erases element <code>tbl[#tbl]</code>.<br /><br />The <code>index</code> can also be 0 when <code>#tbl</code> is 0, or <code>#tbl + 1</code>.","name":"remove"},{"parameters":[{"type":"table","name":"tbl","description":"The table to concatenate."},{"type":"string","name":"separator","description":"A separator to insert between strings","default":"\\"\\""},{"type":"number","name":"start_pos","description":"The index to start at","default":"1"},{"type":"number","name":"end_pos","description":"The index to end at","default":"#tbl"}],"return":[{"type":"string"}],"is_native":true,"description":"Given a <code>tbl</code> where all elements are strings or numbers, returns the string with elements concatenated.","description_long":"Given a <code>tbl</code> where all elements are strings or numbers, returns the string <code>tbl[start_pos] .. separator .. tbl[start_pos + 1] ... separator .. tbl[end_pos]</code>.<br/><br/>If <code>start_pos</code> is greater than <code>end_pos</code>, returns the empty string","name":"concat"}]}'),ye=JSON.parse('{"name":"math","description":"This library provides basic mathematical functions. It provides all its functions and constants inside the table <code>math</code>.","static_properties":[{"name":"pi","value":"3.141592653589793"},{"name":"huge","value":"2^1024"}],"static_functions":[{"parameters":[{"type":"number","name":"number","description":"The number to be rounded up."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the integer no greater than the given value (even for negatives)","name":"ceil"},{"parameters":[{"type":"number","name":"value","description":"Angle in radians"}],"return":[{"type":"number"}],"is_native":true,"description":"Return the tangent value for a given value in radians.","name":"tan"},{"parameters":[{"type":"number...","name":"numbers","description":"Numbers to get the smallest from."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the minimum value from a variable length list of arguments","name":"min"},{"parameters":[{"type":"number","name":"base","description":"The base value."},{"type":"number","name":"modulator","description":"The modulator."}],"return":[{"type":"number"}],"is_native":true,"description":"Returns the remainder of the division of <code>base</code> by <code>modulator</code> that rounds the quotient towards zero","name":"fmod"},{"parameters":[{"type":"number","name":"exponent","description":"The exponent for the function."}],"return":[{"type":"number"}],"is_native":true,"description":"Returns e (the base of natural logarithms) raised to the power <code>exponent</code>","name":"exp"},{"parameters":[{"type":"number","name":"m","description":"If m is the only parameter: upper limit.\\r\\n\\r\\nIf n is also provided: lower limit.\\r\\n\\r\\nIf provided, this must be an integer."},{"type":"number","name":"n","description":"Upper limit.\\r\\n\\r\\nIf provided, this must be an integer."}],"return":[{"type":"number"}],"is_native":true,"description":"Generates pseudo-random numbers uniformly distributed","name":"random"},{"parameters":[{"type":"number","name":"degrees","description":"The angle measured in degrees."}],"return":[{"type":"number"}],"is_native":true,"description":"Convert from degrees to radians","name":"rad"},{"parameters":[{"type":"number","name":"number","description":"Angle in radians"}],"return":[{"type":"number"}],"is_native":true,"description":"Return the sine value for a given value in radians.","name":"sin"},{"parameters":[{"type":"number","name":"number","description":"Angle in radians"}],"return":[{"type":"number"}],"is_native":true,"description":"Return the cosine value for a given value in radians.","name":"cos"},{"parameters":[{"type":"number","name":"normal","description":"Sine value in the range of -1 to 1."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the inverse sine in radians of the given value.","name":"asin"},{"parameters":[{"type":"number","name":"seed","description":"The new seed"}],"is_native":true,"description":"Sets a seed for the pseudo-random generator: Equal seeds produce equal sequences of numbers","name":"randomseed"},{"parameters":[{"type":"number","name":"number","description":"The number to be rounded down."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the integer no less than the given value (even for negatives)","name":"floor"},{"parameters":[{"type":"number...","name":"numbers","description":"Numbers to get the largest from"}],"return":[{"type":"number"}],"is_native":true,"description":"Return the maximum value from a variable length list of arguments","name":"max"},{"parameters":[{"type":"number","name":"normal","description":"Tangent value."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the inverse tangent in radians. We can do this by supplying y/x ourselves or we can pass y and x to math.atan to do this for us","name":"atan"},{"parameters":[{"type":"number","name":"cos","description":"Cosine value in range of -1 to 1."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the inverse cosine in radians of the given value.","name":"acos"},{"parameters":[{"type":"number","name":"x","description":"The number to get the absolute value of."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the absolute, or non-negative value, of a given value","name":"abs"},{"parameters":[{"type":"number","name":"x","description":"The value to get the base from exponent from."},{"type":"number","name":"base","description":"The logarithmic base."}],"return":[{"type":"number"}],"is_native":true,"description":"Returns the inverse of this. <code>math.exp(1)</code> returns <code>e</code>","name":"log"},{"parameters":[{"type":"number","name":"base","description":"The base value."}],"return":[{"type":"number"},{"type":"number"}],"is_native":true,"description":"Return the integral and fractional parts of the given number","name":"modf"},{"parameters":[{"type":"number","name":"radians","description":"Value to be converted to degrees."}],"return":[{"type":"number"}],"is_native":true,"description":"Convert from radians to degrees","name":"deg"},{"parameters":[{"type":"number","name":"value","description":"Value to get the square root of."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the square root of a given number. Only non-negative arguments are allowed","name":"sqrt"}]}'),fe=JSON.parse('{"AimMode":{"description":"Used by Characters to change the Aiming Mode while holding Weapons","enums":[{"key":"None","value":"0"},{"key":"ADS","value":"1"},{"key":"ZoomedZoom","value":"2"},{"key":"Zoomed","value":"3"},{"key":"ZoomedFar","value":"4"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/character#function-getweaponaimmode","label":"Character.GetWeaponAimMode"},{"url":"/docs/next/scripting-reference/classes/character#function-setweaponaimmode","label":"Character.SetWeaponAimMode"},{"url":"/docs/next/scripting-reference/classes/character#event-weaponaimmodechange","label":"Character WeaponAimModeChange Event"},{"url":"/docs/next/scripting-reference/classes/character#event-weaponaimmodechange","label":"Character WeaponAimModeChange Event"}]}},"AnimationSlotType":{"enums":[{"key":"FullBody","value":"0"},{"key":"UpperBody","value":"1"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/character#function-playanimation","label":"Character.PlayAnimation"},{"url":"/docs/next/scripting-reference/classes/melee#function-addanimationcharacteruse","label":"Melee.AddAnimationCharacterUse"}]}},"AssetType":{"enums":[{"key":"Map","value":2},{"key":"StaticMesh","value":4},{"key":"SkeletalMesh","value":8},{"key":"Sound","value":16},{"key":"Animation","value":32},{"key":"Particle","value":64},{"key":"Material","value":128},{"key":"Blueprint","value":256},{"key":"Other","value":32768}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/assets#static-function-getassetpath","label":"Assets.GetAssetPath"},{"url":"/docs/next/scripting-reference/static-classes/assets#static-function-precache","label":"Assets.Precache"}]}},"AttachmentRule":{"enums":[{"key":"KeepRelative","value":"0","description":"Will keep the current relative position/rotation if already attached."},{"key":"KeepWorld","value":"1","description":"Will calculate the new relative position/rotation so the Actor stays at the same position after being attached."},{"key":"SnapToTarget","value":"2","description":"Will set the Actor to the same position/rotation as the parent actor (or at the bone location) and reset its relative position/rotation to zero."}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/actor#function-attachto","label":"Actor.AttachTo"}]}},"AttenuationFunction":{"enums":[{"key":"Linear","value":"0"},{"key":"Logarithmic","value":"1"},{"key":"Inverse","value":"2"},{"key":"LogReverse","value":"3"},{"key":"NaturalSound","value":"4"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/sound#constructor-default-constructor","label":"Sound Default Constructor"},{"url":"/docs/next/scripting-reference/classes/webui#function-spawnsound","label":"WebUI.SpawnSound"}]}},"BlendMode":{"enums":[{"key":"Opaque","value":"0"},{"key":"Masked","value":"1"},{"key":"Translucent","value":"2"},{"key":"Additive","value":"3"},{"key":"Modulate","value":"4"},{"key":"MaskedDistanceField","value":"5"},{"key":"MaskedDistanceFieldShadowed","value":"6"},{"key":"TranslucentDistanceField","value":"7"},{"key":"TranslucentDistanceFieldShadowed","value":"8"},{"key":"AlphaComposite","value":"9"},{"key":"AlphaHoldout","value":"10"},{"key":"AlphaBlend","value":"11"},{"key":"TranslucentAlphaOnly","value":"12"},{"key":"TranslucentAlphaOnlyWriteAlpha","value":"13"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/canvas#function-drawbox","label":"Canvas.DrawBox"},{"url":"/docs/next/scripting-reference/classes/canvas#function-drawline","label":"Canvas.DrawLine"},{"url":"/docs/next/scripting-reference/classes/canvas#function-drawmaterial","label":"Canvas.DrawMaterial"},{"url":"/docs/next/scripting-reference/classes/canvas#function-drawmaterialfromscenecapture","label":"Canvas.DrawMaterialFromSceneCapture"},{"url":"/docs/next/scripting-reference/classes/canvas#function-drawmaterialfromwebui","label":"Canvas.DrawMaterialFromWebUI"},{"url":"/docs/next/scripting-reference/classes/canvas#function-drawpolygon","label":"Canvas.DrawPolygon"},{"url":"/docs/next/scripting-reference/classes/canvas#function-drawrect","label":"Canvas.DrawRect"},{"url":"/docs/next/scripting-reference/classes/canvas#function-drawtexture","label":"Canvas.DrawTexture"}]}},"CameraMode":{"enums":[{"key":"FPSTPS","value":"0"},{"key":"FPSOnly","value":"1"},{"key":"TPSOnly","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/character#function-getcameramode","label":"Character.GetCameraMode"},{"url":"/docs/next/scripting-reference/classes/character#function-setcameramode","label":"Character.SetCameraMode"}]}},"CCDMode":{"enums":[{"key":"Auto","value":"0","description":"Automatically enables/disables depending on the Object size"},{"key":"Disabled","value":"1","description":"Disables CCD"},{"key":"Enabled","value":"2","description":"Enables CCD"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/prop#constructor-default-constructor","label":"Prop Default Constructor"}]}},"CollisionChannel":{"supports_bitwise":true,"enums":[{"key":"WorldStatic","value":"1 << 0","description":"WorldStatic Object Types"},{"key":"WorldDynamic","value":"1 << 1","description":"WorldDynamic Object Types"},{"key":"Pawn","value":"1 << 2","description":"Capsules (usually from Characters)"},{"key":"PhysicsBody","value":"1 << 5","description":"Pickables and Props Meshes"},{"key":"Mesh","value":"1 << 17","description":"Character Mesh"},{"key":"Water","value":"1 << 19","description":"Water Body"},{"key":"Foliage","value":"1 << 20","description":"Foliage Meshes"},{"key":"Vehicle","value":"1 << 22","description":"Vehicles Meshes"},{"key":"All","value":"(1 << 32) - 1","description":"All Objects"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-boxmulti","label":"Trace.BoxMulti"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-boxsingle","label":"Trace.BoxSingle"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-capsulemulti","label":"Trace.CapsuleMulti"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-capsulesingle","label":"Trace.CapsuleSingle"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-linemulti","label":"Trace.LineMulti"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-linesingle","label":"Trace.LineSingle"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-spheremulti","label":"Trace.SphereMulti"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-spheresingle","label":"Trace.SphereSingle"}]}},"CollisionType":{"enums":[{"key":"Normal","value":"0","description":"Blocks All"},{"key":"StaticOnly","value":"1","description":"Only Blocks Static objects"},{"key":"NoCollision","value":"2","description":"Doesn\'t Block anything"},{"key":"IgnoreOnlyPawn","value":"3","description":"Blocks everything but Pawns (Characters)"},{"key":"Auto","value":"4","description":"Automatically selects - usually will be Normal. On Props it will switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> depending on the Prop size"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/actor#function-getcollision","label":"Actor.GetCollision"},{"url":"/docs/next/scripting-reference/classes/actor#function-setcollision","label":"Actor.SetCollision"},{"url":"/docs/next/scripting-reference/classes/blueprint#constructor-default-constructor","label":"Blueprint Default Constructor"},{"url":"/docs/next/scripting-reference/classes/character#constructor-default-constructor","label":"Character Default Constructor"},{"url":"/docs/next/scripting-reference/classes/charactersimple#constructor-default-constructor","label":"CharacterSimple Default Constructor"},{"url":"/docs/next/scripting-reference/classes/grenade#constructor-default-constructor","label":"Grenade Default Constructor"},{"url":"/docs/next/scripting-reference/classes/melee#constructor-default-constructor","label":"Melee Default Constructor"},{"url":"/docs/next/scripting-reference/classes/prop#constructor-default-constructor","label":"Prop Default Constructor"},{"url":"/docs/next/scripting-reference/classes/staticmesh#constructor-default-constructor","label":"StaticMesh Default Constructor"},{"url":"/docs/next/scripting-reference/classes/vehiclewheeled#constructor-default-constructor","label":"VehicleWheeled Default Constructor"},{"url":"/docs/next/scripting-reference/classes/vehiclewater#constructor-default-constructor","label":"VehicleWater Default Constructor"},{"url":"/docs/next/scripting-reference/classes/weapon#constructor-default-constructor","label":"Weapon Default Constructor"}]}},"CursorType":{"enums":[{"key":"None","value":"0"},{"key":"Default","value":"1"},{"key":"TextEditBeam","value":"2"},{"key":"ResizeLeftRight","value":"3"},{"key":"ResizeUpDown","value":"4"},{"key":"ResizeSouthEast","value":"5"},{"key":"ResizeSouthWest","value":"6"},{"key":"CardinalCross","value":"7"},{"key":"Crosshairs","value":"8"},{"key":"Hand","value":"9"},{"key":"GrabHand","value":"10"},{"key":"GrabHandClosed","value":"11"},{"key":"SlashedCircle","value":"12"},{"key":"EyeDropper","value":"13"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/input#static-function-setmousecursor","label":"Input.SetMouseCursor"},{"url":"/docs/next/scripting-reference/static-classes/viewport#static-function-sethardwarecursor","label":"Viewport.SetHardwareCursor"}]}},"ConstraintMotion":{"enums":[{"key":"Free","value":"0"},{"key":"Limited","value":"1"},{"key":"Locked","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/cable#function-setangularlimits","label":"Cable.SetAngularLimits"},{"url":"/docs/next/scripting-reference/classes/cable#function-setangularlimits","label":"Cable.SetAngularLimits"},{"url":"/docs/next/scripting-reference/classes/cable#function-setangularlimits","label":"Cable.SetAngularLimits"},{"url":"/docs/next/scripting-reference/classes/cable#function-setlinearlimits","label":"Cable.SetLinearLimits"},{"url":"/docs/next/scripting-reference/classes/cable#function-setlinearlimits","label":"Cable.SetLinearLimits"},{"url":"/docs/next/scripting-reference/classes/cable#function-setlinearlimits","label":"Cable.SetLinearLimits"}]}},"DamageType":{"enums":[{"key":"Shot","value":"0"},{"key":"Explosion","value":"1"},{"key":"Punch","value":"2"},{"key":"Fall","value":"3"},{"key":"RunOverProp","value":"4"},{"key":"RunOverVehicle","value":"5"},{"key":"Melee","value":"6"},{"key":"Unknown","value":"7"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/damageable#function-applydamage","label":"Damageable.ApplyDamage"},{"url":"/docs/next/scripting-reference/classes/damageable#event-death","label":"Damageable Death Event"},{"url":"/docs/next/scripting-reference/classes/damageable#event-takedamage","label":"Damageable TakeDamage Event"},{"url":"/docs/next/scripting-reference/classes/vehicle#event-takedamage","label":"Vehicle TakeDamage Event"},{"url":"/docs/next/scripting-reference/classes/prop#event-takedamage","label":"Prop TakeDamage Event"}]}},"DatabaseEngine":{"enums":[{"key":"SQLite","value":"0"},{"key":"MySQL","value":"1"},{"key":"PostgreSQL","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/database#constructor-default-constructor","label":"Database Default Constructor"}]}},"DifferentialType":{"enums":[{"key":"Undefined","value":"0"},{"key":"AllWheelDrive","value":"1"},{"key":"FrontWheelDrive","value":"2"},{"key":"RearWheelDrive","value":"3"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/vehiclewheeled#function-setdifferentialsetup","label":"VehicleWheeled.SetDifferentialSetup"}]}},"FallingMode":{"enums":[{"key":"None","value":"0"},{"key":"Jumping","value":"1"},{"key":"Climbing","value":"2"},{"key":"Vaulting","value":"3"},{"key":"Falling","value":"4"},{"key":"HighFalling","value":"5"},{"key":"Parachuting","value":"6"},{"key":"SkyDiving","value":"7"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/character#function-getfallingmode","label":"Character.GetFallingMode"},{"url":"/docs/next/scripting-reference/classes/character#event-fallingmodechange","label":"Character FallingModeChange Event"},{"url":"/docs/next/scripting-reference/classes/character#event-fallingmodechange","label":"Character FallingModeChange Event"}]}},"FontType":{"enums":[{"key":"Roboto","value":"0"},{"key":"GothicA1","value":"1"},{"key":"PoiretOne","value":"2"},{"key":"Oswald","value":"3"},{"key":"RobotoMono","value":"4"},{"key":"OpenSans","value":"5"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/canvas#function-drawtext","label":"Canvas.DrawText"},{"url":"/docs/next/scripting-reference/classes/textrender#function-setfont","label":"TextRender.SetFont"},{"url":"/docs/next/scripting-reference/classes/textrender#constructor-default-constructor","label":"TextRender Default Constructor"}]}},"GaitMode":{"enums":[{"key":"None","value":"0"},{"key":"Walking","value":"1"},{"key":"Sprinting","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/character#function-getgaitmode","label":"Character.GetGaitMode"},{"url":"/docs/next/scripting-reference/classes/character#function-setgaitmode","label":"Character.SetGaitMode"},{"url":"/docs/next/scripting-reference/classes/character#event-gaitmodechange","label":"Character GaitModeChange Event"},{"url":"/docs/next/scripting-reference/classes/character#event-gaitmodechange","label":"Character GaitModeChange Event"}]}},"GizmoTransformMode":{"enums":[{"key":"Translation","value":"0"},{"key":"Rotation","value":"1"},{"key":"Scale","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/gizmo#function-settransformmode","label":"Gizmo.SetTransformMode"}]}},"GizmoAlignSpace":{"enums":[{"key":"Local","value":"0"},{"key":"World","value":"1"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/gizmo#function-setalignspace","label":"Gizmo.SetAlignSpace"}]}},"GrabMode":{"enums":[{"key":"Disabled","value":"0","description":"Disables grabbing"},{"key":"Auto","value":"1","description":"Automatically enables/disables depending on the Prop size"},{"key":"Enabled","value":"2","description":"Enables grabbing"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/prop#function-getgrabmode","label":"Prop.GetGrabMode"},{"url":"/docs/next/scripting-reference/classes/prop#function-setgrabmode","label":"Prop.SetGrabMode"},{"url":"/docs/next/scripting-reference/classes/prop#constructor-default-constructor","label":"Prop Default Constructor"}]}},"HandlingMode":{"enums":[{"key":"SingleHandedWeapon","value":"0"},{"key":"DoubleHandedWeapon","value":"1"},{"key":"SingleHandedMelee","value":"2"},{"key":"DoubleHandedMelee","value":"3"},{"key":"Throwable","value":"4"},{"key":"Torch","value":"5"},{"key":"Barrel","value":"6"},{"key":"Box","value":"7"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/pickable#function-gethandlingmode","label":"Pickable.GetHandlingMode"},{"url":"/docs/next/scripting-reference/classes/melee#constructor-default-constructor","label":"Melee Default Constructor"},{"url":"/docs/next/scripting-reference/classes/weapon#function-gethandlingmode","label":"Weapon.GetHandlingMode"},{"url":"/docs/next/scripting-reference/classes/weapon#function-sethandlingmode","label":"Weapon.SetHandlingMode"}]}},"HighlightMode":{"enums":[{"key":"Always","value":"0"},{"key":"OnlyHidden","value":"1"},{"key":"OnlyVisible","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/client#static-function-sethighlightcolor","label":"Client.SetHighlightColor"}]}},"HTTPMethod":{"description":"HTTP defines a set of request methods to indicate the desired action to be performed for a given resource. Read more <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\'>here</a>.","enums":[{"key":"GET","value":"0","description":"The GET method requests a representation of the specified resource. Requests using GET should only retrieve data."},{"key":"POST","value":"1","description":"The POST method submits an entity to the specified resource, often causing a change in state or side effects on the server."},{"key":"PUT","value":"2","description":"The PUT method replaces all current representations of the target resource with the request payload."},{"key":"HEAD","value":"3","description":"The HEAD method asks for a response identical to a GET request, but without the response body."},{"key":"DELETE","value":"4","description":"The DELETE method deletes the specified resource."},{"key":"PATCH","value":"5","description":"The PATCH method applies partial modifications to a resource."},{"key":"OPTIONS","value":"6","description":"The OPTIONS method describes the communication options for the target resource."}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/http#static-function-request","label":"HTTP.Request"},{"url":"/docs/next/scripting-reference/static-classes/http#static-function-requestasync","label":"HTTP.RequestAsync"}]}},"ImageFormat":{"enums":[{"key":"JPEG","value":"0"},{"key":"PNG","value":"1"},{"key":"BMP","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/scenecapture#function-encodetobase64","label":"SceneCapture.EncodeToBase64"},{"url":"/docs/next/scripting-reference/classes/scenecapture#function-encodetobase64async","label":"SceneCapture.EncodeToBase64Async"}]}},"InputEvent":{"enums":[{"key":"Pressed","value":"0"},{"key":"Released","value":"1"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/input#static-function-bind","label":"Input.Bind"},{"url":"/docs/next/scripting-reference/static-classes/input#static-function-inputkey","label":"Input.InputKey"},{"url":"/docs/next/scripting-reference/static-classes/input#static-function-unbind","label":"Input.Unbind"}]}},"KeyModifier":{"supports_bitwise":true,"enums":[{"key":"None","value":"0"},{"key":"LeftShiftDown","value":"1 << 0"},{"key":"RightShiftDown","value":"1 << 1"},{"key":"LeftControlDown","value":"1 << 2"},{"key":"RightControlDown","value":"1 << 3"},{"key":"LeftAltDown","value":"1 << 4"},{"key":"RightAltDown","value":"1 << 5"},{"key":"LeftCommandDown","value":"1 << 6"},{"key":"RightCommandDown","value":"1 << 7"},{"key":"CapsLocked","value":"1 << 8"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/input#static-function-getmodifierkeys","label":"Input.GetModifierKeys"}]}},"LightProfile":{"enums":[{"key":"None","value":"0"},{"key":"Arrow_Star","value":"1"},{"key":"Arrow_Up","value":"2"},{"key":"Beam_01","value":"3"},{"key":"Beam_02","value":"4"},{"key":"Beam_03","value":"5"},{"key":"Beam_04","value":"6"},{"key":"Beam_05","value":"7"},{"key":"Beam_06","value":"8"},{"key":"Beam_07","value":"9"},{"key":"Beam_08","value":"10"},{"key":"Beam_LED_01","value":"11"},{"key":"Beam_LED_02","value":"12"},{"key":"Beam_LED_03","value":"13"},{"key":"Beam_LED_04","value":"14"},{"key":"Beam_LED_05","value":"15"},{"key":"Beam_LED_06","value":"16"},{"key":"Beam_LED_07","value":"17"},{"key":"Bow","value":"18"},{"key":"Capped_01","value":"19"},{"key":"Capped_02","value":"20"},{"key":"Shattered_01","value":"21"},{"key":"Shattered_02","value":"22"},{"key":"Shattered_03","value":"23"},{"key":"Shattered_04","value":"24"},{"key":"Shattered_05","value":"25"},{"key":"SpotLight_01","value":"26"},{"key":"SpotLight_02","value":"27"},{"key":"SpotLight_03","value":"28"},{"key":"SpotLight_04","value":"29"},{"key":"Spreadout_01","value":"30"},{"key":"Spreadout_02","value":"31"},{"key":"Spreadout_03","value":"32"},{"key":"Spreadout_04","value":"33"},{"key":"Star_Bow","value":"34"},{"key":"Star_Burst_01","value":"35"},{"key":"Star_Burst_02","value":"36"},{"key":"Star_Burst_03","value":"37"},{"key":"Star_Burst_04","value":"38"},{"key":"Star_Burst_05","value":"39"},{"key":"Star_Burst_06","value":"40"},{"key":"Star_Burst_07","value":"41"},{"key":"Star_Burst_08","value":"42"},{"key":"Star_X_01","value":"43"},{"key":"Star_X_02","value":"44"},{"key":"Wall_Boomerang","value":"45"},{"key":"Wall_Inverted_V","value":"46"},{"key":"Wall_Star_T","value":"47"},{"key":"Wing_6","value":"48"},{"key":"Wing_V_01","value":"49"},{"key":"Wing_V_02","value":"50"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/light#function-settexturelightprofile","label":"Light.SetTextureLightProfile"}]}},"LogType":{"enums":[{"key":"Display","value":"0"},{"key":"Warning","value":"1"},{"key":"Error","value":"2"},{"key":"Debug","value":"3"},{"key":"Verbose","value":"4"},{"key":"Scripting","value":"5"},{"key":"ScriptingWarn","value":"6"},{"key":"ScriptingError","value":"7"},{"key":"Chat","value":"8"},{"key":"WebUI","value":"9"},{"key":"Success","value":"10"},{"key":"Fatal","value":"11"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/console#event-logentry","label":"Console LogEntry Event"}]}},"LightType":{"enums":[{"key":"Point","value":"0"},{"key":"Spot","value":"1"},{"key":"React","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/light#constructor-default-constructor","label":"Light Default Constructor"}]}},"NativeWidget":{"enums":[{"key":"Border","value":"0"},{"key":"Button","value":"1"},{"key":"CheckBox","value":"2"},{"key":"Image","value":"3"},{"key":"ProgressBar","value":"4"},{"key":"RichTextBlock","value":"5"},{"key":"Slider","value":"6"},{"key":"Text","value":"7"},{"key":"ComboBox","value":"8"},{"key":"EditableText","value":"9"},{"key":"EditableTextMultiLine","value":"10"},{"key":"SpinBox","value":"11"},{"key":"TextBox","value":"12"},{"key":"TextBoxMultiLine","value":"13"},{"key":"CanvasPanel","value":"14"},{"key":"GridPanel","value":"15"},{"key":"HorizontalBox","value":"16"},{"key":"Overlay","value":"17"},{"key":"ScaleBox","value":"18"},{"key":"ScrollBox","value":"19"},{"key":"SizeBox","value":"20"},{"key":"UniformGridPanel","value":"21"},{"key":"VerticalBox","value":"22"},{"key":"WrapBox","value":"23"},{"key":"BackgroundBlur","value":"24"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/widget#constructor-native-widget constructor","label":"Widget Native Widget Constructor"}]}},"PackageType":{"enums":[{"key":"Script","value":"0"},{"key":"GameMode","value":"1"},{"key":"LoadingScreen","value":"2"},{"key":"Map","value":"4"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/client#static-function-getpackages","label":"Client.GetPackages"},{"url":"/docs/next/scripting-reference/static-classes/server#static-function-getpackages","label":"Server.GetPackages"}]}},"SkyMode":{"enums":[{"key":"VolumetricClouds","value":"0","description":"Uses a 3D Volumetric Cloud layer"},{"key":"StaticClouds","value":"1","description":"Designed to mimic the look of the volumetric clouds but as a static cloud texture. Much lower performance cost than volumetric clouds."},{"key":"DynamicClouds2D","value":"2","description":"Uses simple 2D dynamic clouds"},{"key":"NoClouds","value":"3","description":"Disables all forms of dynamic clouds"},{"key":"VolumetricAurora","value":"4","description":"Trades clouds for a full 3D volumetric aurora, much more convincing than the 2D effect."},{"key":"Space","value":"5","description":"Turns off all sky color, atmospheric scattering, clouds, etc. Specifically for environments which are set in outer space with no planet/ground beneath the camera."}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/sky#static-function-setskymode","label":"Sky.SetSkyMode"}]}},"SoundType":{"enums":[{"key":"SFX","value":"0"},{"key":"Music","value":"1"},{"key":"UI","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/sound#constructor-default-constructor","label":"Sound Default Constructor"}]}},"SoundLoopMode":{"enums":[{"key":"Default","value":"0","description":"Default value defined in the asset"},{"key":"Forever","value":"1","description":"Overrides it to make it loop forever"},{"key":"Never","value":"2","description":"Overrides it to make it play once"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/sound#constructor-default-constructor","label":"Sound Default Constructor"}]}},"StanceMode":{"enums":[{"key":"None","value":"0"},{"key":"Standing","value":"1"},{"key":"Crouching","value":"2"},{"key":"Proning","value":"3"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/character#function-getstancemode","label":"Character.GetStanceMode"},{"url":"/docs/next/scripting-reference/classes/character#function-setstancemode","label":"Character.SetStanceMode"},{"url":"/docs/next/scripting-reference/classes/character#event-stancemodechange","label":"Character StanceModeChange Event"},{"url":"/docs/next/scripting-reference/classes/character#event-stancemodechange","label":"Character StanceModeChange Event"}]}},"SteeringType":{"enums":[{"key":"SingleAngle","value":"0","description":"Both wheels steer by the same amount"},{"key":"AngleRatio","value":"1","description":"Outer wheels on corner steer less than the inner ones by set ratio"},{"key":"Ackermann","value":"2","description":"Ackermann steering principle is applied"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/vehiclewheeled#function-setsteeringsetup","label":"VehicleWheeled.SetSteeringSetup"}]}},"SurfaceType":{"enums":[{"key":"Default","value":"0"},{"key":"Carpet","value":"1"},{"key":"Concrete","value":"2"},{"key":"Grass","value":"3"},{"key":"Gravel","value":"4"},{"key":"Ground","value":"5"},{"key":"MetalLight","value":"6"},{"key":"Plastic","value":"7"},{"key":"Sand","value":"8"},{"key":"Snow","value":"9"},{"key":"Water","value":"10"},{"key":"WoodLight","value":"11"},{"key":"Flesh","value":"12"},{"key":"MetalHeavy","value":"13"},{"key":"WoodHeavy","value":"14"},{"key":"Ice","value":"15"},{"key":"Mud","value":"16"},{"key":"Rock","value":"17"},{"key":"Thump","value":"18"},{"key":"Glass","value":"19"},{"key":"Rubber","value":"20"},{"key":"Air","value":"21"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/melee#function-setimpactsound","label":"Melee.SetImpactSound"}]}},"SuspensionSweepShape":{"enums":[{"key":"Raycast","value":"0","description":"Use ray to determine suspension length to ground - fastest"},{"key":"Spherecast","value":"1","description":"Use sphere to determine suspension length to ground"},{"key":"Shapecast","value":"2","description":"Use wheel collision shape to determine suspension length to ground - Slowest"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/vehiclewheeled#function-setwheel","label":"VehicleWheeled.SetWheel"}]}},"SwimmingMode":{"enums":[{"key":"None","value":"0"},{"key":"Surface","value":"1"},{"key":"Underwater","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/character#function-getswimmingmode","label":"Character.GetSwimmingMode"},{"url":"/docs/next/scripting-reference/classes/character#event-swimmingmodechange","label":"Character SwimmingModeChange Event"},{"url":"/docs/next/scripting-reference/classes/character#event-swimmingmodechange","label":"Character SwimmingModeChange Event"}]}},"TextRenderAlignCamera":{"enums":[{"key":"Unaligned","value":"0"},{"key":"AlignCameraRotation","value":"1"},{"key":"FaceCamera","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/textrender#constructor-default-constructor","label":"TextRender Default Constructor"}]}},"TextRenderBevelType":{"enums":[{"key":"Linear","value":"0"},{"key":"HalfCircle","value":"1"},{"key":"Convex","value":"2"},{"key":"Concave","value":"3"},{"key":"OneStep","value":"4"},{"key":"TwoSteps","value":"5"},{"key":"Engraved","value":"6"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/textrender#function-setglyphsettings","label":"TextRender.SetGlyphSettings"}]}},"TextRenderHorizontalAlignment":{"enums":[{"key":"Left","value":"0"},{"key":"Center","value":"1"},{"key":"Right","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/textrender#function-settextsettings","label":"TextRender.SetTextSettings"}]}},"TextRenderVerticalAlignment":{"enums":[{"key":"Top","value":"0"},{"key":"Center","value":"1"},{"key":"Bottom","value":"2"},{"key":"QuadTop","value":"3"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/textrender#function-settextsettings","label":"TextRender.SetTextSettings"}]}},"TriggerType":{"enums":[{"key":"Sphere","value":"0"},{"key":"Box","value":"1"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/trigger#constructor-default-constructor","label":"Trigger Default Constructor"}]}},"TraceMode":{"supports_bitwise":true,"enums":[{"key":"DrawDebug","value":"1 << 0","description":"Whether to draw a 3D line representing the ray"},{"key":"TraceComplex","value":"1 << 1","description":"Whether should trace against complex collision"},{"key":"ReturnPhysicalMaterial","value":"1 << 2","description":"Whether want to include the physical material in the results (adds <code>SurfaceType</code> to result)"},{"key":"ReturnEntity","value":"1 << 3","description":"Whether want to return the Entity hit (adds <code>Entity</code> to result)"},{"key":"ReturnNames","value":"1 << 4","description":"Whether should return names (adds <code>ActorName</code>, <code>ComponentName</code> and <code>BoneName</code> to result)"},{"key":"ReturnUV","value":"1 << 5","description":"Whether want to trace and return UV information (adds <code>UV</code> to result)"},{"key":"TraceOnlyVisibility","value":"1 << 6","description":"Whether should only trace for objects that don\'t ignore visibility collision channel"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-boxmulti","label":"Trace.BoxMulti"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-boxsingle","label":"Trace.BoxSingle"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-capsulemulti","label":"Trace.CapsuleMulti"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-capsulesingle","label":"Trace.CapsuleSingle"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-linemulti","label":"Trace.LineMulti"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-linesingle","label":"Trace.LineSingle"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-spheremulti","label":"Trace.SphereMulti"},{"url":"/docs/next/scripting-reference/static-classes/trace#static-function-spheresingle","label":"Trace.SphereSingle"}]}},"ViewMode":{"enums":[{"key":"FPS","value":"0","description":"First Person View"},{"key":"TPS1","value":"1","description":"Third Person Close View"},{"key":"TPS2","value":"2","description":"Third Person Medium View"},{"key":"TPS3","value":"3","description":"Third Person Far View"},{"key":"TopDown","value":"4","description":"Top Down View"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/character#function-getviewmode","label":"Character.GetViewMode"},{"url":"/docs/next/scripting-reference/classes/character#function-setviewmode","label":"Character.SetViewMode"},{"url":"/docs/next/scripting-reference/classes/character#event-viewmodechange","label":"Character ViewModeChange Event"},{"url":"/docs/next/scripting-reference/classes/character#event-viewmodechange","label":"Character ViewModeChange Event"}]}},"VOIPSetting":{"enums":[{"key":"Local","value":"0","description":"3D Sound"},{"key":"Global","value":"1","description":"2D Sound"},{"key":"Muted","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/player#function-getvoipsetting","label":"Player.GetVOIPSetting"},{"url":"/docs/next/scripting-reference/classes/player#function-setvoipsetting","label":"Player.SetVOIPSetting"}]}},"WeatherType":{"enums":[{"key":"ClearSkies","value":"1"},{"key":"Cloudy","value":"2"},{"key":"Foggy","value":"3"},{"key":"Overcast","value":"4"},{"key":"PartlyCloudy","value":"5"},{"key":"Rain","value":"6"},{"key":"RainLight","value":"7"},{"key":"RainThunderstorm","value":"8"},{"key":"SandDustCalm","value":"9"},{"key":"SandDustStorm","value":"10"},{"key":"Snow","value":"11"},{"key":"SnowBlizzard","value":"12"},{"key":"SnowLight","value":"13"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/static-classes/sky#static-function-changeweather","label":"Sky.ChangeWeather"},{"url":"/docs/next/scripting-reference/static-classes/sky#static-function-getweather","label":"Sky.GetWeather"}]}},"WebUIModifier":{"supports_bitwise":true,"enums":[{"key":"None","value":"0"},{"key":"CapsLockOn","value":"1 << 0"},{"key":"ShiftDown","value":"1 << 1"},{"key":"ControlDown","value":"1 << 2"},{"key":"AltDown","value":"1 << 3"},{"key":"LeftMouseButton","value":"1 << 4"},{"key":"MiddleMouseButton","value":"1 << 5"},{"key":"RightMouseButton","value":"1 << 6"},{"key":"CommandDown","value":"1 << 7"},{"key":"NumLockOn","value":"1 << 8"},{"key":"IsKeyPad","value":"1 << 9"},{"key":"IsLeft","value":"1 << 10"},{"key":"IsRight","value":"1 << 11"},{"key":"AltgrDown","value":"1 << 12"},{"key":"IsRepeat","value":"1 << 13"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/webui#function-sendkeyevent","label":"WebUI.SendKeyEvent"},{"url":"/docs/next/scripting-reference/classes/webui#function-sendmouseclickevent","label":"WebUI.SendMouseClickEvent"},{"url":"/docs/next/scripting-reference/classes/webui#function-sendmousemoveevent","label":"WebUI.SendMouseMoveEvent"}]}},"WebUIKeyType":{"enums":[{"key":"Down","value":"0"},{"key":"Up","value":"1"},{"key":"Char","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/webui#function-sendkeyevent","label":"WebUI.SendKeyEvent"}]}},"WebUIMouseType":{"enums":[{"key":"Left","value":"0"},{"key":"Right","value":"1"},{"key":"Middle","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/webui#function-sendmouseclickevent","label":"WebUI.SendMouseClickEvent"}]}},"WidgetVisibility":{"enums":[{"key":"Hidden","value":"0"},{"key":"Visible","value":"1"},{"key":"VisibleNotHitTestable","value":"2"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/webui#function-getvisibility","label":"WebUI.GetVisibility"},{"url":"/docs/next/scripting-reference/classes/webui#function-setvisibility","label":"WebUI.SetVisibility"},{"url":"/docs/next/scripting-reference/classes/webui#constructor-default-constructor","label":"WebUI Default Constructor"},{"url":"/docs/next/scripting-reference/classes/widget#function-getvisibility","label":"Widget.GetVisibility"},{"url":"/docs/next/scripting-reference/classes/widget#function-setvisibility","label":"Widget.SetVisibility"}]}},"WidgetSpace":{"enums":[{"key":"World","value":"0","description":"The widget is rendered in the world as mesh, it can be occluded like any other mesh in the world"},{"key":"Screen","value":"1","description":"The widget is rendered in the screen, completely outside of the world, never occluded"}],"relations":{"etc":[{"url":"/docs/next/scripting-reference/classes/widget#function-spawnwidget3d","label":"Widget.SpawnWidget3D"}]}}}'),ge=JSON.parse('{"name":"Entity","description":"<b>Entity</b> is the base for all Classes, and all those entities share the same <b>Methods</b> and <b>Events</b> described in this page.","is_base":true,"static_functions":[{"name":"GetAll","description":"Returns a table containing all Entities of the class this is called on","authority":"both","return":[{"type":"Entity[]","description":"Copy of table containing all Entities"}]},{"name":"GetByIndex","description":"Returns a specific Entity of this class at an index","authority":"both","parameters":[{"type":"integer","name":"index","description":"The index of the Entity"}],"return":[{"type":"Entity","description":"Entity at index"}]},{"name":"GetCount","description":"Returns how many Entities of this class exist","authority":"both","return":[{"type":"integer","description":"Number of Entities of this class"}]},{"name":"GetInheritedClasses","description":"Gets a list of all directly inherited classes from this Class created with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"boolean","default":"false","name":"recursively","description":"Returns all inherited children"}],"return":[{"type":"table[]","description":"All children Classes"}]},{"name":"GetPairs","description":"Returns an iterator with all Entities of this class to be used with <code>pairs()</code>","description_long":"Returns an iterator with all Entities of this class to be used with <code>pairs()</code>. This is a more performant method than <code>GetAll()</code>, as it will return the iterator to access the Entities directly instead of creating and returning a copy of the Entities table.<br><br><b>Note:</b> Destroying Entities from inside a <code>GetPairs()</code> loop will cause the iterable to change size during the process. If you want to loop-and-destroy, please use <code>GetAll()</code>.","authority":"both","return":[{"type":"iterator","description":"Iterator with all Entities of this class"}]},{"name":"GetParentClass","description":"Gets the parent class if this Class was created with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","return":[{"type":"table?","description":"The parent class"}]},{"name":"Inherit","description":"Inherits this class with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"string","name":"name","description":"The name of the new Class"},{"type":"table?","name":"custom_values","description":"An optional table with custom values to be set in the inherited class table"}],"return":[{"type":"table","name":"class","description":"The new Class table"}]},{"name":"IsChildOf","description":"Gets if this Class is child of another class if this Class was created with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"table","name":"class","description":"The other class to check"}],"return":[{"type":"boolean"}]},{"name":"Subscribe","description":"Subscribes to an <a href=\'/docs/core-concepts/scripting/events-guide\'>Event</a> for all entities of this Class","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"SubscribeRemote","description":"Subscribes to a custom event called from server","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"Unsubscribe","description":"Unsubscribes all callbacks from this <a href=\'/docs/core-concepts/scripting/events-guide\'>Event</a> in this Class within this Package, or only the callback passed","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to unsubscribe from"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to unsubscribe"}]}],"functions":[{"name":"BroadcastRemoteEvent","description":"Calls a custom remote event directly on this entity to all Players","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"CallRemoteEvent","description":"Calls a custom remote event directly on this entity to a specific Player","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"Player","name":"player","description":"The remote player to send this event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"CallRemoteEvent","description":"Calls a custom remote event directly on this entity","authority":"client","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"Destroy","description":"Destroys this Entity","authority":"authority"},{"name":"GetAllValuesKeys","description":"Gets a list of all values keys","authority":"server","return":[{"type":"string[]","description":"a list with all values keys"}],"relations":{"functions":["GetValue","SetValue"]}},{"name":"GetClass","description":"Gets the class of this entity","authority":"both","return":[{"type":"table","name":"class"}]},{"name":"GetID","description":"Gets the universal network ID of this Entity (same on both client and server)","authority":"both","return":[{"type":"integer","name":"id"}]},{"name":"GetValue","description":"Gets a <a href=\'/docs/core-concepts/scripting/entity-values\'>Value</a> stored on this Entity at the given key","description_long":"Gets a <a href=\'/docs/core-concepts/scripting/entity-values\'>Value</a> stored on this Entity at the given key. Please refer to <a href=\\"/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"both","parameters":[{"type":"string","name":"key"},{"type":"any","name":"fallback","description":"Fallback value if key doesn\'t exist"}],"return":[{"type":"any","description":"Value at key or fallback if key doesn\'t exist","name":"value"}],"relations":{"functions":["GetAllValuesKeys","SetValue"]}},{"name":"IsA","description":"Recursively checks if this entity is <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>inherited</a> from a Class","authority":"both","parameters":[{"type":"table","name":"class","description":"The Class"}],"return":[{"type":"boolean"}]},{"name":"IsValid","description":"Returns true if this Entity is valid (i.e. wasn\'t destroyed and points to a valid Entity)","authority":"both","return":[{"name":"is_valid","type":"boolean"}]},{"name":"SetValue","description":"Sets a <a href=\'/docs/core-concepts/scripting/entity-values\'>Value</a> in this Entity","description_long":"Sets a value in this Entity, which can be accessed by any package (optionally sync on clients if called from server)<br><br>Please refer to <a href=\\"/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"both","parameters":[{"type":"string","name":"key"},{"type":"any","name":"value"},{"type":"boolean","name":"sync_on_clients","default":"false","description":"Server side parameter, if enabled will sync this value with all clients"}],"relations":{"functions":["GetAllValuesKeys","GetValue"]}},{"name":"Subscribe","description":"Subscribes to an <a href=\'/docs/core-concepts/scripting/events-guide\'>Event</a> on this specific entity","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"SubscribeRemote","description":"Subscribes to a custom event called from server on this specific entity","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"Unsubscribe","description":"Unsubscribes all callbacks from this <a href=\'/docs/core-concepts/scripting/events-guide\'>Event</a> in this Entity within this Package, or only the callback passed","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to unsubscribe from"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to unsubscribe"}]}],"events":[{"authority":"both","name":"ClassRegister","description":"Triggered when a new Class is registered with the <a href=\'/docs/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","arguments":[{"type":"table","name":"class","description":"The inherited Class"}]},{"authority":"both","name":"Destroy","description":"Triggered when an Entity is destroyed","arguments":[{"type":"Entity","name":"self","description":"The Entity which that was destroyed"}]},{"authority":"both","name":"Spawn","description":"Triggered when an Entity is spawned/created","arguments":[{"type":"Entity","name":"self","description":"The Entity that was spawned"}]},{"authority":"both","name":"ValueChange","description":"Triggered when an Entity has a value changed with <code>:SetValue()</code>","arguments":[{"type":"Entity","name":"self","description":"The Entity that just had a value changed"},{"type":"string","name":"key","description":"The key used"},{"type":"any","name":"value","description":"The value that was set"}]}],"inheritance_children":["Billboard","Blueprint","Cable","Character","CharacterSimple","Decal","Gizmo","Grenade","Light","Melee","Particle","Player","Prop","SceneCapture","StaticMesh","Sound","TextRender","Trigger","VehicleWheeled","VehicleWater","Weapon","WebUI","Widget","Widget3D"]}'),be=JSON.parse('{"name":"Actor","description":"An <b>Actor</b> is an object which can be spawned and destroyed through Lua.<br>Actors support 3D transformations such as translation (location), rotation, and scale.<br><br>An <b>Actor</b> is the base for several entities, and all those entities share the same <b>Methods</b> and <b>Events</b> described in this page.","is_base":true,"functions":[{"name":"AddActorTag","description":"Adds an Unreal Actor Tag to this Actor","authority":"client","parameters":[{"type":"string","name":"tag"}],"relations":{"functions":["RemoveActorTag","GetActorTags"]}},{"name":"AddImpulse","description":"Applies a force in world world to this Actor","description_long":"Applies a force in world world to this Actor (the force is applied client side, by, in most cases, the player closest to this Actor)","authority":"network-authority","parameters":[{"type":"Vector","name":"force"},{"type":"boolean","name":"velocity_change","default":"false","description":"Whether to ignore mass"}]},{"name":"AttachTo","description":"Attaches this Actor to any other Actor, optionally at a specific bone","authority":"authority","parameters":[{"type":"Actor","name":"other","description":"Other actor to attach"},{"type":"AttachmentRule","name":"attachment_rule","default":"SnapToTarget","description":"How to attach"},{"type":"string","name":"bone_name","default":"","description":"Which bone to attach to. If empty it will be attached to the Actor, otherwise to the Mesh at the bone/socket"},{"type":"float","name":"lifespan_when_detached","default":"-1","description":"Seconds before destroying this Actor when detached, setting it to 0 will automatically destroy this actor when detached, setting it to 10 will destroy this after 10 seconds when detached"},{"type":"boolean","name":"use_absolute_rotation","default":"false","description":"Whether to force attached object to use absolute rotation (will not follow parent)"}]},{"name":"Detach","description":"Detaches this Actor from AttachedTo Actor","authority":"authority"},{"name":"GetActorTags","description":"Gets all Unreal Actor Tags on this Actor","authority":"client","return":[{"type":"string[]"}],"relations":{"functions":["AddActorTag","RemoveActorTag"]}},{"name":"GetAttachedEntities","description":"Gets all Actors attached to this Actor","authority":"both","return":[{"type":"Actor[]"}]},{"name":"GetAttachedTo","description":"Gets the Actor this Actor is attached to","authority":"both","return":[{"type":"Actor?"}]},{"name":"GetBounds","description":"Gets this Actor\'s bounds","authority":"client","return":[{"type":"table","table_properties":[{"name":"Origin","type":"Vector"},{"name":"BoxExtent","type":"Vector"},{"name":"SphereRadius","type":"float"}]}]},{"name":"GetCollision","description":"Gets this Actor\'s collision type","authority":"both","return":[{"type":"CollisionType","name":"collision_type"}],"relations":{"functions":["SetCollision"]}},{"name":"GetDimension","description":"Gets this Actor\'s dimension","authority":"both","return":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"],"functions":["SetDimension"]}},{"name":"GetDistanceFromCamera","description":"Gets the distance of this Actor from the Camera","authority":"client","return":[{"type":"float"}]},{"name":"GetForce","description":"Gets this Actor\'s force (set by <code>SetForce()</code>)","authority":"both","return":[{"type":"Vector","name":"force"}],"relations":{"functions":["SetForce"]}},{"name":"GetLocation","description":"Gets this Actor\'s location in the game world","authority":"both","return":[{"type":"Vector","name":"location"}],"relations":{"functions":["SetLocation"]}},{"name":"GetNetworkAuthority","description":"Gets this Actor\'s Network Authority Player","authority":"server","return":[{"type":"Player?"}],"relations":{"functions":["SetNetworkAuthority"]}},{"name":"GetRelativeLocation","description":"Gets this Actor\'s Relative Location if it\'s attached","authority":"both","return":[{"type":"Vector","name":"relative_location"}],"relations":{"functions":["SetRelativeLocation"]}},{"name":"GetRelativeRotation","description":"Gets this Actor\'s Relative Rotation if it\'s attached","authority":"both","return":[{"type":"Rotator","name":"relative_rotation"}],"relations":{"functions":["SetRelativeRotation"]}},{"name":"GetRotation","description":"Gets this Actor\'s angle in the game world","authority":"both","return":[{"type":"Rotator","name":"rotation"}],"relations":{"functions":["SetRotation"]}},{"name":"GetScale","description":"Gets this Actor\'s scale","authority":"both","return":[{"type":"Vector","name":"scale"}],"relations":{"functions":["SetScale"]}},{"name":"GetScreenPercentage","description":"Gets the percentage of this Actor size in the screen","authority":"client","return":[{"type":"float"}]},{"authority":"client","name":"GetSocketTransform","description":"Gets a Socket Transform in world space given a bone or socket name","return":[{"type":"table","table_properties":[{"name":"Location","type":"Vector"},{"name":"Rotation","type":"Rotator"}]}],"parameters":[{"name":"socket_name","type":"string"}]},{"name":"GetVelocity","description":"Gets this Actor\'s current velocity","authority":"both","return":[{"type":"Vector","name":"velocity"}]},{"name":"HasAuthority","description":"Gets if this Actor was spawned by the client side","authority":"client","return":[{"type":"boolean","description":"false if it was spawned by the Server or true if it was spawned by the client"}]},{"name":"HasNetworkAuthority","description":"Returns true if the local Player is currently the Network Authority of this Actor","authority":"client","return":[{"type":"boolean"}]},{"name":"IsBeingDestroyed","description":"Returns true if this Actor is being destroyed","description_long":"Returns true if this Actor is being destroyed.<br>You can check this inside events like <code>Drop</code> to see if a Pickable is being dropped because it\'s going to be destroyed","authority":"both","return":[{"type":"boolean"}]},{"name":"IsGravityEnabled","description":"Returns true if gravity is enabled on this Actor","authority":"both","return":[{"type":"boolean","name":"gravity_enabled"}],"relations":{"functions":["SetGravityEnabled"]}},{"name":"IsInWater","description":"Returns true if this Actor is in water","authority":"both","return":[{"type":"boolean"}]},{"name":"IsNetworkDistributed","description":"Returns true if this Actor is currently network distributed","description_long":"Returns true if this Actor is currently network distributed. Only actors being network distributed can have their network authority set<br>Entities have NetworkDistributed automatically disabled when: Attached, Possessed, Grabbed, Picked Up or Driving","authority":"both","return":[{"type":"boolean"}]},{"name":"IsVisible","description":"Returns true if this Actor is visible","authority":"both","return":[{"name":"is_visible","type":"boolean"}]},{"name":"RemoveActorTag","description":"Removes an Unreal Actor Tag from this Actor","authority":"client","parameters":[{"type":"string","name":"tag"}],"relations":{"functions":["AddActorTag","GetActorTags"]}},{"name":"RotateTo","description":"Smoothly rotates this actor to an angle over a certain time","authority":"network-authority","parameters":[{"type":"Rotator","name":"rotation"},{"type":"float","name":"time","description":"Time to interpolate from current location to target location"},{"type":"float","name":"exp","default":"0","description":"Exponent used to smooth interpolation. Use <code>0</code> for linear movement"}]},{"name":"SetCollision","description":"Sets this Actor\'s collision type","authority":"authority","parameters":[{"type":"CollisionType","name":"collision_type"}],"relations":{"functions":["GetCollision"]}},{"name":"SetDimension","description":"Sets this Actor\'s Dimension","authority":"server","parameters":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"],"functions":["GetDimension"]}},{"name":"SetForce","description":"Adds a permanent force to this Actor, set to Vector(0, 0, 0) to cancel","authority":"network-authority","parameters":[{"type":"Vector","name":"force"},{"type":"boolean","name":"is_local","default":"true","description":"Whether to apply the force in local space"}],"relations":{"functions":["GetForce"]}},{"name":"SetGravityEnabled","description":"Sets whether gravity is enabled on this Actor","authority":"authority","parameters":[{"type":"boolean","name":"gravity_enabled"}],"relations":{"functions":["IsGravityEnabled"]}},{"name":"SetHighlightEnabled","description":"Sets whether the highlight is enabled on this Actor, and which highlight index to use","description_long":"Sets whether the highlight is enabled on this Actor, and which highlight index to use. This will apply the highlight on every attached entity too","authority":"client","parameters":[{"type":"boolean","name":"is_enabled"},{"type":"integer","name":"index","default":"0","description":"Index to use (should be <code>0</code>, <code>1</code> or <code>2</code>)"}],"relations":{"etc":[{"label":"Client.SetHighlightColor()","url":"/docs/scripting-reference/static-classes/client#static-function-sethighlightcolor"}]}},{"name":"SetLifeSpan","description":"Sets the time (in seconds) before this Actor is destroyed. After this time has passed, the actor will be automatically destroyed.","authority":"authority","parameters":[{"type":"float","name":"seconds","description":"Seconds before being destroyed"}]},{"name":"SetLocation","description":"Sets this Actor\'s location in the game world","authority":"authority","parameters":[{"type":"Vector","name":"location"}],"relations":{"functions":["GetLocation"]}},{"name":"SetNetworkAuthority","description":"Sets the Player to have network authority over this Actor","description_long":"Sets the Player to have network authority over this Actor. This Player will be manually assigned to handle this Actor\'s physics and share its location with other clients. The authority assignment will still be overridden by the game automatically<br><br>Please refer to <a href=\\"/docs/core-concepts/scripting/authority-concepts#network-authority\\">Network Authority</a> for more information","authority":"server","parameters":[{"type":"Player","name":"player","default":"nil","description":"New player which will assume the Network Authority of this Actor"}],"relations":{"functions":["GetNetworkAuthority"]}},{"name":"SetNetworkAuthorityAutoDistributed","description":"Sets if this Actor will auto distribute the network authority between players","description_long":"Sets if this Actor will auto distribute the network authority between players when idle<br><br>Please refer to <a href=\\"/docs/core-concepts/scripting/authority-concepts#network-authority\\">Network Authority</a> for more information","authority":"server","parameters":[{"type":"boolean","name":"auto_distribute","description":"If this Actor will be auto network distributed"}]},{"name":"SetOutlineEnabled","description":"Sets whether the outline is enabled on this Actor, and which outline index to use","description_long":"Sets whether the outline is enabled on this Actor, and which outline index to use. This will apply the outline on every attached entity too","authority":"client","parameters":[{"type":"boolean","name":"is_enabled"},{"type":"integer","name":"index","default":"0","description":"Index to use (should be <code>0</code>, <code>1</code> or <code>2</code>)"}],"relations":{"etc":[{"label":"Client.SetOutlineColor()","url":"/docs/scripting-reference/static-classes/client#static-function-setoutlinecolor"}]}},{"name":"SetRelativeLocation","description":"Sets this Actor\'s relative location in local space (only if this actor is attached)","authority":"authority","parameters":[{"type":"Vector","name":"relative_location"}],"relations":{"functions":["GetRelativeLocation"]}},{"name":"SetRelativeRotation","description":"Sets this Actor\'s relative rotation in local space (only if this actor is attached)","authority":"authority","parameters":[{"type":"Rotator","name":"relative_rotation"}],"relations":{"functions":["GetRelativeRotation"]}},{"name":"SetRotation","description":"Sets this Actor\'s rotation in the game world","authority":"authority","parameters":[{"type":"Rotator","name":"rotation"}],"relations":{"functions":["GetRotation"]}},{"name":"SetScale","description":"Sets this Actor\'s scale","authority":"authority","parameters":[{"type":"Vector","name":"scale"}],"relations":{"functions":["GetScale"]}},{"name":"SetVisibility","description":"Sets whether the actor is visible or not","authority":"both","parameters":[{"type":"boolean","name":"is_visible"}]},{"name":"TranslateTo","description":"Smoothly moves this actor to a location over a certain time","authority":"network-authority","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"time","description":"Time to interpolate from current location to target location"},{"type":"float","name":"exp","default":"0","description":"Exponent used to smooth interpolation. Use <code>0</code> for linear movement"}]},{"name":"WasRecentlyRendered","description":"Gets if this Actor was recently rendered on screen","authority":"client","return":[{"type":"boolean"}]}],"events":[{"authority":"server","name":"DimensionChange","description":"Triggered when an Actor changes it\'s dimension","arguments":[{"name":"self","type":"Actor"},{"name":"old_dimension","type":"integer"},{"name":"new_dimension","type":"integer"}],"relations":{"functions":["SetDimension","GetDimension"]}}],"inheritance_children":["Billboard","Blueprint","Cable","Character","CharacterSimple","Decal","Gizmo","Grenade","Light","Melee","Particle","Prop","SceneCapture","StaticMesh","Sound","TextRender","Trigger","VehicleWheeled","VehicleWater","Weapon","Widget3D"]}'),ve=JSON.parse('{"name":"Pickable","description":"<b>Pickables</b> are special Actors which can be <b>grabbed</b>, <b>held</b> and <b>used</b> by Characters.","is_base":true,"functions":[{"authority":"both","name":"AddSkeletalMeshAttached","description":"Attaches a Skeletal Mesh as master pose to this entity","description_long":"Spawns and attaches a SkeletalMesh to this Pickable, the SkeletalMesh must have the same skeleton used by this Actor\'s mesh, and will follow all animations from it. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_path","description":"Path to SkeletalMesh asset to attach"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["RemoveSkeletalMeshAttached"]}},{"authority":"both","name":"AddStaticMeshAttached","description":"Attaches a Static Mesh to this entity","description_long":"Spawns and attaches a StaticMesh to this Pickable in a Socket with a relative location and rotation. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the StaticMesh"},{"type":"StaticMeshPath","name":"static_mesh_path","description":"Path to StaticMesh asset to attach"},{"type":"string","name":"socket","default":"","description":"Bone socket to attach to"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":"Relative location"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Relative rotation"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["SetStaticMeshAttachedTransform","RemoveStaticMeshAttached"]}},{"authority":"both","name":"GetAllSkeletalMeshAttached","description":"Gets all Skeletal Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetAllStaticMeshAttached","description":"Gets all Static Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetHandler","description":"Gets the Character, if it exists, that\'s holding this Pickable","return":[{"type":"Character?"}]},{"authority":"both","name":"GetHandlingMode","description":"Gets the Handling Mode of this Pickable","return":[{"type":"HandlingMode"}]},{"authority":"both","name":"GetMesh","description":"Gets the name of the asset this Pickable uses","return":[{"name":"asset","type":"SkeletalMeshPath"}]},{"authority":"server","name":"PullUse","description":"Pulls the usage of this Pickable (will start firing if this is a weapon)","parameters":[{"type":"float","name":"release_use_after","default":"-1","description":"Time in seconds to automatically release the usage (-1 will not release, 0 will release one tick after)"}]},{"authority":"server","name":"ReleaseUse","description":"Releases the usage of this Pickable (will stop firing if this is a weapon)"},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if it exists, a SkeletalMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the SkeletalMesh to remove"}],"relations":{"functions":["AddSkeletalMeshAttached"]}},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if it exists, a StaticMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh to remove"}],"relations":{"functions":["AddStaticMeshAttached"]}},{"authority":"server","name":"SetAttachmentSettings","description":"Sets the Attachment Settings for this Pickable (how it attaches to the Character when Picking up)","parameters":[{"type":"Vector","name":"relative_location","description":"Location relative to the Socket"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Rotation relative to the Socket"},{"type":"string","name":"socket","default":"hand_r_socket","description":"Character Socket to attach to when picked up"}]},{"authority":"server","name":"SetCrosshairMaterial","description":"Sets the crosshair material for this Pickable","parameters":[{"type":"MaterialPath","name":"material_asset","description":"Asset path to the crosshair material"}]},{"authority":"server","name":"SetPickable","description":"Sets if this Pickable can be picked up from ground by the player","parameters":[{"type":"boolean","name":"is_pickable"}]},{"authority":"both","name":"SetStaticMeshAttachedTransform","description":"Sets a Static Mesh Attached location and rotation","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh set with AddStaticMeshAttached"},{"type":"Vector","name":"relative_location","description":"New relative location"},{"type":"Rotator","name":"relative_rotation","description":"New relative rotation"}],"relations":{"functions":["AddStaticMeshAttached"]}}],"events":[{"authority":"both","name":"Drop","description":"When a Character drops this Pickable","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has been dropped"},{"type":"Character","name":"character","description":"The Character that dropped it"},{"type":"boolean","name":"was_triggered_by_player","description":"If the Player actively pressed the Drop binding to drop"}]},{"authority":"both","name":"Hit","description":"When this Pickable hits something","arguments":[{"type":"Pickable","name":"self","description":"The Actor that was hit"},{"type":"float","name":"impact_force","description":"The intensity of the hit normalized by the Pickable\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction of the hit"},{"type":"Vector","name":"impact_location","description":"The world space location of the impact"},{"type":"Vector","name":"velocity","description":"The Pickable\'s velocity at the moment it hit"}]},{"authority":"server","name":"Interact","description":"Triggered when a Character interacts with this Pickable (i.e. tries to pick it up)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable that just got interacted with"},{"type":"Character","name":"character","description":"The Character that interacted with it"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent the interaction"}]},{"authority":"both","name":"PickUp","description":"Triggered When a Character picks this up","arguments":[{"type":"Pickable","name":"self","description":"The Pickable that just got picked up"},{"type":"Character","name":"character","description":"The Character that picked it up"}]},{"authority":"both","name":"PullUse","description":"Triggered when a Character presses the use button for this Pickable (i.e. clicks left mouse button with this equipped)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has just been used"},{"type":"Character","name":"character","description":"The Character that used it"}]},{"authority":"both","name":"ReleaseUse","description":"Triggered when a Character releases the use button for this Pickable (i.e. releases left mouse button with this equipped)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has just stopped being used"},{"type":"Character","name":"character","description":"The Character that stopped using it"}]}],"inheritance_children":["Grenade","Melee","Weapon"]}'),_e=JSON.parse('{"name":"Paintable","description":"Base class for all Paintable entities. This class provides customization for materials, exposing common functions to allow you to set custom material parameters, including loading textures from disk.","is_base":true,"functions":[{"authority":"both","name":"ResetMaterial","description":"Resets the material from the specified index to the original one","parameters":[{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to reset the material. Pass empty to reset on main mesh only"}]},{"authority":"both","name":"SetMaterial","description":"Sets the material at the specified index of this Actor","parameters":[{"type":"MaterialPath","name":"material_path","description":"The new Material to apply"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material. Pass empty to set on main mesh only"}]},{"authority":"both","name":"SetMaterialColorParameter","description":"Sets a Color parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"Color","name":"color","description":"The value to set"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material parameter. Pass empty to set on main mesh only"}]},{"authority":"client","name":"SetMaterialFromCanvas","description":"Sets the material at the specified index of this Actor to a Canvas object","parameters":[{"type":"Canvas","name":"canvas","description":"The Canvas object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"}]},{"authority":"client","name":"SetMaterialFromSceneCapture","description":"Sets the material at the specified index of this Actor to a SceneCapture object","parameters":[{"type":"SceneCapture","name":"scene_capture","description":"The SceneCapture object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"}]},{"authority":"client","name":"SetMaterialFromWebUI","description":"Sets the material at the specified index of this Actor to a WebUI object","parameters":[{"type":"WebUI","name":"webui","description":"The WebUI object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"}]},{"authority":"both","name":"SetMaterialScalarParameter","description":"Sets a Scalar parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"float","name":"scalar","description":"The value to set"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material parameter. Pass empty to set on main mesh only"}]},{"authority":"both","name":"SetMaterialTextureParameter","description":"Sets a texture parameter in this Actor\'s material to an image on disk","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"ImagePath","name":"texture_path","description":"The path to the texture"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material parameter. Pass empty to set on main mesh only"}]},{"authority":"both","name":"SetMaterialVectorParameter","description":"Sets a Vector parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"Vector","name":"vector","description":"The value to set"},{"type":"integer","name":"index","default":"-1","description":"The material index to apply (<code>-1</code> means all indices)"},{"type":"string","name":"attachable_id","default":"","description":"The attachable ID (set with <code>AddSkeletalMeshAttached</code> or <code>AddStaticMeshAttached</code>) to apply the material parameter. Pass empty to set on main mesh only"}]},{"authority":"both","name":"SetPhysicalMaterial","description":"Overrides this Actor\'s Physical Material with a new one","parameters":[{"type":"MaterialPath","name":"physical_material_path","description":"The Physical Material to override"}]}],"inheritance_children":["Billboard","Blueprint","Cable","Character","CharacterSimple","Decal","Grenade","Melee","Prop","StaticMesh","TextRender","VehicleWheeled","VehicleWater","Weapon"]}'),Se=JSON.parse('{"name":"Damageable","description":"Base class for all Damageable entities. It provides Health and Damage related methods and events.","is_base":true,"functions":[{"authority":"server","name":"ApplyDamage","return":[{"type":"integer","description":"the damage applied"}],"description":"Do damage to this entity","description_long":"Do damage to this entity, will trigger all related events and apply modified damage based on bone. Also will apply impulse if it\'s a heavy explosion","parameters":[{"type":"integer","name":"damage"},{"type":"string","name":"bone_name","default":""},{"type":"DamageType","name":"damage_type","default":"DamageType.Shot"},{"type":"Vector","name":"from_direction","default":"Vector(0, 0, 0)"},{"type":"Player","name":"instigator","default":"nil","description":"The player which caused the damage"},{"type":"any","name":"causer","default":"nil","description":"The object which caused the damage"}]},{"authority":"both","name":"GetHealth","description":"Gets the current health","return":[{"type":"integer","name":"health"}],"relations":{"functions":["SetHealth"]}},{"authority":"both","name":"GetMaxHealth","description":"Gets the Max Health","return":[{"type":"integer","name":"max_health"}],"relations":{"functions":["SetMaxHealth"]}},{"authority":"server","name":"Respawn","description":"Respawns the Entity, fullying it\'s Health and moving it to it\'s Initial Location","parameters":[{"type":"Vector","name":"location","default":"initial location","description":"If not passed will use the initial location passed when the Entity spawned"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"SetHealth","description":"Sets the Health of this Entity","description_long":"Sets the Health of this Entity. You can only call it on alive Entities (call Respawn first)","parameters":[{"type":"integer","name":"new_health"}],"relations":{"functions":["GetHealth"]}},{"authority":"server","name":"SetMaxHealth","description":"Sets the MaxHealth of this Entity","parameters":[{"type":"integer","name":"max_health"}],"relations":{"functions":["GetMaxHealth"]}}],"events":[{"authority":"both","name":"Death","description":"When Entity Dies","arguments":[{"type":"Damageable","name":"self"},{"type":"integer","name":"last_damage_taken"},{"type":"string","name":"last_bone_damaged"},{"type":"DamageType","name":"damage_type_reason"},{"type":"Vector","name":"hit_from_direction"},{"type":"Player?","name":"instigator"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"authority":"both","name":"HealthChange","description":"When Entity has it\'s Health changed, or because took damage or manually set through scripting or respawning","arguments":[{"type":"Damageable","name":"self"},{"type":"integer","name":"old_health"},{"type":"integer","name":"new_health"}]},{"authority":"both","name":"Respawn","description":"When Entity Respawns","arguments":[{"type":"Damageable","name":"self"}]},{"authority":"both","name":"TakeDamage","description":"Triggered when this Entity takes damage","arguments":[{"type":"Damageable","name":"self"},{"type":"integer","name":"damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}],"return":[{"type":"boolean","description":"Return <code>false</code> to cancel the damage (will still display animations, particles and apply impact forces)"}]}],"inheritance_children":["Character","CharacterSimple","VehicleWheeled","VehicleWater"]}'),we=JSON.parse('{"name":"Vehicle","description":"Base class for all Vehicle entities.","is_base":true,"functions":[{"authority":"both","name":"AddSkeletalMeshAttached","description":"Attaches a Skeletal Mesh as master pose to this entity","description_long":"Spawns and attaches a SkeletalMesh to this Pickable, the SkeletalMesh must have the same skeleton used by this Actor\'s mesh, and will follow all animations from it. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_path","description":"Path to SkeletalMesh asset to attach"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["RemoveSkeletalMeshAttached"]}},{"authority":"both","name":"AddStaticMeshAttached","description":"Attaches a Static Mesh to this entity","description_long":"Spawns and attaches a StaticMesh to this Pickable in a Socket with a relative location and rotation. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the StaticMesh"},{"type":"StaticMeshPath","name":"static_mesh_path","description":"Path to StaticMesh asset to attach"},{"type":"string","name":"socket","default":"","description":"Bone socket to attach to"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":"Relative location"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Relative rotation"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["SetStaticMeshAttachedTransform","RemoveStaticMeshAttached"]}},{"authority":"both","name":"GetAllSkeletalMeshAttached","description":"Gets all Skeletal Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetAllStaticMeshAttached","description":"Gets all Static Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetDoors","description":"Gets all configured Doors","return":[{"type":"table","table_properties":[{"name":"seat_index","type":"integer"},{"name":"offset_location","type":"Vector"},{"name":"seat_location","type":"Vector"},{"name":"seat_rotation","type":"Rotator"},{"name":"leave_lateral_offset","type":"integer"},{"name":"sphere_radius","type":"integer"}]}]},{"authority":"both","name":"GetMesh","description":"Gets the Asset name","return":[{"type":"SkeletalMeshPath","description":"asset path","name":"asset"}]},{"authority":"both","name":"GetPassenger","description":"Gets a passenger from a seat","parameters":[{"type":"integer","name":"seat"}],"return":[{"type":"Character","description":"or nil if no passenger in seat","name":"passenger"}]},{"authority":"both","name":"GetPassengers","description":"Gets all passengers","return":[{"type":"Character[]","name":"passengers"}]},{"authority":"both","name":"PlayAnimation","description":"Plays an Animation on this Vehicle","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":"DefaultSlot"},{"type":"boolean","name":"loop_indefinitely","default":"false","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"blend_in_time","default":"0.25","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"blend_out_time","default":"0.25","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"play_rate","default":"1.0","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group. This parameter is only used if the Vehicle has an Animation Blueprint"}]},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if it exists, a SkeletalMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the SkeletalMesh to remove"}],"relations":{"functions":["AddSkeletalMeshAttached"]}},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if it exists, a StaticMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh to remove"}],"relations":{"functions":["AddStaticMeshAttached"]}},{"authority":"server","name":"SetDoor","description":"Adds a Door to the Vehicle","description_long":"Adds a Door at offset_location from root which will pose the Character at seat_location with seat_rotation rotation.","parameters":[{"type":"integer","name":"seat_index"},{"type":"Vector","name":"offset_location"},{"type":"Vector","name":"seat_location"},{"type":"Rotator","name":"seat_rotation"},{"type":"integer","name":"trigger_radius"},{"type":"integer","name":"leave_lateral_offset","description":"It\'s where the Character will be ejected when leaving it (e.g. -150 for left door or 150 for right door)"}]},{"authority":"server","name":"SetExplosionSettings","description":"Configures the Explosion Settings when health reaches zero","parameters":[{"type":"Vector","name":"engine_relative_location","description":"Relative location of the Engine. Used to apply particles and effects."},{"type":"table","name":"materials_index_burnt_override","description":"List of material indexes to override to burnt when exploded. Leave it empty for all indexes."},{"type":"table","name":"materials_index_burnt_invisible","description":"List of material indexes to override to invisible when exploded. Leave it empty for all indexes."}],"examples":[{"title":"Vehicle Explosion Settings","content":"my_vehicle:SetExplosionSettings(Vector(-50, 0, 0), { 1, 2, 4 }, { 3 })"}]},{"authority":"both","name":"SetStaticMeshAttachedTransform","description":"Sets a Static Mesh Attached location and rotation","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh set with AddStaticMeshAttached"},{"type":"Vector","name":"relative_location","description":"New relative location"},{"type":"Rotator","name":"relative_rotation","description":"New relative rotation"}],"relations":{"functions":["AddStaticMeshAttached"]}}],"events":[{"name":"CharacterAttemptEnter","description":"Triggered when a Character attempts to enter the Vehicle","authority":"server","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"},{"type":"integer","name":"seat","description":"The seat index"}],"return":[{"type":"boolean","description":"Return false to prevent it"}]},{"name":"CharacterAttemptLeave","description":"Triggered when a Character attempts to leave the Vehicle","authority":"server","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"}],"return":[{"type":"boolean","description":"Return false to prevent it"}]},{"name":"CharacterEnter","description":"Triggered when a Character fully enters the Vehicle","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"},{"type":"integer","name":"seat","description":"The seat index"}]},{"name":"CharacterLeave","description":"Triggered when a Character fully leaves the Vehicle","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"}]},{"name":"Hit","description":"Triggered when Vehicle hits something","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"integer","name":"impact_force","description":"The intensity of the Hit normalized by the Vehicle\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Vehicle velocity at the moment it hits"}]},{"name":"TakeDamage","authority":"server","description":"Triggered when this Vehicle takes damage","arguments":[{"type":"Vehicle","name":"self"},{"type":"integer","name":"damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}],"return":[{"type":"boolean","description":"Return <code>false</code> to cancel the damage (will still display animations, particles and apply impact forces)"}]}],"inheritance_children":["VehicleWheeled","VehicleWater"]}'),ke=JSON.parse('{"name":"Pawn","description":"Base class for all Character entities.","is_base":true,"functions":[{"authority":"both","name":"AddSkeletalMeshAttached","description":"Attaches a Skeletal Mesh as master pose to this entity","description_long":"Spawns and attaches a SkeletalMesh to this entity, the SkeletalMesh must have the same skeleton used by this Actor\'s mesh, and will follow all animations from it. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_path","description":"Path to SkeletalMesh asset to attach"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["RemoveSkeletalMeshAttached"]}},{"authority":"both","name":"AddStaticMeshAttached","description":"Attaches a Static Mesh to this entity","description_long":"Spawns and attaches a StaticMesh to this entity in a Socket with a relative location and rotation. Uses a custom ID to be used for removing/customizing it afterwards","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the StaticMesh"},{"type":"StaticMeshPath","name":"static_mesh_path","description":"Path to StaticMesh asset to attach"},{"type":"string","name":"socket","default":"","description":"Bone socket to attach to"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":"Relative location"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Relative rotation"},{"type":"boolean","name":"use_parent_bounds","description":"If true, this component uses its parents bounds when attached. This can be a significant optimization with many components attached together","default":"true"}],"relations":{"functions":["SetStaticMeshAttachedTransform","RemoveStaticMeshAttached"]}},{"authority":"authority","name":"Follow","description":"AI: Makes this Character to follow another actor","description_long":"AI: Makes this Character to follow another actor<br/><br/>Triggers event <a href=\'pawn#event-movecomplete\'>MoveComplete</a>","parameters":[{"type":"Actor","name":"actor","description":"Actor to follow"},{"type":"float","name":"acceptance_radius","default":"50","description":"Radius to consider success"},{"type":"boolean","name":"stop_on_succeed","default":"false","description":"Whether to stop when reaching the target"},{"type":"boolean","name":"stop_on_fail","default":"false","description":"Whether to stop when failed to reach the target"},{"type":"float","name":"update_rate","default":"0.25","description":"How often to recalculate the AI path"}],"relations":{"functions":["StopMovement","MoveTo","GetMovingTo"],"events":["MoveComplete"]}},{"authority":"both","name":"GetAllSkeletalMeshAttached","description":"Gets all Skeletal Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetAllStaticMeshAttached","description":"Gets all Static Meshes attached to this entity","return":[{"type":"string[]","description":"the key as the Attached ID, and the value as the Asset Path"}]},{"authority":"both","name":"GetCapsuleSize","description":"Gets the Capsule Size","return":[{"type":"table","table_properties":[{"name":"Radius","type":"integer"},{"name":"HalfHeight","type":"integer"}],"name":"capsule_size"}],"relations":{"functions":["SetCapsuleSize"]}},{"authority":"both","name":"GetControlRotation","description":"Gets the Control Rotation","return":[{"type":"Rotator","name":"control_rotation"}]},{"authority":"both","name":"GetGravityScale","description":"Gets the gravity scale","return":[{"type":"float","name":"gravity_scale"}],"relations":{"functions":["SetGravityScale"]}},{"authority":"both","name":"GetMesh","description":"Gets the base Mesh Asset","return":[{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset"}]},{"authority":"both","name":"GetMovingTo","description":"Gets the Moving To location","return":[{"type":"Vector","description":"the moving to location or Vector(0, 0, 0) if not moving","name":"location"}]},{"authority":"both","name":"GetPlayer","description":"Gets the possessing Player","return":[{"type":"Player?","name":"possesser"}],"relations":{"functions":["Possess","UnPossess"]}},{"authority":"both","name":"HideBone","description":"Hides a bone of this Character","description_long":"Hides a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","default":"","description":"Bone to hide"}],"relations":{"functions":["UnHideBone","IsBoneHidden"]}},{"authority":"both","name":"IsBoneHidden","return":[{"type":"boolean","description":"if the bone is hidden","name":"bone_name"}],"description":"Gets if a bone is hidden","parameters":[{"type":"string","name":"bone_name","description":"Bone to check"}],"relations":{"functions":["UnHideBone","HideBone"]}},{"authority":"authority","name":"Jump","description":"Triggers this Character to jump"},{"authority":"authority","name":"MoveTo","description":"AI: Makes this Character to walk to the Location","description_long":"AI: Makes this Character to walk to the Location<br/><br/>Triggers event <a href=\'pawn#event-movecomplete\'>MoveComplete</a>","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"acceptance_radius","default":"50"}],"relations":{"functions":["StopMovement","Follow","GetMovingTo"],"events":["MoveComplete"]}},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if it exists, a SkeletalMesh from this entity given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the SkeletalMesh to remove"}],"relations":{"functions":["AddSkeletalMeshAttached"]}},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if it exists, a StaticMesh from this enitity given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh to remove"}],"relations":{"functions":["AddStaticMeshAttached"]}},{"authority":"authority","name":"SetAIAvoidanceSettings","description":"AI: Configures the RVO (Reciprocal Velocity Obstacles) Avoidance system used by the AIs when moving","parameters":[{"type":"boolean","name":"enabled","description":"Whether to enable the RVO Avoidance"},{"type":"integer","name":"avoidance_consideration_radius","default":"300","description":"The radius of the circle used to determine the avoidance distance"}]},{"authority":"authority","name":"SetBrakingSettings","description":"Sets the Movement Braking Settings of this Character","parameters":[{"type":"float","name":"ground_friction","default":"2"},{"type":"float","name":"braking_friction_factor","default":"2"},{"type":"integer","name":"braking_walking","default":"96"},{"type":"integer","name":"braking_flying","default":"3000"},{"type":"integer","name":"braking_swimming","default":"10"},{"type":"integer","name":"braking_falling","default":"0"}]},{"authority":"authority","name":"SetCanCrouch","description":"Sets if this Character is allowed to Crouch and to Prone","parameters":[{"type":"boolean","name":"can_crouch"}]},{"authority":"authority","name":"SetCanJump","description":"Sets if this Character is allowed to Jump","parameters":[{"type":"boolean","name":"can_jump"}]},{"authority":"authority","name":"SetCapsuleSize","description":"Sets this Character\'s Capsule size","description_long":"Sets this Character\'s Capsule size (will affect Camera location and Character\'s collision)","parameters":[{"type":"integer","name":"radius","description":"Default is 42"},{"type":"integer","name":"half_height","description":"Default is 96"}],"relations":{"functions":["GetCapsuleSize"]}},{"authority":"authority","name":"SetGravityScale","description":"Changes the Gravity Scale","description_long":"Changes the Gravity Scale of this Character (can be negative)","parameters":[{"type":"float","name":"gravity_scale"}],"relations":{"functions":["GetGravityScale"]}},{"authority":"authority","name":"SetJumpZVelocity","description":"Sets the velocity of the jump","parameters":[{"type":"integer","name":"jump_z_velocity","description":"Default is 450"}]},{"authority":"both","name":"SetStaticMeshAttachedTransform","description":"Sets a Static Mesh Attached location and rotation","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh set with AddStaticMeshAttached"},{"type":"Vector","name":"relative_location","description":"New relative location"},{"type":"Rotator","name":"relative_rotation","description":"New relative rotation"}],"relations":{"functions":["AddStaticMeshAttached"]}},{"authority":"authority","name":"StopAnimation","description":"Stops an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_asset"}]},{"authority":"authority","name":"StopMovement","description":"AI: Stops the movement","description_long":"AI: Stops the movement<br/><br/>Triggers event <a href=\'pawn#event-movecomplete\'>MoveComplete</a>","relations":{"functions":["Follow","MoveTo","GetMovingTo"],"events":["MoveComplete"]}},{"authority":"both","name":"UnHideBone","description":"UnHide a bone of this Character","description_long":"UnHide a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","description":"Bone to unhide"}],"relations":{"functions":["HideBone","IsBoneHidden"]}}],"events":[{"authority":"client","name":"AnimationBeginNotify","description":"When an Animation Montage Notify begins","arguments":[{"type":"Character","name":"self"},{"type":"string","name":"notify_name"},{"type":"string","name":"animation_name"},{"type":"number","name":"trigger_begin_time"},{"type":"number","name":"trigger_end_time"}]},{"authority":"client","name":"AnimationEndNotify","description":"When an Animation Montage Notify ends","arguments":[{"type":"Character","name":"self"},{"type":"string","name":"notify_name"},{"type":"string","name":"animation_name"},{"type":"number","name":"trigger_begin_time"},{"type":"number","name":"trigger_end_time"}]},{"authority":"both","name":"MoveComplete","description":"Called when AI reaches it\'s destination, or when it fails","arguments":[{"type":"Pawn","name":"self"},{"type":"boolean","name":"succeeded"}],"relations":{"functions":["StopMovement","MoveTo","Follow","GetMovingTo"]}},{"authority":"both","name":"Possess","description":"When Character is possessed by a Player","arguments":[{"type":"Pawn","name":"self"},{"type":"Player","name":"player"}],"relations":{"functions":["UnPossess","GetPlayer"]}},{"authority":"both","name":"UnPossess","description":"When Character is unpossessed by a Player","arguments":[{"type":"Pawn","name":"self"},{"type":"Player","name":"old_player"}],"relations":{"functions":["Possess","GetPlayer"]}}],"inheritance_children":["Character","CharacterSimple"]}'),Ce=JSON.parse('{"name":"Billboard","description":"A Billboard is a 2D Material that will be rendered always facing the camera.","authority":"client","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"MaterialPath","name":"material_asset"},{"type":"Vector2D","name":"size","default":"Vector2D(32, 32)"},{"type":"boolean","name":"size_in_screen_space","default":"false","description":"Size is in Screen or World Space"}]}]}'),Te=JSON.parse('{"name":"Blueprint","description":"A Blueprint Class allows spawning any Unreal Blueprint Actor in nanos world.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"BlueprintPath","name":"blueprint_asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"}]}],"functions":[{"name":"BindBlueprintEventDispatcher","description":"Assigns and Binds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback","description":"Callback function to call","function_parameters":[{"name":"self","type":"Blueprint"},{"name":"params","type":"any..."}]}],"return":[{"type":"function","description":"the callback itself"}]},{"name":"CallBlueprintEvent","return":[{"type":"any...","description":"the function return values"}],"description":"Calls a Blueprint Event or Function","description_long":"Calls a Blueprint Event or Function<br/>Returns all Function return values on <strong>Client Side</strong>","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"name":"GetBlueprintPropertyValue","description":"Gets a Blueprint Property/Variable value","authority":"client","return":[{"type":"any","description":"the value","name":"value"}],"parameters":[{"type":"string","name":"property_name"}],"relations":{"functions":["SetBlueprintPropertyValue"]}},{"name":"SetBlueprintPropertyValue","description":"Sets a Blueprint Property/Variable value directly","authority":"client","parameters":[{"type":"string","name":"property_name"},{"type":"any","name":"value"}],"relations":{"functions":["GetBlueprintPropertyValue"]}},{"name":"UnbindBlueprintEventDispatcher","description":"Unbinds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback?","description":"Optional callback to unbind"}]}]}'),Ae=JSON.parse('{"name":"Cable","description":"A Cable represents a Physics Constraint which joins two Actors with a rope-like visual representation between them.","authority":"server","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"boolean","name":"enable_visuals","default":"true","description":"Toggles the cable visuals"}]}],"functions":[{"authority":"server","name":"AttachEndTo","description":"Attached the end of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"string","name":"bone_name","default":"","description":"Which bone to attach to. If empty it will be attached to the Actor, otherwise to the Mesh at the bone/socket"}]},{"authority":"server","name":"AttachStartTo","description":"Attached the beginning of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"string","name":"bone_name","default":"","description":"Which bone to attach to. If empty it will be attached to the Actor, otherwise to the Mesh at the bone/socket"}]},{"authority":"server","name":"DetachEnd","description":"Detaches the End of this Cable"},{"authority":"server","name":"DetachStart","description":"Detaches the Start of this Cable"},{"authority":"both","name":"GetAttachedEndTo","description":"Gets the Actor attached to End","return":[{"type":"Actor","description":"the Actor or nil","name":"other"}]},{"authority":"both","name":"GetAttachedStartTo","description":"Gets the Actor attached to Start","return":[{"type":"Actor","description":"the Actor or nil","name":"other"}]},{"authority":"server","name":"SetAngularLimits","description":"Sets the Physics Angular Limits of this cable","parameters":[{"type":"ConstraintMotion","name":"swing_1_motion","description":"Indicates whether the Swing1 limit is used"},{"type":"ConstraintMotion","name":"swing_2_motion","description":"Indicates whether the Swing2 limit is used"},{"type":"ConstraintMotion","name":"twist_motion","description":"Indicates whether the Twist limit is used"},{"type":"float","name":"swing_1_limit","default":"0","description":"Angle of movement along the XY plane. This defines the first symmetric angle of the cone"},{"type":"float","name":"swing_2_limit","default":"0","description":"Angle of movement along the XZ plane. This defines the second symmetric angle of the cone"},{"type":"float","name":"twist_limit","default":"0","description":"Symmetric angle of roll along the X-axis"}]},{"authority":"both","name":"SetCableSettings","description":"Set the overall settings for this cable (visuals only)","parameters":[{"type":"float","name":"length","description":"Rest length of the cable. Default is 100. Min is 0"},{"type":"integer","name":"num_segments","description":"How many segments the cable has. Default is 10. Min is 1","default":"10"},{"type":"integer","name":"solver_iterations","description":"The number of solver iterations controls how \'stiff\' the cable is. Default is 1. Max is 16","default":"1"},{"type":"boolean","name":"enable_stiffness","description":"Add stiffness constraints to cable. Default is true","default":"true"}]},{"authority":"both","name":"SetForces","description":"Set the forces the cable has applied (visuals only)","parameters":[{"type":"Vector","name":"force","description":"Force vector (world space) applied to all particles in cable. Default is Vector(0, 0, 0)"},{"type":"float","name":"gravity_scale","default":"1","description":"Scaling applied to world gravity affecting this cable. Default is 1"}]},{"authority":"server","name":"SetLinearLimits","description":"Sets the Physics Linear Limits of this cable","description_long":"Sets the Physics Linear Limits of this cable. If use_soft_constraint is enabled, then stiffness and damping will be used, otherwise restitution will be used.<br/><br/>Note: this method must be called before attaching any cable end.","parameters":[{"type":"ConstraintMotion","name":"x_motion","description":"Indicates the linear constraint applied along the X-axis. Free implies no constraint at all. Locked implies no movement along X is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"y_motion","description":"Indicates the linear constraint applied along the Y-axis. Free implies no constraint at all. Locked implies no movement along Y is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"z_motion","description":"Indicates the linear constraint applied along theZX-axis. Free implies no constraint at all. Locked implies no movement along Z is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"float","name":"limit","default":"0","description":"The distance allowed between between the two joint reference frames. Distance applies on all axes enabled (one axis means line, two axes implies circle, three axes implies sphere)"},{"type":"float","name":"restitution","default":"0","description":"Controls the amount of bounce when the constraint is violated. A restitution value of 1 will bounce back with the same velocity the limit was hit. A value of 0 will stop dead"},{"type":"boolean","name":"use_soft_constraint","default":"false","description":"Whether we want to use a soft constraint (spring)"},{"type":"float","name":"stiffness","default":"0","description":"Stiffness of the soft constraint. Only used when Soft Constraint is on"},{"type":"float","name":"damping","default":"0","description":"Damping of the soft constraint. Only used when Soft Constraint is on"}]},{"authority":"both","name":"SetRenderingSettings","description":"Set the rendering settings of this cable (visuals only)","parameters":[{"type":"float","name":"width","description":"How wide the cable geometry is. Default is 6"},{"type":"integer","name":"num_sides","description":"Number of sides of the cable geometry. Default is 4"},{"type":"integer","name":"tile_material","description":"How many times to repeat the material along the length of the cable. Default is 1"}]}]}'),Pe=JSON.parse('{"name":"Canvas","description":"Canvas is an entity which you can draw onto it.","authority":"client","constructors":[{"name":"Default Constructor","parameters":[{"type":"boolean","name":"is_visible","default":"true","description":"Whether to draw it on screen"},{"type":"Color","name":"clear_color","default":"Color.TRANSPARENT","description":"Color to clear with (background color)"},{"type":"float","name":"auto_repaint_rate","default":"-1","description":"Rate to auto repaint (call Update event), pass 0 for every frame, -1 to disable"},{"type":"boolean","name":"should_clear_before_update","default":"true","description":"Whether to clear with Clear Color before updates"},{"type":"boolean","name":"auto_resize","default":"true","description":"Auto resize with screen\'s size"},{"type":"integer","name":"width","default":"0","description":"If not using auto_resize"},{"type":"integer","name":"height","default":"0","description":"If not using auto_resize"},{"type":"Vector2D","name":"screen_position","default":"Vector2D(0, 0)","description":"If not using auto_resize, offset when drawing to screen"}]}],"functions":[{"authority":"client","name":"Clear","description":"Clear the Canvas with a specific Color","parameters":[{"type":"Color","name":"clear_color"}]},{"authority":"client","name":"DrawBox","description":"Draws an unfilled box on the Canvas","description_long":"Draws an unfilled box on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"float","name":"thickness"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawLine","description":"Draws a line on the Canvas","description_long":"Draws a line on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"Vector2D","name":"screen_position_a"},{"type":"Vector2D","name":"screen_position_b"},{"type":"float","name":"thickness"},{"type":"Color","name":"render_color"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterial","description":"Draws a Material on the Canvas","description_long":"Draws a Material on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"MaterialPath","name":"material_path"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterialFromSceneCapture","description":"Draws a SceneCapture on the Canvas","description_long":"Draws a SceneCapture on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"SceneCapture","name":"scenecapture_entity"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterialFromWebUI","description":"Draws a WebUI on the Canvas","description_long":"Draws a WebUI on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"WebUI","name":"webui_entity"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawPolygon","description":"Draws a N-Polygon on the Canvas","description_long":"Draws a N-Polygon on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path","description":"Pass empty to use default white Texture"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"radius","default":"Vector2D(1, 1)"},{"type":"integer","name":"number_of_sides","default":"3"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawRect","description":"Draws a filled Rect on the Canvas","description_long":"Draws a fille Rect on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path","description":"Pass empty to use default white Texture"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawText","description":"Draws a Text on the Canvas","description_long":"Draws a Text on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/>Shadow and Outline won\'t work properly with Transparent <code>clear_color</code>","parameters":[{"type":"string","name":"text"},{"type":"Vector2D","name":"screen_position"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"integer","name":"font_size","default":"12"},{"type":"Color","name":"text_color","default":"Color.WHITE"},{"type":"float","name":"kerning","default":"0"},{"type":"boolean","name":"center_x","default":"false"},{"type":"boolean","name":"center_y","default":"false"},{"type":"Color","name":"shadow_color","default":"Color.TRANSPARENT"},{"type":"Vector2D","name":"shadow_offset","default":"Vector2D(1, 1)"},{"type":"boolean","name":"outlined","default":"false"},{"type":"Color","name":"outline_color","default":"Color.BLACK"}]},{"authority":"client","name":"DrawTexture","description":"Draws a Texture on the Canvas","description_long":"Draws a Texture on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"}]},{"authority":"client","name":"GetSize","description":"Gets the Canvas Size","return":[{"type":"Vector2D","description":"the current size","name":"size"}]},{"authority":"client","name":"Repaint","description":"Forces the repaint","description_long":"Forces the repaint, this will trigger Update event"},{"authority":"client","name":"Resize","description":"Resizes the Canvas if not using auto_resize","parameters":[{"type":"integer","name":"width"},{"type":"integer","name":"height"}]},{"authority":"client","name":"SetAutoRepaintRate","description":"Sets the repaint rate","description_long":"Sets it to -1 to stop auto repainting or 0 to repaint every frame","parameters":[{"type":"boolean","name":"auto_repaint_rate"}]},{"authority":"client","name":"SetAutoResize","description":"Sets if the canvas should auto resize to screen size","parameters":[{"type":"boolean","name":"auto_resize"}]},{"authority":"client","name":"SetScreenPosition","description":"Sets the Canvas Screen Position offset","parameters":[{"type":"Vector2D","name":"screen_position"}]},{"authority":"client","name":"SetVisibility","description":"Sets if it\'s visible on screen","parameters":[{"type":"boolean","name":"visible"}]}],"events":[{"name":"Update","authority":"client","description":"Called when the Canvas needs to be painted<br/><br/>You can only call <code>:Draw...()</code> methods from inside this event","arguments":[{"name":"self","type":"Canvas"},{"name":"width","type":"integer"},{"name":"height","type":"integer"}]}]}'),xe=JSON.parse('{"name":"Character","description":"Characters represents Actors which can be possessed, can move and interact with world. They are the default Skeletal Mesh Character built for nanos world.","authority":"server","inheritance":["Entity","Actor","Pawn","Paintable","Damageable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"integer","name":"max_health","default":"100","description":"Current / Max Health"},{"type":"SoundPath","name":"death_sound","default":"nanos-world::A_Male_01_Death","description":"Played when Character dies"},{"type":"SoundPath","name":"pain_sound","default":"nanos-world::A_Male_01_Pain","description":"Played when Character takes damage"}]}],"functions":[{"authority":"both","name":"ClearMorphTargets","description":"Clear all Morph Target that are set to this Mesh","relations":{"functions":["SetMorphTarget","GetMorphTarget","GetAllMorphTargetNames"]}},{"authority":"server","name":"Drop","description":"Drops any Pickable the Character is holding","relations":{"functions":["GetPicked","PickUp"]}},{"authority":"server","name":"EnterVehicle","description":"Enters the Vehicle at Seat (0 - Driver)","parameters":[{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat","default":"0"}],"relations":{"functions":["GetVehicle","GetVehicleSeat"],"events":["EnterVehicle","AttemptEnterVehicle"]}},{"authority":"client","name":"GetAllMorphTargetNames","description":"Returns a table with all morph targets available","return":[{"type":"string[]","description":"table with all morph targets available"}],"relations":{"functions":["SetMorphTarget","GetMorphTarget","ClearMorphTargets"]}},{"authority":"both","name":"GetCameraMode","description":"Gets the camera mode","return":[{"type":"CameraMode","name":"camera_mode"}],"relations":{"functions":["SetCameraMode"]}},{"authority":"both","name":"GetCanAim","description":"Gets if can aim","return":[{"type":"boolean","name":"can_aim"}],"relations":{"functions":["SetCanAim"]}},{"authority":"both","name":"GetCanCrouch","description":"Gets if can crouch","return":[{"type":"boolean","name":"can_crouch"}]},{"authority":"both","name":"GetCanDrop","description":"Gets if can drop","return":[{"type":"boolean","name":"can_drop"}],"relations":{"functions":["SetCanDrop"]}},{"authority":"both","name":"GetCanGrabProps","description":"Gets if can grab props","return":[{"type":"boolean","name":"can_grab_props"}],"relations":{"functions":["SetCanGrabProps"]}},{"authority":"both","name":"GetCanPickupPickables","description":"Gets if can pickup Pickables (Weapons, Melee, Grenade...)","return":[{"type":"boolean","name":"can_pickup"}],"relations":{"functions":["SetCanPickupPickables"]}},{"authority":"both","name":"GetCanPunch","description":"Gets if can punch","return":[{"type":"boolean","name":"can_punch"}],"relations":{"functions":["SetCanPunch"]}},{"authority":"both","name":"GetCanSprint","description":"Gets if can sprint","return":[{"type":"boolean","name":"can_sprint"}],"relations":{"functions":["SetCanSprint"]}},{"authority":"both","name":"GetDamageMultiplier","description":"Gets the Damage Multiplier of a bone","return":[{"type":"float","description":"the damage multiplier of the bone","name":"multiplier"}],"parameters":[{"name":"bone_name","type":"string"}],"relations":{"functions":["SetDamageMultiplier"]}},{"authority":"both","name":"GetFallDamageTaken","description":"Gets the Fall Damage","return":[{"type":"integer","name":"damage"}],"relations":{"functions":["SetFallDamageTaken"]}},{"authority":"both","name":"GetFallingMode","description":"Gets the FallingMode","return":[{"type":"FallingMode"}]},{"authority":"both","name":"GetFlyingMode","description":"Gets if it\'s in Flying mode","return":[{"type":"boolean","name":"flying_mode"}],"relations":{"functions":["SetFlyingMode"]}},{"authority":"both","name":"GetGaitMode","description":"Gets the GaitMode","return":[{"type":"GaitMode","name":"gait_mode"}],"relations":{"functions":["SetGaitMode"]}},{"authority":"both","name":"GetGrabbedProp","description":"Gets the Grabbed Prop","return":[{"type":"Prop?","name":"prop"}],"relations":{"functions":["GrabProp","UnGrabProp"]}},{"authority":"both","name":"GetImpactDamageTaken","description":"Gets the impact damage taken","return":[{"type":"integer","name":"impact_damage"}],"relations":{"functions":["SetImpactDamageTaken"]}},{"authority":"both","name":"GetJumpZVelocity","description":"Gets the Jump Z Velocity","return":[{"type":"integer","name":"jump_z_velocity"}]},{"authority":"both","name":"GetMorphTarget","description":"Returns the value of a Morph Target","return":[{"type":"float","description":"value of the Morph Target","name":"value"}],"parameters":[{"type":"string","name":"name","description":"Morph Target Name"}],"relations":{"functions":["SetMorphTarget","ClearMorphTargets","GetAllMorphTargetNames"]}},{"authority":"both","name":"GetPicked","description":"Gets the Pickable if picking up","return":[{"type":"Pickable?","name":"object"}],"relations":{"functions":["PickUp","Drop"]}},{"authority":"both","name":"GetPunchDamage","description":"Gets the punch damage","return":[{"type":"integer","name":"punch_damage"}],"relations":{"functions":["SetPunchDamage"]}},{"authority":"both","name":"GetSpeedMultiplier","description":"Gets the speed multiplier","return":[{"type":"float","name":"speed_multiplier"}],"relations":{"functions":["SetSpeedMultiplier"]}},{"authority":"both","name":"GetStanceMode","description":"Gets the Stance Mode","return":[{"type":"StanceMode","name":"stance_mode"}],"relations":{"functions":["SetStanceMode"]}},{"authority":"both","name":"GetSwimmingMode","description":"Gets the Swimming Mode","return":[{"type":"SwimmingMode","name":"swimming_mode"}]},{"authority":"both","name":"GetTeam","description":"Gets the Team","return":[{"type":"integer","name":"team"}],"relations":{"functions":["SetTeam"]}},{"authority":"both","name":"GetVehicle","description":"Gets the entered Vehicle","return":[{"type":"Vehicle?","name":"vehicle"}],"relations":{"functions":["EnterVehicle","LeaveVehicle"]}},{"authority":"both","name":"GetVehicleSeat","description":"Gets the entered Vehicle seat","return":[{"type":"integer"}]},{"authority":"both","name":"GetViewMode","description":"Gets the View Mode","return":[{"type":"ViewMode","name":"view_mode"}],"relations":{"functions":["SetViewMode"]}},{"authority":"both","name":"GetWeaponAimMode","description":"Gets the Weapon Aim Mode","return":[{"type":"AimMode","name":"aim_mode"}],"relations":{"functions":["SetWeaponAimMode"]}},{"authority":"server","name":"GrabProp","description":"Gives a Prop to the Character","parameters":[{"type":"Prop","name":"prop"}],"relations":{"functions":["GetGrabbedProp"]}},{"authority":"both","name":"IsInputEnabled","description":"Gets if has input enabled","return":[{"type":"boolean","name":"is_enabled"}],"relations":{"functions":["SetInputEnabled"]}},{"authority":"both","name":"IsInRagdollMode","description":"Gets if Character is in ragdoll mode","return":[{"type":"boolean","name":"ragdoll_enabled"}]},{"authority":"both","name":"IsInvulnerable","description":"Gets if is invulnerable","return":[{"type":"boolean","name":"is_invulnerable"}],"relations":{"functions":["SetInvulnerable"]}},{"authority":"server","name":"LeaveVehicle","description":"Leaves the current Vehicle","relations":{"functions":["EnterVehicle","GetVehicle"],"events":["LeaveVehicle","AttemptLeaveVehicle"]}},{"authority":"server","name":"LookAt","description":"AI: Tries to make this Character to look at Location","parameters":[{"type":"Vector","name":"location","description":"World location to look"}]},{"authority":"server","name":"PickUp","description":"Gives a Melee/Grenade/Weapon (Pickable) to the Character","parameters":[{"type":"Pickable","name":"pickable"}],"relations":{"functions":["Drop","GetPicked"]}},{"authority":"server","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"AnimationSlotType","name":"slot_type","default":"AnimationSlotType.FullBody"},{"type":"boolean","name":"loop_indefinitely","default":"false"},{"type":"float","name":"blend_in_time","default":"0.25"},{"type":"float","name":"blend_out_time","default":"0.25"},{"type":"float","name":"play_rate","default":"1.0"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}],"relations":{"etc":[{"label":"StopAnimation","url":"/docs/next/scripting-reference/classes/base-classes/pawn#function-stopanimation"}]}},{"authority":"both","name":"ResetPhysicalAnimationSettings","description":"Resets all Physical Animation settings"},{"authority":"server","name":"SetAccelerationSettings","description":"Sets the Movement Max Acceleration of this Character","parameters":[{"type":"integer","name":"walking","default":"768"},{"type":"integer","name":"parachuting","default":"512"},{"type":"integer","name":"skydiving","default":"768"},{"type":"integer","name":"falling","default":"128"},{"type":"integer","name":"swimming","default":"256"},{"type":"integer","name":"swimming_surface","default":"256"},{"type":"integer","name":"flying","default":"1024"}]},{"authority":"server","name":"SetAirControl","description":"Sets the amount of movement control allowed when it is in air","parameters":[{"type":"float","name":"air_control","default":"0.2","description":"When falling, amount of lateral movement control available to the character. 0 = no control, 1 = full control at max speed of MaxWalkSpeed"},{"type":"float","name":"boost_multiplier","default":"512","description":"When falling, multiplier applied to air_control when lateral velocity is less than boost_velocity_threshold. Setting this to zero will disable air control boosting. Final result is clamped at 1"},{"type":"float","name":"boost_velocity_threshold","default":"25","description":"When falling, if lateral velocity magnitude is less than this value, air_control is multiplied by boost_multiplier. Setting this to zero will disable air control boosting"}]},{"authority":"server","name":"SetAnimationIdleWalkRunCrouching","description":"Sets the Blend Space (2D) Animation for Crouching<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"AnimationPath","name":"blend_space_path"},{"type":"boolean","name":"enable_turn_in_place","default":"false"}]},{"authority":"server","name":"SetAnimationIdleWalkRunProning","description":"Sets the Blend Space (2D) Animation for Proning<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"AnimationPath","name":"blend_space_path"}]},{"authority":"server","name":"SetAnimationIdleWalkRunStanding","description":"Sets the Blend Space (2D) Animation for Standing","description_long":"Sets the Blend Space (2D) Animation for Standing<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"AnimationPath","name":"blend_space_path"},{"type":"boolean","name":"enable_turn_in_place","default":"false"}]},{"authority":"server","name":"SetAnimationsTransitionCrouchingProning","description":"Sets the Transition Animation between Crouching and Proning","parameters":[{"type":"AnimationPath","name":"crouching_to_proning"},{"type":"AnimationPath","name":"pronng_to_crouching"}]},{"authority":"server","name":"SetAnimationsTransitionStandingCrouching","description":"Sets the Transition Animation between Standing and Crouching","parameters":[{"type":"AnimationPath","name":"standing_to_crouching"},{"type":"AnimationPath","name":"crouching_to_standing"}]},{"authority":"server","name":"SetCameraMode","description":"Sets the Camera Mode","description_long":"Sets the Camera Mode (i.e. Only TPS, FPS or if allow both)<br/><br/>Using FPSOnly CameraMode on AI will lock his body rotation (when using LookAt)","parameters":[{"type":"CameraMode","name":"camera_mode"}],"relations":{"functions":["GetCameraMode"]}},{"authority":"client","name":"SetCameraOffset","description":"Sets the Camera Offset (only affects TPS)","parameters":[{"type":"Vector","name":"camera_offset"}]},{"authority":"server","name":"SetCanAim","description":"Sets if this Character is allowed to Aim","parameters":[{"type":"boolean","name":"can_aim"}],"relations":{"functions":["GetCanAim"]}},{"authority":"server","name":"SetCanDeployParachute","description":"Sets if this Character is allowed to deploy the Parachute","parameters":[{"type":"boolean","name":"can_deploy_parachute"}]},{"authority":"server","name":"SetCanDive","description":"Sets if this Character is allowed to Dive","parameters":[{"type":"boolean","name":"can_dive"}]},{"authority":"server","name":"SetCanDrop","description":"Sets if this Character is allowed to Drop the Picked up item","parameters":[{"type":"boolean","name":"can_drop"}],"relations":{"functions":["GetCanDrop"]}},{"authority":"server","name":"SetCanGrabProps","description":"Sets if this Character is allowed to Grab any Prop","parameters":[{"type":"boolean","name":"can_grab_props"}],"relations":{"functions":["GetCanGrabProps"]}},{"authority":"server","name":"SetCanPickupPickables","description":"Sets if this Character is allowed to Pick up any Pickable (Weapon, Grenade, Melee...)","parameters":[{"type":"boolean","name":"can_pickup"}],"relations":{"functions":["GetCanPickupPickables"]}},{"authority":"server","name":"SetCanPunch","description":"Sets if this Character is allowed to Punch","parameters":[{"type":"boolean","name":"can_punch"}],"relations":{"functions":["GetCanPunch"]}},{"authority":"server","name":"SetCanSprint","description":"Sets if this Character is allowed to Sprint","parameters":[{"type":"boolean","name":"can_sprint"}],"relations":{"functions":["GetCanSprint"]}},{"authority":"server","name":"SetDamageMultiplier","description":"Changes how much damage this character takes on specific bones","parameters":[{"type":"string","name":"bone_name"},{"type":"float","name":"multiplier"}],"relations":{"functions":["GetDamageMultiplier"]}},{"authority":"server","name":"SetDeathSound","description":"Changes the Death sound when Character dies","parameters":[{"type":"string","name":"sound_asset"}]},{"authority":"server","name":"SetFallDamageTaken","description":"Set the Fall Damage multiplier taken when falling from High places","description_long":"Set the Fall Damage multiplier taken when falling from High places.<br/><br/>Setting to 0 will make the Character to do not take any damage","parameters":[{"type":"integer","name":"damage","description":"Default is 10"}],"relations":{"functions":["GetFallDamageTaken"]}},{"authority":"server","name":"SetFlyingMode","description":"Sets the Flying Mode","parameters":[{"type":"boolean","name":"flying_mode"}],"relations":{"functions":["GetFlyingMode"]}},{"authority":"server","name":"SetFootstepVolumeMultiplier","description":"Set the Footstep Volume multiplier","parameters":[{"type":"float","name":"volume_multiplier"}]},{"authority":"server","name":"SetFOVMultiplier","description":"Sets the Field of View multiplier","parameters":[{"type":"float","name":"multiplier"}]},{"authority":"server","name":"SetGaitMode","description":"Sets the Gait Mode","parameters":[{"type":"GaitMode","name":"gait_mode"}],"relations":{"functions":["GetGaitMode"]}},{"authority":"server","name":"SetHighFallingTime","description":"Sets time to transition to HighFalling state","description_long":"Sets time elapsed until automatically transition to HighFalling state (from SmallFalling) in seconds<br/><br/>Set it to -1 to never enter HighFalling time and consequently do not ragdoll when falling","parameters":[{"type":"float","name":"time","description":"Default is 1 second"}]},{"authority":"server","name":"SetHitReactionEnabled","description":"Sets if the character will react to damage by applying small dynamic ragdoll effect to local bones damaged","parameters":[{"type":"boolean","name":"is_enabled"}]},{"authority":"server","name":"SetImpactDamageTaken","description":"Set the Impact Damage taken when being roamed by things","description_long":"Set the Impact Damage taken when being roamed by things.<br/><br/>Setting to 0 will make the Character to do not take damage or enter ragdoll mode","parameters":[{"type":"integer","name":"impact_damage","description":"Default is 10"}],"relations":{"functions":["GetImpactDamageTaken"]}},{"authority":"server","name":"SetInputEnabled","description":"Enables/Disables Character\'s Input","parameters":[{"type":"boolean","name":"is_enabled"}],"relations":{"functions":["IsInputEnabled"]}},{"authority":"server","name":"SetInvulnerable","description":"Sets if the Character can receive any damage","parameters":[{"type":"boolean","name":"is_invulnerable"}],"relations":{"functions":["IsInvulnerable"]}},{"authority":"server","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset"}]},{"authority":"both","name":"SetMorphTarget","description":"Set Morph Target with Name and Value","parameters":[{"type":"string","name":"name","description":"Morph Target Name"},{"type":"float","name":"value"}],"relations":{"functions":["GetMorphTarget","ClearMorphTargets","GetAllMorphTargetNames"]}},{"authority":"server","name":"SetPainSound","description":"Changes the Pain sound when Character takes damage","parameters":[{"type":"SoundPath","name":"sound_asset"}]},{"authority":"server","name":"SetParachuteTexture","description":"Changes the Parachute Texture","parameters":[{"type":"ImagePath","name":"texture"}]},{"authority":"both","name":"SetPhysicalAnimationSettings","description":"Applies the physical animation settings to the body given","parameters":[{"type":"string","name":"bone","description":"The body we will be driving"},{"type":"boolean","name":"include_self","description":"Whether to modify the given body"},{"type":"boolean","name":"is_local_simulation","description":"Whether the drive targets are in world space or local"},{"type":"float","name":"orientation_strength","default":"0","description":"The strength used to correct orientation error"},{"type":"float","name":"angular_velocity_strength","default":"0","description":"The strength used to correct angular velocity error"},{"type":"float","name":"position_strength","default":"0","description":"The strength used to correct linear position error. Only used for non-local simulation"},{"type":"float","name":"velocity_strength","default":"0","description":"The strength used to correct linear velocity error. Only used for non-local simulation"},{"type":"float","name":"max_linear_force","default":"0","description":"The max force used to correct linear errors"},{"type":"float","name":"max_angular_force","default":"0","description":"The max force used to correct angular errors"}]},{"authority":"server","name":"SetPunchDamage","description":"Set the Punch Damage this Character will apply on others","parameters":[{"type":"integer","name":"punch_damage","description":"Default is 15"}],"relations":{"functions":["GetPunchDamage"]}},{"authority":"server","name":"SetRadialDamageToRagdoll","description":"Set the minimum radial damage (e.g. explosions) taken to enter in ragdoll mode","description_long":"Set the minimum radial damage taken (e.g. explosions) to enter in ragdoll mode.<br/><br/>Setting to -1 will make the Character to do not enter ragdoll mode when getting radial damage","parameters":[{"type":"integer","name":"damage","description":"Default is 50"}]},{"authority":"server","name":"SetRagdollMode","description":"Sets Character Ragdoll Mode","parameters":[{"type":"boolean","name":"ragdoll_enabled"}]},{"authority":"server","name":"SetSimulatePhysics","description":"Sets the Character Capsule to simulate physics","parameters":[{"type":"boolean","name":"simulate_physics"}]},{"authority":"server","name":"SetSpeedMultiplier","description":"Sets all speed multiplier","parameters":[{"type":"float","name":"speed_multiplier","description":"1 is normal"}],"relations":{"functions":["GetSpeedMultiplier"]}},{"authority":"server","name":"SetStanceMode","description":"Sets the Stance Mode","parameters":[{"type":"StanceMode","name":"stance_mode"}],"relations":{"functions":["GetStanceMode"]}},{"authority":"server","name":"SetTeam","description":"Sets a Team which will disable damaging same Team Members","parameters":[{"type":"integer","name":"team","description":"0 is neutral and default"}],"relations":{"functions":["GetTeam"]}},{"authority":"network-authority","name":"SetViewMode","description":"Sets the View Mode","parameters":[{"type":"ViewMode","name":"view_mode"}],"relations":{"functions":["GetViewMode"]}},{"authority":"network-authority","name":"SetWeaponAimMode","description":"Sets the Weapon\'s Aim Mode","parameters":[{"type":"AimMode","name":"aim_mode"}],"relations":{"functions":["GetWeaponAimMode"]}},{"authority":"server","name":"UnGrabProp","description":"UnGrabs/Drops the Prop the Character is holding"}],"events":[{"name":"Attack","authority":"both","description":"Triggered when the Character effectively attacks with a Melee","arguments":[{"name":"self","type":"Character"},{"name":"melee","type":"Melee"}]},{"authority":"server","name":"AttemptEnterVehicle","description":"Triggered when a Character attempts to enter a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat_index"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}],"relations":{"functions":["GetVehicle","EnterVehicle"],"events":["EnterVehicle"]}},{"authority":"server","name":"AttemptLeaveVehicle","description":"Triggered when this Character attempts to leave a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}],"relations":{"functions":["LeaveVehicle"],"events":["LeaveVehicle"]}},{"authority":"both","name":"AttemptReload","description":"Triggered when this Character attempts to reload","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"Drop","description":"When Character drops the currently picked up Pickable","arguments":[{"type":"Character","name":"self"},{"type":"Pickable","name":"object"},{"type":"boolean","name":"triggered_by_player"}]},{"authority":"both","name":"EnterVehicle","description":"When Character enters a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat_index"}],"relations":{"functions":["GetVehicle","EnterVehicle"],"events":["AttemptEnterVehicle"]}},{"authority":"both-net-authority-first","name":"FallingModeChange","description":"Called when FallingMode changes","arguments":[{"type":"Character","name":"self"},{"type":"FallingMode","name":"old_state"},{"type":"FallingMode","name":"new_state"}]},{"authority":"both","name":"Fire","description":"When Character fires a Weapon","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"}]},{"authority":"both-net-authority-first","name":"GaitModeChange","description":"Called when GaitMode changes","arguments":[{"type":"Character","name":"self"},{"type":"GaitMode","name":"old_state"},{"type":"GaitMode","name":"new_state"}]},{"authority":"both","name":"GrabProp","description":"When Character grabs up a Prop","arguments":[{"type":"Character","name":"self"},{"type":"Prop","name":"prop"}]},{"authority":"both","name":"Highlight","description":"When Character highlights/looks at a Prop or a Pickable","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"is_highlighted","description":"Whether the object is being highlighted or not"},{"type":"Prop|Pickable","name":"object"}]},{"authority":"server","name":"Interact","description":"Triggered when a Character interacts with a Prop or Pickable","arguments":[{"type":"Character","name":"self"},{"type":"Prop|Pickable","name":"object"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"LeaveVehicle","description":"When Character leaves a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"}],"relations":{"functions":["LeaveVehicle"],"events":["AttemptLeaveVehicle"]}},{"authority":"both","name":"PickUp","description":"When Character picks up anything","arguments":[{"type":"Character","name":"self"},{"type":"Pickable","name":"object"}],"relations":{"functions":["GetPicked"]}},{"authority":"both","name":"PullUse","description":"Triggered when a Character presses the use button for a Pickable (i.e. clicks left mouse button with this equipped)","arguments":[{"type":"Character","name":"self","description":"The Character that used it"},{"type":"Pickable","name":"pickable","description":"The Pickable which has just been used"}]},{"authority":"both","name":"Punch","description":"When Character punches","arguments":[{"type":"Character","name":"self"}]},{"authority":"both","name":"RagdollModeChange","description":"When Character enters or leaves ragdoll","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"old_state"},{"type":"boolean","name":"new_state"}]},{"authority":"both","name":"ReleaseUse","description":"Triggered when a Character releases the use button for a Pickable (i.e. releases left mouse button with this equipped)","arguments":[{"type":"Character","name":"self","description":"The Character that stopped using it"},{"type":"Pickable","name":"pickable","description":"The Pickable which has just stopped being used"}]},{"authority":"both","name":"Reload","description":"When Character reloads a weapon","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"},{"type":"integer","name":"ammo_to_reload"}]},{"authority":"both-net-authority-first","name":"StanceModeChange","description":"Called when StanceMode changes","arguments":[{"type":"Character","name":"self"},{"type":"StanceMode","name":"old_state"},{"type":"StanceMode","name":"new_state"}]},{"authority":"both-net-authority-first","name":"SwimmingModeChange","description":"Called when Swimming Mode changes","arguments":[{"type":"Character","name":"self"},{"type":"SwimmingMode","name":"old_state"},{"type":"SwimmingMode","name":"new_state"}]},{"authority":"both","name":"UnGrabProp","description":"When Character drops a Prop","arguments":[{"type":"Character","name":"self"},{"type":"Prop","name":"prop"}]},{"authority":"both-net-authority-first","name":"ViewModeChange","description":"When Character changes it\'s View Mode","arguments":[{"type":"Character","name":"self"},{"type":"ViewMode","name":"old_state"},{"type":"ViewMode","name":"new_state"}]},{"authority":"both-net-authority-first","name":"WeaponAimModeChange","description":"Called when Weapon Aim Mode changes","arguments":[{"type":"Character","name":"self"},{"type":"AimMode","name":"old_state"},{"type":"AimMode","name":"new_state"}]}]}'),Me=JSON.parse('{"name":"CharacterSimple","description":"CharacterSimple is a simpler Character implementation with basic Movement implementation. Aimed for custom NPCs or basic Pawns.","authority":"both","inheritance":["Entity","Actor","Pawn","Paintable","Damageable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh"},{"type":"BlueprintPath","name":"custom_animation_blueprint","default":""},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"name":"CallAnimationBlueprintEvent","authority":"both","return":[{"type":"any...","description":"the function return values"}],"description":"Calls an Animation Blueprint Event or Function","description_long":"Calls an Animation Blueprint Event or Function<br/>Returns all Function return values on <strong>Client Side</strong>","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"authority":"authority","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":""},{"type":"boolean","name":"loop_indefinitely","default":"false"},{"type":"float","name":"blend_in_time","default":"0.25"},{"type":"float","name":"blend_out_time","default":"0.25"},{"type":"float","name":"play_rate","default":"1.0"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}]},{"authority":"authority","name":"SetAirControl","description":"Sets the amount of movement control allowed when it is in air","parameters":[{"type":"float","name":"air_control","default":"0.2","description":"When falling, amount of lateral movement control available to the character. 0 = no control, 1 = full control at max speed of MaxWalkSpeed"},{"type":"float","name":"boost_multiplier","default":"512","description":"When falling, multiplier applied to air_control when lateral velocity is less than boost_velocity_threshold. Setting this to zero will disable air control boosting. Final result is clamped at 1"},{"type":"float","name":"boost_velocity_threshold","default":"25","description":"When falling, if lateral velocity magnitude is less than this value, air_control is multiplied by boost_multiplier. Setting this to zero will disable air control boosting"}]},{"authority":"authority","name":"SetAnimationBlueprint","description":"Sets the Animation Blueprint of this Character","parameters":[{"type":"BlueprintPath","name":"custom_animation_blueprint"}]},{"authority":"authority","name":"SetMaxAcceleration","description":"Sets the max acceleration","parameters":[{"type":"integer","name":"acceleration","description":"Default is 2048"}]},{"authority":"authority","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh_asset"},{"type":"boolean","name":"adjust_capsule_size","description":"Auto adjust the capsule size based on the Mesh size"}]},{"authority":"authority","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh"},{"type":"boolean","name":"adjust_capsule_size","description":"Auto adjust the capsule size based on the Mesh size"}]},{"authority":"authority","name":"SetPawnSettings","description":"Sets the Pawn Settings of this Character","parameters":[{"type":"boolean","name":"use_controller_rotation_pitch"},{"type":"boolean","name":"use_controller_rotation_yaw"},{"type":"boolean","name":"use_controller_rotation_roll"}]},{"authority":"authority","name":"SetRotationSettings","description":"Sets the Rotation Settings of this Character","parameters":[{"type":"Rotator","name":"rotation_rate"},{"type":"boolean","name":"use_controller_desired_rotation"},{"type":"boolean","name":"orient_rotation_to_movement"}]},{"authority":"authority","name":"SetSpeedSettings","description":"Sets the Speed Settings of this Character","parameters":[{"type":"integer","name":"max_walk_speed"},{"type":"integer","name":"max_walk_speed_crouched"}]},{"authority":"both","name":"SetSpringArmSettings","description":"Sets the Spring Arm Settings of this Character","parameters":[{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 144)"},{"type":"float","name":"target_arm_length","default":"300.0"},{"type":"Vector","name":"socket_offset","default":"Vector(0, 0, 0)"},{"type":"boolean","name":"enable_camera_lag","default":"true"},{"type":"float","name":"camera_lag_speed","default":"15.0"},{"type":"float","name":"camera_lag_max_distance","default":"1.0"}]}]}'),De=JSON.parse('{"name":"Database","description":"The Database entity provides programmers a way to access SQL databases easily through scripting.","authority":"server","constructors":[{"name":"Default Constructor","parameters":[{"type":"DatabaseEngine","name":"database_engine","description":"Database Engine"},{"type":"string","name":"connection_string","description":"<a href=\'#connection-string\'>Connection String</a> used to create and connect to the database"},{"type":"integer","name":"pool_size","default":"10","description":"Size of the connection pool when calling several queries simultaneously"}]}],"functions":[{"name":"Close","authority":"server","description":"Closes the Database"},{"name":"Execute","authority":"server","description":"Execute a query synchronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"return":[{"type":"integer","description":"affected rows"},{"type":"string","description":"error (if any)"}],"examples":[{"title":"Inserts into database (SQLite)","content":"local affected_rows = my_database:Execute(\\"INSERT INTO MyTable VALUES (:0, \':1\')\\", 123, \\"MyValue\\")"}]},{"name":"ExecuteAsync","authority":"server","description":"Execute a query asynchronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"function","name":"callback","default":"nil","description":"Callback","function_parameters":[{"name":"rows_affected","type":"integer","description":"Amount of rows affected"},{"name":"error","type":"string?","description":"Error message, if got error"}]},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}]},{"name":"Select","authority":"server","description":"Selects a query synchronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"return":[{"type":"table[]","description":"rows fetched"},{"type":"string","description":"error (if any)"}],"examples":[{"title":"Selects from a table (SQLite)","content":"local rows = my_database:Select(\\"SELECT * FROM MyTable WHERE name = :0 AND title = :1\\", \\"Val\\", \\"AnotherVal\\")"}]},{"name":"SelectAsync","authority":"server","description":"Execute a select query asynchronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"function","name":"callback","default":"nil","description":"Callback","function_parameters":[{"name":"rows","type":"table[]","description":"All rows returned by the query"},{"name":"error","type":"string?","description":"Error message, if got error"}]},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"examples":[{"title":"Selects from a table asynchronously (SQLite)","content":"my_database:SelectAsync(\\"SELECT * FROM MyTable WHERE name = :0 AND title = :1\\", function(rows)\\n\\tConsole.log(NanosTable.Dump(rows))\\nend, \\"Val\\", \\"AnotherVal\\")"}]}]}'),Re=JSON.parse('{"name":"Decal","description":"Decals are Materials that are projected onto meshes in your level, including Static Meshes and Skeletal Meshes.","authority":"client","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"MaterialPath","name":"material_asset","description":"Material Asset"},{"type":"Vector","name":"size","default":"Vector(128, 256, 256)","description":"Size of the Decal"},{"type":"float","name":"lifespan","default":"60","description":"Time until automatically destroyed in seconds"},{"type":"float","name":"fade_screen_size","default":"0.01","description":"Size percentage in screen to fade out"}]}]}'),Ve=JSON.parse('{"name":"File","description":"A File represents an entry to a system file.","authority":"both","constructors":[{"name":"Default Constructor","parameters":[{"type":"string","name":"file_path","description":"If on Server, this is the Path relative to server executable. Otherwise if on Client, this is the Path relative to Client\'s \'Packages/.transient/\' folder"},{"type":"boolean","name":"truncate","default":"false","description":"Whether or not to clear the file upon opening it"}]}],"functions":[{"name":"Close","authority":"both","description":"Closes the file and destroys the entity"},{"name":"Flush","authority":"both","description":"Flushes content to the file"},{"return":[{"type":"boolean","description":"if last operation failed"}],"authority":"both","name":"HasFailed","description":"Checks if the last operation has Failed"},{"return":[{"type":"boolean","description":"if status is Bad"}],"authority":"both","name":"IsBad","description":"Checks if the file status is Bad"},{"return":[{"type":"boolean","description":"if is EOF"}],"authority":"both","name":"IsEOF","description":"Checks if the file status is End of File"},{"return":[{"type":"boolean","description":"if status is Good"}],"authority":"both","name":"IsGood","description":"Checks if the file status is Good"},{"return":[{"type":"string","description":"file data"}],"authority":"both","name":"Read","description":"Reads characters from the File and returns it. Also moves the file pointer to the latest read position. Pass 0 to read the whole file","parameters":[{"type":"integer","name":"length","default":"0","description":"Length to be read from file, leave it empty to read the whole file"}]},{"authority":"both","name":"ReadAsync","description":"Reads characters from the File asynchronously.","parameters":[{"type":"integer","name":"length","description":"Length to be read from file, leave it empty to read the whole file"},{"type":"function","name":"callback","description":"Callback","function_parameters":[{"name":"file_content","type":"string","description":"File content"}]}]},{"return":[{"type":"table","description":"parsed table"}],"authority":"both","name":"ReadJSON","description":"Reads the whole file as a JSON and returns it."},{"authority":"both","name":"ReadJSONAsync","description":"Reads the whole file as a JSON and returns it asynchronously.","parameters":[{"type":"function","name":"callback","description":"Callback with the file read","function_parameters":[{"name":"file_content","type":"table","description":"File content in table format"}]}]},{"return":[{"type":"string","description":"file line data"}],"authority":"both","name":"ReadLine","description":"Reads and returns the next file line"},{"name":"Seek","authority":"both","description":"Sets the file pointer to a specific position","parameters":[{"type":"integer","name":"position","description":"Position to offset the file pointer"}]},{"return":[{"type":"integer","description":"file size"}],"authority":"both","name":"Size","description":"Returns the size of the file"},{"name":"Skip","authority":"both","description":"Skips n (amount) positions from the current file pointer position","parameters":[{"type":"integer","name":"amount","description":"Amount to offset the file pointer"}]},{"return":[{"type":"integer","description":"current file pointer position"}],"authority":"both","name":"Tell","description":"Returns the current file pointer position"},{"name":"Write","authority":"both","description":"Writes the Data at the current position of the file","parameters":[{"type":"string","name":"data","description":"Data to write to the file"}]}],"static_functions":[{"type":"boolean","name":"CreateDirectory","return":[{"type":"boolean","description":"if succeeded"}],"description":"Creates a Directory (for every folder passed)","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"Exists","return":[{"type":"boolean","description":"if exists"}],"description":"Verifies if a entry exists in the file system","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"name":"GetDirectories","description":"Gets a list of all directories given a path","description_long":"Gets a list of all directories given a path, optionally with filters","authority":"both","parameters":[{"type":"string","name":"path_filter","default":"","description":"Path filter"},{"type":"integer","name":"max_depth","default":"-1","description":"The maximum depth to go further in the folders while searching. Pass -1 for maximum depth"}],"return":[{"type":"string[]","description":"List of directories"}]},{"name":"GetFiles","description":"Gets a list of all files in a directory","description_long":"Gets a list of all files in a directory, optionally with filters","authority":"both","parameters":[{"type":"string|table","name":"path_filter","default":"","description":"Path filter"},{"type":"string","name":"extension_filter","default":"","description":"E.g.: <code>.lua</code>"},{"type":"integer","name":"max_depth","default":"-1","description":"The maximum depth to go further in the folders while searching. Pass -1 for maximum depth"}],"return":[{"type":"string[]","description":"List of files"}]},{"name":"GetFullPath","return":[{"type":"string","description":"the full path parsed"}],"description":"Gets the full path given a relative path based on the current side (client or server)","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file or directory"}]},{"name":"IsDirectory","return":[{"type":"boolean","description":"if is a directory"}],"description":"Checks if a path is a directory","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"IsRegularFile","return":[{"type":"boolean","description":"if is a regular file"}],"description":"Checks if a path is a file","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file"}]},{"name":"Remove","return":[{"type":"integer","description":"amount of files deleted"}],"description":"Deletes a folder or file","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"type":"integer","name":"Time","return":[{"type":"integer","description":"the last update time in unix time"}],"description":"Returns when a file was last modified in Unix time","authority":"both","parameters":[{"type":"string","name":"path","description":"Path to file"}]}]}'),Ge=JSON.parse('{"name":"Gizmo","description":"A tool to transform objects at runtime.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[]}],"functions":[{"name":"Activate","description":"Enable the interaction","authority":"client","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"Vector","name":"scale"}]},{"name":"Deactivate","description":"Disable the interaction","authority":"client"},{"name":"IsInteracting","authority":"client","description":"Returns if it\'s currently interacting","return":[{"type":"boolean","name":"is_interacting"}]},{"name":"PressPointer","authority":"client","description":"Triggers the press pointer event on it"},{"name":"ReleasePointer","authority":"client","description":"Triggers the release pointer event on it"},{"name":"SetAlignSpace","authority":"client","parameters":[{"type":"GizmoAlignSpace","name":"align_space"}]},{"name":"SetSnapSettings","authority":"client","parameters":[{"type":"float","name":"location_grid_size"},{"type":"float","name":"rotation_grid_size"},{"type":"float","name":"scale_grid_size"}]},{"name":"SetTransformMode","authority":"client","parameters":[{"type":"GizmoTransformMode","name":"transform_mode"},{"type":"boolean","name":"combine_translate_rotate"}]}],"events":[{"name":"Transform","authority":"client","description":"Triggered when the Gizmo has it\'s transform updated","arguments":[{"name":"self","type":"Gizmo","description":"The Gizmo itself"},{"name":"location","type":"Vector","description":"New Gizmo location"},{"name":"rotation","type":"Rotator","description":"New Gizmo rotation"},{"name":"scale","type":"Vector","description":"New Gizmo scale"}]}]}'),Ie=JSON.parse('{"name":"Grenade","description":"Grenades are Pickables which Characters can grab and throw. It explodes after X seconds after thrown, causing damage around.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":"nanos-world::SM_Grenade_G67"},{"type":"ParticlePath","name":"explosion_particles","default":"nanos-world::P_Grenade_Special"},{"type":"SoundPath","name":"explosion_sound","default":"nanos-world::A_Explosion_Large"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"authority":"server","name":"Explode","description":"Forces this grenade to Explode","relations":{"events":["Explode"]}},{"authority":"both","name":"GetBaseDamage","description":"Damage at Inner Radius","return":[{"type":"float","name":"base_damage"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetDamageFalloff","description":"Radius which BaseDamage will apply proportionally","return":[{"type":"float","name":"damage_falloff"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetDamageInnerRadius","description":"Radius which MinimumDamage will apply","return":[{"type":"float","name":"damage_inner_radius"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetDamageOuterRadius","description":"Radius which BaseDamage will apply","return":[{"type":"float","name":"damage_outer_radius"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetMinimumDamage","description":"Damage at Outer Radius","return":[{"type":"float","name":"minimum_damage"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetThrowForce","description":"Impulse applied when throwing","return":[{"type":"float","name":"throw_force"}],"relations":{"functions":["SetThrowForce"]}},{"authority":"both","name":"GetTimeToExplode","description":"Time until Explosion","return":[{"type":"float","name":"time"}],"relations":{"functions":["SetTimeToExplode"]}},{"authority":"server","name":"SetDamage","description":"Sets Damage parameters of this Grenade","parameters":[{"type":"integer","name":"base_damage","default":"90","description":"Max damage when inner radius"},{"type":"integer","name":"minimum_damage","default":"0","description":"Min damage when outer radius"},{"type":"integer","name":"damage_inner_radius","default":"200","description":"Radius which damage will be 100%"},{"type":"integer","name":"damage_outer_radius","default":"1000","description":"Radius which damage will be interpoled through falloff"},{"type":"float","name":"damage_falloff","default":"1","description":"Lerp function between Max and Min damage"}],"relations":{"functions":["GetBaseDamage","GetDamageFalloff","GetDamageInnerRadius","GetDamageOuterRadius","GetMinimumDamage"]}},{"authority":"server","name":"SetThrowForce","description":"Set Impulse applied when throwing","parameters":[{"type":"integer","name":"throw_force"}],"relations":{"functions":["GetThrowForce"]}},{"authority":"server","name":"SetTimeToExplode","description":"Set Time until Explosion after thrown","parameters":[{"type":"float","name":"time","description":"Time in seconds"}],"relations":{"functions":["GetTimeToExplode"]}}],"events":[{"name":"Explode","authority":"both","description":"Triggered when the grenade has exploded","arguments":[{"name":"self","type":"Grenade","description":"The grenade which exploded"}],"relations":{"functions":["Explode"]}},{"name":"Throw","authority":"both","description":"Triggered when the grenade has been thrown","arguments":[{"name":"self","type":"Grenade","description":"The grenade which exploded"},{"name":"handler","type":"Character","description":"The Character which has thrown it"}]}]}'),Ee=JSON.parse('{"name":"Light","description":"A Light represents a Lighting source.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Relevant only for Rect and Spot LightTypes"},{"type":"Color","name":"color","default":"Color(1, 1, 1)"},{"type":"LightType","name":"light_type","default":"LightType.Point"},{"type":"float","name":"intensity","default":"30"},{"type":"float","name":"attenuation_radius","default":"250"},{"type":"float","name":"cone_angle","default":"44","description":"Relevant only for Spot LightType"},{"type":"float","name":"inner_cone_angle_percent","default":"0","description":"Inner Cone Angle Percent (Relevant only for Spot LightType) (0-1)"},{"type":"float","name":"max_daw_distance","default":"5000","description":"Max Draw Distance (Good for performance) - 0 for infinite"},{"type":"boolean","name":"use_inverse_squared_falloff","default":"true","description":"Whether to use physically based inverse squared distance falloff, where Attenuation Radius is only clamping the light\'s contribution. (Spot and Point types only)"},{"type":"boolean","name":"cast_shadows","default":"true"},{"type":"boolean","name":"visible","default":"true"}]}],"functions":[{"name":"GetAttenuationRadius","authority":"both","return":[{"type":"float","name":"attenuation_radius"}],"relations":{"functions":["SetAttenuationRadius"]}},{"name":"GetCastShadows","authority":"both","return":[{"type":"boolean","name":"is_shadows_enabled"}],"relations":{"functions":["SetCastShadows"]}},{"name":"GetColor","authority":"both","return":[{"type":"Color","name":"color"}],"relations":{"functions":["SetColor"]}},{"name":"GetIntensity","authority":"both","return":[{"type":"float","name":"intensity"}],"relations":{"functions":["SetIntensity"]}},{"name":"SetAttenuationRadius","authority":"both","parameters":[{"type":"float","name":"attenuation_radius"}],"relations":{"functions":["GetAttenuationRadius"]}},{"name":"SetCastShadows","authority":"both","parameters":[{"type":"boolean","name":"is_shadows_enabled"}],"relations":{"functions":["GetCastShadows"]}},{"name":"SetColor","description":"Sets the light color","authority":"both","parameters":[{"type":"Color","name":"color","description":"The light color"}],"relations":{"functions":["GetColor"]}},{"name":"SetIntensity","authority":"both","parameters":[{"type":"float","name":"intensity"}],"relations":{"functions":["GetIntensity"]}},{"name":"SetTextureLightProfile","description":"Sets the light Texture Profile","authority":"both","parameters":[{"type":"LightProfile","name":"light_profile","description":"The Light Profile to use"}],"relations":{"etc":[{"label":"\ud83d\udca1 Light Profiles","url":"#light-profiles"}]}}]}'),We=JSON.parse('{"name":"Melee","description":"A Melee represents an Entity which can be Pickable by a Character and can be used to melee attack, Charactes can hold it with hands with pre-defined handling modes.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"HandlingMode","name":"handling_mode","default":"HandlingMode.Torch"},{"type":"MaterialPath","name":"crosshair_material","default":""},{"type":"boolean","name":"can_use","default":"true"}]}],"functions":[{"authority":"server","name":"AddAnimationCharacterUse","description":"Sets an Animation when attacking","description_long":"Sets an Animation when attacking<br/><br/>You can add more than one animation, which will be selected randomly when attacking","parameters":[{"type":"AnimationPath","name":"asset_path","description":"The Animation used when attacking"},{"type":"float","name":"play_rate","description":"The Animation Play Rate"},{"type":"AnimationSlotType","name":"slot_Type","description":"Whether to play it on upper body or full body"}]},{"authority":"server","name":"ClearAnimationsCharacterUse","description":"Clears the Character Attack Animation list"},{"authority":"both","name":"GetAnimationsCharacterUse","description":"Gets the Animations when Character uses it","return":[{"type":"AnimationPath[]"}]},{"authority":"both","name":"GetBaseDamage","description":"Gets the Base Damage","return":[{"type":"integer","name":"damage"}],"relations":{"functions":["SetBaseDamage"]}},{"authority":"both","name":"GetCooldown","description":"Gets the Cooldown between usages","return":[{"type":"float","name":"cooldown"}],"relations":{"functions":["SetCooldown"]}},{"authority":"both","name":"GetSoundUse","description":"Gets the Sound when Character uses it","return":[{"type":"SoundPath","name":"asset_path"}],"relations":{"functions":["SetSoundUse"]}},{"authority":"server","name":"SetBaseDamage","description":"Sets the Base Damage","parameters":[{"type":"integer","name":"damage","default":"","description":"The Base Damage value"}],"relations":{"functions":["GetBaseDamage"]}},{"authority":"both","name":"SetCooldown","description":"Sets the cooldown between attacking","parameters":[{"type":"float","name":"cooldown"}],"relations":{"functions":["GetCooldown"]}},{"authority":"server","name":"SetDamageSettings","description":"Sets the times when to start applying damage and when to end","description_long":"Sets the times when to start applying damage and when to end. During this time the collision of the melee will be enabled and the damage will be applied if it hits something","parameters":[{"type":"float","name":"damage_start_time","description":"The initial time to start applying damage"},{"type":"float","name":"damage_duration_time","description":"The duration time to stop applying damage"}]},{"authority":"both","name":"SetImpactSound","description":"Sets the Sound when hitting something","description_long":"Sets the Sound when hitting something<br/><br/>Note: Surfaces <b>Water</b> and <b>Flesh</b> already have default sounds and must be explicitly set to override","parameters":[{"type":"SurfaceType","name":"surface_type","description":"The surface to apply the sound. Use <code>SurfaceType.Default</code> to be the default to all hits"},{"type":"SoundPath","name":"asset_path","description":"The Sound used when attacking"},{"type":"float","name":"volume"},{"type":"float","name":"pitch"}]},{"authority":"both","name":"SetSoundUse","description":"Sets the Sound when attacking","parameters":[{"type":"SoundPath","name":"asset_path","description":"The Sound used when attacking"}],"relations":{"functions":["GetSoundUse"]}}],"events":[{"name":"Attack","authority":"both","description":"Triggered when the Character effectively attacks with this Melee","arguments":[{"name":"self","type":"Melee"},{"name":"handler","type":"Character"}]}]}'),Ne=JSON.parse('{"name":"Particle","description":"Class to spawn Particle Systems used to create effects in the world.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"ParticlePath","name":"asset"},{"type":"boolean","name":"auto_destroy","default":"true"},{"type":"boolean","name":"auto_activate","default":"true"}]}],"functions":[{"name":"Activate","description":"Activates the Emitter","authority":"both","parameters":[{"type":"boolean","name":"should_reset","description":"If should reset"}],"relations":{"functions":["Deactivate","IsActive"]}},{"name":"Deactivate","description":"Deactivate the Emitter","authority":"both","relations":{"functions":["Activate","IsActive"]}},{"name":"IsActive","description":"Returns if this Particle is active","authority":"both","return":[{"type":"boolean","name":"is_active"}],"relations":{"functions":["Activate","Deactivate"]}},{"name":"SetParameterBool","description":"Sets a boolean parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"boolean","name":"value","description":"The boolean value"}]},{"name":"SetParameterColor","description":"Sets a Color parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Color","name":"value","description":"The Color value"}]},{"name":"SetParameterFloat","description":"Sets a float parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"float","name":"value","description":"The float value"}]},{"name":"SetParameterInt","description":"Sets an integer parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"integer","name":"value","description":"The int value"}]},{"name":"SetParameterMaterial","description":"Sets a Material parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"MaterialPath","name":"value","description":"The Material value"}]},{"name":"SetParameterMaterialFromCanvas","description":"Sets a Material from a Canvas parameter in this Particle System","description_long":"This will create a Material and set this Canvas as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Canvas","name":"value","description":"The Canvas value"}]},{"name":"SetParameterMaterialFromTexture","description":"Sets a Material from a Texture parameter in this Particle System","description_long":"This will create a Material and set this Texture as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"ImagePath","name":"value","description":"The Texture value"}]},{"name":"SetParameterMaterialFromWebUI","description":"Sets a Material from a Canvas parameter in this Particle System","description_long":"This will create a Material and set this WebUI as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"WebUI","name":"value","description":"The WebUI value"}]},{"name":"SetParameterVector","description":"Sets a Vector parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Vector","name":"value","description":"The Vector value"}]}]}'),Be=JSON.parse('{"name":"Player","description":"Players are Entities that represents the individual behind the mouse and keyboard. Players are spawned automatically when connected to the server.","inheritance":["Entity"],"functions":[{"authority":"both","name":"AttachCameraTo","description":"Attaches the Player`s Camera to an Actor","parameters":[{"name":"actor","type":"Actor"},{"name":"socket_offset","type":"Vector"},{"name":"blend_speed","type":"float"}]},{"authority":"server","name":"Ban","description":"Bans the player from the server","parameters":[{"name":"reason","type":"string"}]},{"authority":"server","name":"Connect","description":"Redirects the player to another server","parameters":[{"name":"IP","type":"string"},{"name":"password","type":"string","default":"","description":"Server password"}]},{"authority":"both","name":"GetAccountIconURL","description":"Return a URL which can be used through WebUI and Widgets to display the Player\'s Steam Avatar (64x64)","return":[{"type":"string","name":"account_icon_url"}]},{"authority":"both","name":"GetAccountID","return":[{"type":"string","name":"account_id"}]},{"authority":"both","name":"GetAccountName","return":[{"type":"string","name":"account_name"}]},{"authority":"client","name":"GetCameraArmLength","parameters":[{"name":"return_base","type":"boolean","default":"false","description":"Whether to return the current (false) or base (true) value. The base is the same value set by SetCameraArmLength(). Use base if you want to get the original value set by SetCameraArmLength() and not the current (interpolated) value."}],"return":[{"type":"float","name":"length"}],"relations":{"functions":["SetCameraArmLength"]}},{"authority":"client","name":"GetCameraLocation","return":[{"type":"Vector","name":"location"}],"relations":{"functions":["SetCameraLocation"]}},{"authority":"client","name":"GetCameraRotation","return":[{"type":"Rotator","name":"rotation"}],"relations":{"functions":["SetCameraRotation"]}},{"authority":"both","name":"GetControlledCharacter","return":[{"type":"Character?","name":"controlled_character"}]},{"name":"GetDimension","description":"Gets this Player\'s dimension","authority":"both","return":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"],"functions":["SetDimension"]}},{"authority":"server","name":"GetIP","return":[{"type":"string","name":"ip"}]},{"authority":"both","name":"GetName","return":[{"type":"string","name":"player_name"}],"relations":{"functions":["SetName"]}},{"authority":"both","name":"GetPing","return":[{"type":"integer","name":"ping"}]},{"authority":"both","name":"GetSteamID","return":[{"type":"string","name":"steam_id"}]},{"authority":"both","name":"GetVOIPChannel","return":[{"name":"channel","type":"integer"}],"relations":{"functions":["SetVOIPChannel"]}},{"authority":"both","name":"GetVOIPSetting","return":[{"name":"voip_setting","type":"VOIPSetting"}],"relations":{"functions":["SetVOIPSetting"]}},{"authority":"client","name":"IsHost","return":[{"type":"boolean","name":"is_host"}]},{"authority":"client","name":"IsLocalPlayer","return":[{"type":"boolean","name":"is_local_player"}]},{"authority":"server","name":"Kick","description":"Kicks the player from the server","parameters":[{"name":"reason","type":"string"}]},{"authority":"server","name":"Possess","description":"Makes a Player to possess and control a Pawn","parameters":[{"name":"new_pawn","type":"Pawn"},{"name":"blend_time","type":"float","default":"0"},{"name":"exp","type":"float","default":"0"}]},{"authority":"both","name":"ResetCamera","description":"Resets the Camera to default state (Unspectate and Detaches)"},{"authority":"both","name":"RotateCameraTo","description":"Smoothly moves the Player\'s Camera Rotation","parameters":[{"name":"rotation","type":"Rotator"},{"name":"time","type":"float"},{"name":"exp","type":"float","default":"0","description":"Exponential used to smooth interp, use 0 for linear movement"}]},{"authority":"both","name":"SetCameraArmLength","description":"Sets the Player\'s Camera Arm Length (Spring Arm length)","parameters":[{"name":"length","type":"float"},{"name":"force","type":"boolean","description":"Whether to bypass interpolation and set the target to its value directly"}],"relations":{"functions":["GetCameraArmLength"]}},{"authority":"both","name":"SetCameraFOV","description":"Sets the Player\'s Camera FOV (if not possessing a Character)","parameters":[{"name":"fov","type":"float","default":"90","description":"Value must be between 5 and 170. Pass empty to reset to default."}]},{"authority":"both","name":"SetCameraLocation","description":"Sets the Player\'s Camera Location (only works if not possessing any Character)","parameters":[{"name":"location","type":"Vector"}],"relations":{"functions":["GetCameraLocation"]}},{"authority":"both","name":"SetCameraRotation","description":"Sets the Player\'s Camera Rotation","parameters":[{"name":"rotation","type":"Rotator"}],"relations":{"functions":["GetCameraRotation"]}},{"authority":"both","name":"SetCameraSocketOffset","description":"Sets the Player\'s Camera Socket Offset (Spring Arm Offset)","parameters":[{"name":"socket_offset","type":"Vector"}]},{"authority":"both","name":"SetCameraSpeedSettings","description":"Sets the Player\'s Camera Speed Settings (if not possessing a Character)","parameters":[{"name":"max_speed","type":"float","default":"1200","description":"Maximum velocity magnitude allowed"},{"name":"acceleration","type":"float","default":"4000","description":"Acceleration applied by input (rate of change of velocity)"},{"name":"deceleration","type":"float","default":"4000","description":"Deceleration applied when there is no input (rate of change of velocity)"},{"name":"turning_boost","type":"float","default":"8","description":"Setting affecting extra force applied when changing direction, making turns have less drift and become more responsive. Velocity magnitude is not allowed to increase, that only happens due to normal acceleration. It may decrease with large direction changes. Larger values apply extra force to reach the target direction more quickly, while a zero value disables any extra turn force."}]},{"name":"SetDimension","description":"Sets this Player\'s dimension","authority":"server","parameters":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"],"functions":["GetDimension"]}},{"authority":"both","name":"SetManualCameraFade","description":"Turns on camera fading at the given opacity","description_long":"Turns on camera fading at the given opacity. Does not auto-animate, allowing user to animate themselves. Call StopCameraFade to turn fading back off.","parameters":[{"name":"in_fade_amount","type":"float","description":"Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."},{"name":"color","type":"Color"},{"name":"in_fade_audio","type":"boolean"}]},{"authority":"server","name":"SetName","description":"Sets the player\'s name","parameters":[{"name":"player_name","type":"string"}],"relations":{"functions":["GetName"]}},{"authority":"server","name":"SetVOIPChannel","description":"Sets the VOIP Channel of this Player (will only communicate with other players in the same channel)","parameters":[{"name":"channel","type":"integer"}],"relations":{"functions":["GetVOIPChannel"]}},{"authority":"both","name":"SetVOIPSetting","description":"Sets the VOIP Settings of this Player","parameters":[{"name":"voip_setting","type":"VOIPSetting"}],"relations":{"functions":["GetVOIPSetting"]}},{"authority":"both","name":"SetVOIPVolume","description":"Sets the VOIP Volume of this Player","parameters":[{"name":"volume","type":"float"}]},{"authority":"both","name":"Spectate","description":"Spectates other Player","parameters":[{"name":"player","type":"Player"},{"name":"blend_speed","type":"float","default":"0"}]},{"authority":"both","name":"StartCameraFade","description":"Does a camera fade to/from a solid color","description_long":"Does a camera fade to/from a solid color. Animates automatically","parameters":[{"name":"from_alpha","type":"float","description":"Alpha at which to begin the fade. Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."},{"name":"to_alpha","type":"float","description":"Alpha at which to finish the fade."},{"name":"duration","type":"float","description":"How long the fade should take, in seconds."},{"name":"to_color","type":"Color","description":"Color to fade to/from."},{"name":"should_fade_audio","type":"boolean","description":"True to fade audio volume along with the alpha of the solid color.","default":false},{"name":"hold_when_finished","type":"boolean","description":"True for fade to hold at the ToAlpha until explicitly stopped (e.g. with StopCameraFade)","default":false}]},{"authority":"both","name":"StopCameraFade","description":"Stops camera fading."},{"authority":"both","name":"TranslateCameraTo","description":"Smoothly moves the Player\'s Camera Location (only works if not possessing any Character)","parameters":[{"name":"location","type":"Vector"},{"name":"time","type":"float"},{"name":"exp","type":"float","default":"0","description":"Exponential used to smooth interp, use 0 for linear movement"}]},{"authority":"server","name":"UnPossess","description":"Release the Player from the Character"}],"events":[{"authority":"server","name":"DimensionChange","description":"Triggered when a Player changes it\'s dimension","arguments":[{"name":"self","type":"Player"},{"name":"old_dimension","type":"integer"},{"name":"new_dimension","type":"integer"}],"relations":{"functions":["SetDimension","GetDimension"]}},{"authority":"both","name":"Possess","description":"Trigerred when Player starts controlling a Character","arguments":[{"name":"self","type":"Player"},{"name":"character","type":"Character"}],"relations":{"functions":["GetControlledCharacter"]}},{"authority":"server","name":"Ready","description":"Triggered when Player is ready (the client fully joined, loaded the map and all entities and is ready to play)","arguments":[{"name":"self","type":"Player"}]},{"authority":"both","name":"UnPossess","description":"A Character was released from the Player","arguments":[{"name":"self","type":"Player"},{"name":"character","type":"Character"}],"relations":{"functions":["GetControlledCharacter"]}},{"authority":"both","name":"VOIP","description":"When a Player starts/ends using VOIP","arguments":[{"name":"self","type":"Player"},{"name":"is_talking","type":"boolean"}],"return":[{"type":"boolean","description":"When \'is_talking\' is true, return false to prevent this voice stream from playing (on server will prevent for everyone, on client will prevent only for the client)"}]}]}'),Le=JSON.parse('{"name":"Prop","description":"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto","description":"Setting <code>CollisionType.Auto</code> will make it automatically switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> if they are smaller than radius <b>40</b> units."},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"GrabMode","name":"grab_mode","default":"GrabMode.Auto","description":"Whether or not the Prop can be grabbed"},{"type":"CCDMode","name":"ccd_mode","default":"CCDMode.Auto","description":"Whether or not the Prop should have CCD enabled (disabling it may cause Props passing through objects if it\'s kinda small). It\'s smart to force it disabled on \'visual only\' props."}]}],"functions":[{"name":"GetGrabMode","description":"Gets ability to Grab this Prop","return":[{"name":"grab_mode","type":"GrabMode"}],"authority":"both","relations":{"functions":["SetGrabMode"]}},{"name":"GetHandler","description":"Gets the Character (if existing) which is holding this","return":[{"type":"Character?","description":"the character that holds the object","name":"handler"}],"authority":"both"},{"name":"GetMesh","description":"Gets the Asset name","return":[{"type":"StaticMeshPath","description":"asset name","name":"asset"}],"authority":"both","relations":{"functions":["SetMesh"]}},{"name":"SetGrabMode","description":"Sets ability to Characters to Grab this Prop","parameters":[{"type":"GrabMode","name":"grab_mode","description":"If the Prop will be able to be grabbable or not. Set to Auto to automatically define based on Prop\'s size."}],"authority":"server","relations":{"functions":["GetGrabMode"]}},{"name":"SetMesh","description":"Changes the mesh in runtime","parameters":[{"type":"StaticMeshPath","name":"asset","description":"asset"}],"authority":"authority","relations":{"functions":["GetMesh"]}},{"name":"SetPhysicsDamping","description":"Sets the Physics damping of this Prop","parameters":[{"type":"float","name":"linear_damping","description":""},{"type":"float","name":"angular_damping","description":""}],"authority":"authority"}],"events":[{"name":"Grab","authority":"both","description":"Triggered when Character grabs a Prop","arguments":[{"type":"Prop","name":"self","description":"The prop which was Grabbed"},{"type":"Character","name":"character","description":"The new Grabber"}]},{"name":"Hit","authority":"both","description":"Triggered when this Prop hits something","arguments":[{"type":"Prop","name":"self","description":"The prop which has been hit"},{"type":"float","name":"impact_force","description":"The intensity of the Hit normalized by the Prop\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Prop velocity at the moment it hits"}]},{"name":"Interact","authority":"server","description":"When a Character interacts with this Prop (i.e. try to Grab it)","arguments":[{"type":"Prop","name":"self","description":"the object that undergoes an interaction"},{"type":"Character","name":"character","description":"the character who interacts with the object"}],"return":[{"type":"boolean","description":"Return false to prevent the interaction (i.e. prevent being grabbed)"}]},{"name":"TakeDamage","authority":"server","description":"When Prop takes Damage","arguments":[{"type":"Prop","name":"self","description":"the object that takes the damage"},{"type":"integer","name":"damage","description":"amount of damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player?","name":"instigator","description":"The player which caused the damage"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"name":"UnGrab","authority":"both","description":"Triggered when this Prop is ungrabbed","arguments":[{"type":"Prop","name":"self","description":"The prop which has been ungrabbed"},{"type":"Character","name":"character","description":"The old Grabber"}]}]}'),je=JSON.parse('{"name":"SceneCapture","description":"Scene Capture is an Actor which captures a fully dynamic image of the scene into a Texture. It captures the scene from its view frustum, stores that view as an image, which is then used within a Material.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)","description":"Location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Rotation"},{"type":"integer","name":"width","default":"128","description":"Width of the generated Texture (max is 4096)"},{"type":"integer","name":"height","default":"128","description":"Height of the generated Texture (max is 4096)"},{"type":"float","name":"render_rate","default":"0.033","description":"Render Rate (how frequent is the capture)"},{"type":"float","name":"view_distance","default":"5000","description":"Maximum distance of capturing"},{"type":"float","name":"fov_angle","default":"90","description":"FOV"},{"type":"boolean","name":"enable_distance_optimization","default":"true","description":"Reduces the rendering frequency if the entities with this Material are too far or not visible. Disable it to always render at the render_rate"}]}],"functions":[{"name":"AddRenderActor","description":"Adds an Actor to the Render Only list","description_long":"Adds an Actor to the Render Only list<br/><br/>Note: adding one actor to this will make the SceneCapture only to render those Actors.","authority":"client","parameters":[{"type":"Actor","name":"actor"}],"relations":{"functions":["RemoveRenderActor","ClearRenderActors"]}},{"name":"ClearRenderActors","description":"Clears the Render Only list","authority":"client","relations":{"functions":["AddRenderActor","RemoveRenderActor"]}},{"name":"EncodeToBase64","description":"Takes a snapshot of the SceneCapture and returns a Base64 of it","authority":"client","parameters":[{"type":"ImageFormat","name":"image_format","default":"ImageFormat.JPEG","description":"Which format to generate - JPEG is fastest but discards Alpha channel"}],"return":[{"type":"string"}],"relations":{"functions":["EncodeToBase64Async"]}},{"name":"EncodeToBase64Async","description":"Takes a snapshot of the SceneCapture and returns a Base64 of it (asynchronously)","authority":"client","parameters":[{"type":"ImageFormat","name":"image_format","default":"ImageFormat.JPEG","description":"Which format to generate - JPEG is fastest but discards Alpha channel"},{"type":"function","name":"callback","description":"Callback","function_parameters":[{"name":"base_64","type":"string","description":"The base 64 content"}]}],"relations":{"functions":["EncodeToBase64"]}},{"name":"RemoveRenderActor","description":"Removes an Actor from the Render Only list","authority":"client","parameters":[{"type":"Actor","name":"actor"}],"relations":{"functions":["AddRenderActor","ClearRenderActors"]}},{"name":"Resize","description":"Change the output Texture size\\nNote: too high texture will make the capture slower and will affect game performance","authority":"client","parameters":[{"type":"integer","name":"width"},{"type":"integer","name":"height"}]},{"name":"SetDistanceOptimizationEnabled","description":"Enables or not the rendering frequency optimization if the entities with this Material are too far","authority":"client","parameters":[{"type":"boolean","name":"enabled"}]},{"name":"SetFOVAngle","description":"Sets the FOV","authority":"client","parameters":[{"type":"float","name":"angle"}]},{"name":"SetFreeze","description":"Stops or Restore Capturing","authority":"client","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"SetRenderRate","description":"Set how frequent is the capture\\nNote: Setting to 0 will make it capture every frame","authority":"client","parameters":[{"type":"float","name":"render_rate"}]},{"name":"SetShowFlag","description":"Enables/Disables rendering features from being captured","description_long":"Enables/Disables rendering features from being captured<br/>A complete list of available flags can be found in the <a href=\'https://docs.unrealengine.com/5.0/en-US/API/Runtime/Engine/FEngineShowFlags/\'>Official Unreal Documentation</a>","authority":"client","parameters":[{"type":"string","name":"flag"},{"type":"boolean","name":"enable"}]}],"events":[{"name":"Capture","authority":"client","description":"Triggered when this SceneCapture does an update/renders a frame","arguments":[{"type":"SceneCapture","name":"self"}]}]}'),Oe=JSON.parse('{"name":"StaticMesh","description":"A StaticMesh entity represents a Mesh which can be spawned in the world, can\'t move and is more optimized for using in decorating the world.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"static_mesh_asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"}]}],"functions":[{"name":"GetMesh","description":"Gets the Asset path mesh used","return":[{"type":"StaticMeshPath","description":"asset path","name":"static_mesh_asset"}],"authority":"both","relations":{"functions":["SetMesh"]}},{"name":"IsFromLevel","description":"Gets if this StaticMesh is from the Level","return":[{"type":"boolean","description":"if this StaticMesh is from the level","name":"is_from_level"}],"authority":"client"},{"name":"SetMesh","description":"Changes the mesh in runtime","parameters":[{"type":"StaticMeshPath","name":"static_mesh_asset","description":"asset"}],"authority":"authority","relations":{"functions":["GetMesh"]}}]}'),Fe=JSON.parse('{"name":"Sound","description":"Class for playing in-game 2D and 3D sounds.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location","description":"Only used if 3D sound"},{"type":"SoundPath","name":"asset","description":"The Sound Asset to load"},{"type":"boolean","name":"is_2D_sound","default":"false","description":"Whether to spawn it as 2D or 3D"},{"type":"boolean","name":"auto_destroy","default":"true","description":"Whether to destroy after finished playing"},{"type":"SoundType","name":"sound_type","default":"SoundType.SFX","description":"Used to apply user\'s volume settings"},{"type":"float","name":"volume","default":"1"},{"type":"float","name":"pitch","default":"1"},{"type":"float","name":"inner_radius","default":"400","description":"Only used if 3D sound"},{"type":"float","name":"falloff_distance","default":"3600","description":"Only used if 3D sound"},{"type":"AttenuationFunction","name":"attenuation_function","default":"Linear","description":"Only used if 3D sound"},{"type":"boolean","name":"keep_playig_when_silent","default":"false","description":"Only used if 3D sound - Use with caution, it may cause performance issues!"},{"type":"SoundLoopMode","name":"loop_mode","default":"Default","description":"Whether should force sound to loop"}]}],"functions":[{"name":"FadeIn","authority":"client","description":"Plays the sound with a fade effect","parameters":[{"type":"float","name":"fade_in_duration"},{"type":"float","name":"fade_volume_level","default":"1.0"},{"type":"float","name":"start_time","default":"0.0"}]},{"name":"FadeOut","authority":"client","description":"Stops the sound with a fade effect","parameters":[{"type":"float","name":"fade_out_duration"},{"type":"float","name":"fade_volume_level","default":"0.0"},{"type":"boolean","name":"destroy_after_fadeout","default":"false"}]},{"return":[{"type":"float","name":"duration"}],"name":"GetDuration","authority":"client","description":"Gets the duration of the Sound"},{"return":[{"type":"float","name":"falloff_distance"}],"name":"GetFalloffDistance","authority":"client","relations":{"functions":["SetFalloffDistance"]}},{"return":[{"type":"float","name":"inner_radius"}],"name":"GetInnerRadius","authority":"client","relations":{"functions":["SetInnerRadius"]}},{"return":[{"name":"frequency","type":"float"}],"name":"GetLowPassFilter","authority":"client","relations":{"functions":["SetLowPassFilter"]}},{"return":[{"name":"path","type":"string"}],"name":"GetPath","authority":"client"},{"return":[{"name":"pitch","type":"float"}],"name":"GetPitch","authority":"client","relations":{"functions":["SetPitch"]}},{"return":[{"name":"sound_type","type":"float"}],"name":"GetSoundType","authority":"client"},{"return":[{"name":"volume","type":"float"}],"name":"GetVolume","authority":"client","relations":{"functions":["SetVolume"]}},{"return":[{"name":"is_2D_sound","type":"boolean"}],"name":"Is2D","authority":"client","description":"Gets if the sound is 2D"},{"return":[{"name":"is_playing","type":"boolean"}],"name":"IsPlaying","authority":"client","description":"Gets if the sound is playing"},{"name":"Play","authority":"client","description":"Starts the sound","parameters":[{"type":"float","name":"start_time","default":"0.0"}]},{"name":"SetFalloffDistance","authority":"client","description":"If a 3D Sound, sets the distance which the sound is inaudible","parameters":[{"type":"float","name":"falloff_distance"}],"relations":{"functions":["GetFalloffDistance"]}},{"name":"SetInnerRadius","authority":"client","description":"If a 3D Sound, sets the distance within the volume is 100%","parameters":[{"type":"float","name":"inner_radius"}],"relations":{"functions":["GetInnerRadius"]}},{"name":"SetLowPassFilter","authority":"client","description":"Sets lowpass filter frequency. Sets 0 to disable it.","parameters":[{"type":"float","name":"frequency"}],"relations":{"functions":["GetLowPassFilter"]}},{"name":"SetPaused","authority":"client","description":"Pauses the sound","parameters":[{"type":"boolean","name":"pause","default":"true"}]},{"name":"SetPitch","authority":"client","description":"Sets the Sound\'s pitch","parameters":[{"type":"float","name":"new_pitch"}],"relations":{"functions":["GetPitch"]}},{"name":"SetVolume","authority":"client","description":"Sets the Sound\'s volume","parameters":[{"type":"float","name":"new_volume","description":"from 0.0 to 1.0"}],"relations":{"functions":["GetVolume"]}},{"name":"Stop","authority":"client","description":"Stops the sound"},{"name":"StopDelayed","authority":"client","description":"Stops the sound after the provided delay","parameters":[{"type":"float","name":"delay"}]}]}'),Ue=JSON.parse('{"name":"TextRender","description":"A Text Render class is useful for spawning Texts in 3D world, you can even attach it to other entities.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"string","name":"text"},{"type":"Vector","name":"scale","default":"Vector(1, 1, 1)"},{"type":"Color","name":"color","default":"Color(1, 1, 1, 1)"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"TextRenderAlignCamera","name":"align_camera","default":"TextRenderAlignCamera.Unaligned"}]}],"functions":[{"name":"SetFont","authority":"both","description":"Sets the Font","parameters":[{"name":"font_type","type":"FontType"}]},{"name":"SetFreeze","authority":"both","description":"Freeze mesh rebuild, to avoid unnecessary mesh rebuilds when setting a few properties together","parameters":[{"name":"freeze","type":"boolean"}]},{"name":"SetGlyphSettings","authority":"both","description":"Sets the Glyph representation settings to generate the 3D Mesh for this text render","parameters":[{"type":"float","name":"extrude","default":"0"},{"type":"float","name":"level","default":"0"},{"type":"TextRenderBevelType","name":"bevel_type","default":"TextRenderBevelType.Convex"},{"type":"integer","name":"bevel_segments","default":"8"},{"type":"boolean","name":"outline","default":"false"}]},{"name":"SetMaxSize","authority":"both","description":"Sets the Max Size of the TextRender, optionally scaling it proportionally","parameters":[{"type":"integer","name":"max_width","default":"0"},{"type":"integer","name":"max_height","default":"0"},{"type":"boolean","name":"scale_proportionally","default":"true"}]},{"name":"SetText","authority":"both","description":"Sets the Text","parameters":[{"name":"text","type":"string"}]},{"name":"SetTextSettings","authority":"both","description":"Sets the Text & Font settings for this text render","parameters":[{"type":"float","name":"kerning","default":"0"},{"type":"float","name":"line_spacing","default":"0"},{"type":"float","name":"word_spacing","default":"0"},{"type":"TextRenderHorizontalAlignment","name":"horizontal_alignment","default":"TextRenderHorizontalAlignment.Center"},{"type":"TextRenderVerticalAlignment","name":"vertical_alignment","default":"0TextRenderVerticalAlignment.Center"}]}]}'),ze=JSON.parse('{"name":"Trigger","description":"A Trigger class is a utility class to trigger events when any Entity enters an Area.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"Vector|float","name":"extent","description":"Size of the Trigger. If using <code>TriggerType.Sphere</code> it is treated as radius, otherwise as Vector extent"},{"type":"TriggerType","name":"trigger_type","default":"TriggerType.Sphere"},{"type":"boolean","name":"is_visible","default":"false","description":"Useful for debugging"},{"type":"Color","name":"color","default":"Color.RED","description":"Color to paint the Trigger bounds - if Visible"},{"type":"string[]","name":"overlap_only_classes","default":"{}","description":"Filter Trigger to only overlap specific Classes. Leave it empty for all Classes"}]}],"functions":[{"name":"ForceOverlapChecking","description":"Forces a Overlap checking to occur, will immediately trigger overlaps","authority":"authority"},{"name":"SetColor","description":"Sets the Trigger color (if visible)","authority":"both","parameters":[{"type":"Color","name":"color"}]},{"name":"SetExtent","description":"Sets the extent size of this trigger (sphere triggers can receive as float for radius)","authority":"authority","parameters":[{"type":"Vector|float","name":"extent"}]},{"name":"SetOverlapOnlyClasses","description":"Sets the filter to Trigger to only overlap specific Classes. Leave it empty for all Classes","authority":"authority","parameters":[{"type":"string[]","name":"overlap_only_classes"}],"examples":[{"title":"Sets to only overlap Characters","content":"my_trigger:SetOverlapOnlyClasses({ \\"Character\\", \\"CharacterSimple\\" })"}]}],"events":[{"name":"BeginOverlap","description":"Triggered when something overlaps this Trigger","authority":"authority","arguments":[{"type":"Trigger","name":"self","description":"The Trigger entity"},{"type":"Actor","name":"entity","description":"Any Actor which overlaps"}]},{"name":"EndOverlap","description":"Triggered when something leaves this Trigger","authority":"authority","arguments":[{"type":"Trigger","name":"self","description":"The Trigger entity"},{"type":"Actor","name":"entity","description":"Any Actor which left the Trigger"}]}]}'),He=JSON.parse('{"name":"VehicleWheeled","description":"Vehicles are wheeled entities which Characters can possesses and drive.","authority":"server","inheritance":["Entity","Actor","Vehicle","Paintable","Damageable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"boolean","name":"auto_create_physics","default":"true","description":"Can be disabled to improve performance when setting several configs. Must call <code>RecreatePhysics()</code> after all"},{"type":"boolean","name":"auto_unflip","default":"true","description":"Auto rotates the vehicle if flipped"},{"type":"SoundPath","name":"engine_sound","default":"nanos-world::A_Vehicle_Engine_01"},{"type":"SoundPath","name":"horn_sound","default":"nanos-world::A_Vehicle_Horn_Toyota"},{"type":"SoundPath","name":"brake_sound","default":"nanos-world::A_Vehicle_Brake"},{"type":"SoundPath","name":"engine_start_sound","default":"nanos-world::A_Car_Engine_Start"},{"type":"SoundPath","name":"vehicle_door_sound","default":"nanos-world::A_Vehicle_Door"},{"type":"boolean","name":"auto_start_engine","default":"true"},{"type":"BlueprintPath","name":"custom_animation_blueprint","default":""}]}],"functions":[{"authority":"client","name":"GetGear","description":"Gets the current Gear","return":[{"type":"integer","name":"gear"}]},{"authority":"client","name":"GetRPM","description":"Gets the current RPM","return":[{"type":"integer","name":"rpm"}]},{"authority":"server","name":"Horn","description":"Starts or stops the vehicles horn","parameters":[{"type":"boolean","name":"enable_horn"}]},{"authority":"server","name":"RecreatePhysics","description":"Recreate the Vehicle Physics","description_long":"Call this after configuring the vehicle if passed <code>auto_create_physics</code> to constructor"},{"authority":"server","name":"SetAerodynamicsSetup","description":"Configures the Vehicle Aerodynamics Settings","parameters":[{"type":"integer","name":"mass","default":"1500","description":"Mass of the vehicle chassis"},{"type":"float","name":"drag_coefficient","default":"0.3","description":"Force resisting forward motion at speed"},{"type":"integer","name":"vehicle_chassis_width","default":"180","description":"Chassis width used for drag force computation (cm)"},{"type":"integer","name":"vehicle_chassis_height","default":"140","description":"Chassis height used for drag force computation (cm)"},{"type":"float","name":"vehicle_downforce_coefficient","default":"0.3","description":"Force pressing vehicle into ground at speed"},{"type":"Vector","name":"center_of_mass_override","default":"Vector(0, 0, 50)","description":"Overrides the center of mass. Good for curves stabilization. Ideally the Z should be the same as the wheels radius"}]},{"authority":"server","name":"SetAutoStartEngine","description":"Sets if the Engine auto starts when the driver enters the Vehicle","parameters":[{"type":"boolean","name":"auto_start"}]},{"authority":"both","name":"SetCameraOffset","description":"Sets the Vehicle Camera Offset","parameters":[{"type":"Vector","name":"offset"}]},{"authority":"server","name":"SetEngineSetup","description":"Configures the Vehicle Engine (Torque, RPM, Braking)","parameters":[{"type":"integer","name":"max_torque","default":"700","description":"Max Engine Torque (Nm) is multiplied by TorqueCurve"},{"type":"integer","name":"max_rpm","default":"5700","description":"Maximum revolutions per minute of the engine"},{"type":"integer","name":"idle_rpm","default":"1200","description":"Idle RMP of engine then in neutral/stationary"},{"type":"float","name":"brake_effect","default":"0.05","description":"Braking effect from engine, when throttle released"},{"type":"integer","name":"rev_up_moi","default":"5","description":"Affects how fast the engine RPM speed up"},{"type":"integer","name":"rev_down_rate","default":"600","description":"Affects how fast the engine RPM slows down"}]},{"authority":"server","name":"SetEngineStarted","description":"Sets if the Engine is turned off/on","description_long":"Sets if the Engine is turned off/on (this will affect Lights, Sounds and ability to Throttle)","parameters":[{"type":"boolean","name":"started"}]},{"authority":"server","name":"SetHeadlightsSetup","description":"Configures the Headlights Offset and Color.","parameters":[{"type":"Vector","name":"location"},{"type":"Color","name":"color","default":"Color(1, 0.86, 0.5)"}]},{"authority":"server","name":"SetSteeringSetup","description":"Configures the Vehicle Steering","parameters":[{"type":"SteeringType","name":"steering_type"},{"type":"float","name":"angle_ratio","default":"0.7","description":"Only applies when AngleRatio is selected"}]},{"authority":"server","name":"SetSteeringWheelSetup","description":"Configures where the Steering Wheel is located","description_long":"Configures where the Steering Wheel is located, so Characters can grab it procedurally properly","parameters":[{"type":"Vector","name":"location"},{"type":"integer","name":"radius"}]},{"authority":"server","name":"SetTaillightsSetup","description":"Configures the Taillights Offset.","parameters":[{"type":"Vector","name":"location"}]},{"authority":"server","name":"SetTireFlat","description":"Sets a Tire as Flat or not","parameters":[{"type":"integer","name":"wheel_index"},{"type":"boolean","name":"is_flat"}]},{"authority":"server","name":"SetTransmissionSetup","description":"Configures the Vehicle Transmission","parameters":[{"type":"float","name":"transmission_final_ratio","default":"3.08","description":"The final gear ratio multiplies the transmission gear ratios"},{"type":"integer","name":"transmission_change_up_rpm","default":"4500","description":"Engine Revs at which gear up change occurs"},{"type":"integer","name":"transmission_change_down_rpm","default":"2000","description":"Engine Revs at which gear down change occurs"},{"type":"float","name":"transmission_gear_change_time","default":"0.4","description":"Time it takes to switch gears (seconds)"},{"type":"float","name":"transmission_efficiency","default":"0.9","description":"Mechanical frictional losses mean transmission might operate at 0.94 (94% efficiency)"}]},{"authority":"server","name":"SetWheel","description":"Configures a Vehicle Wheel","description_long":"Wheels can be updated in runtime by calling SetWheel again, you can for example change the suspension high or disable a wheel totally by toggling affected_by_engine off or setting radius to 0.","parameters":[{"type":"integer","name":"index","description":"Index of the wheel (0-N). Set it in ASC order"},{"type":"string","name":"bone_name","description":"Name of the bone to attach this wheel to"},{"type":"integer","name":"radius","default":"32","description":"Radius of the wheel"},{"type":"integer","name":"width","default":"20","description":"Width of the wheel"},{"type":"integer","name":"max_steer_angle","default":"50","description":"Steer angle in degrees for this wheel"},{"type":"Vector","name":"offset","default":"Vector(0, 0, 0)","description":"If bone_name is specified, offset the wheel from the bone\'s location. Otherwise this offsets the wheel from the vehicle\'s origin"},{"type":"boolean","name":"is_affected_by_engine","default":"true","description":"Whether engine should power this wheel"},{"type":"boolean","name":"is_affected_by_brake","default":"true","description":"Whether brake should affect this wheel"},{"type":"boolean","name":"is_affected_by_handbrake","default":"true","description":"Whether handbrake should affect this wheel"},{"type":"boolean","name":"has_abs_enabled","default":"false","description":"Advanced Braking System Enabled"},{"type":"boolean","name":"has_traction_control_enabled","default":"false","description":"Straight Line Traction Control Enabled"},{"type":"integer","name":"max_brake_torque","default":"1500","description":"Max brake torque for this wheel (Nm)"},{"type":"integer","name":"max_handbrake_torque","default":"3000","description":"Max handbrake brake torque for this wheel (Nm). A handbrake should have a stronger brake torque than the brake"},{"type":"integer","name":"cornering_stiffness","default":"1000","description":"Tyre Cornering Ability"},{"type":"float","name":"side_slip_modifier","default":"1.0","description":"Wheel Lateral Skid Grip Loss, lower number less grip on skid"},{"type":"float","name":"friction_force_multiplier","default":"2.0","description":"Friction Force Multiplier"},{"type":"float","name":"slip_threshold","default":"20.0","description":"Wheel Longitudinal Slip Threshold"},{"type":"float","name":"skid_threshold","default":"20.0","description":"Wheel Lateral Skid Threshold"},{"type":"float","name":"suspension_spring_rate","default":"250.0","description":"Spring Force (N/m)"},{"type":"float","name":"suspension_spring_preload","default":"50.0","description":"Spring Preload (N/m)"},{"type":"float","name":"suspension_max_raise","default":"10.0","description":"How far the wheel can go above the resting position"},{"type":"float","name":"suspension_max_drop","default":"10.0","description":"How far the wheel can drop below the resting position"},{"type":"float","name":"suspension_smoothing","default":"0.0","description":"Smooth suspension [0-off, 10-max] - Warning might cause momentary visual inter-penetration of the wheel against objects/terrain"},{"type":"float","name":"suspension_damping_ratio","default":"0.5","description":"Suspension damping, larger value causes the suspension to come to rest faster [range 0 to 1]"},{"type":"float","name":"suspension_wheel_load_ratio","default":"0.5","description":"Amount wheel load effects wheel friction. <br/> - At 0 wheel friction is completely independent of the loading on the wheel (This is artificial as it always assumes even balance between all wheels) <br/> - At 1 wheel friction is based on the force pressing wheel into the ground. This is more realistic. <br/> - Lower value cures lift off over-steer, generally makes vehicle easier to handle under extreme motions."},{"type":"Vector","name":"suspension_axis","default":"Vector(0, 0, -1)","description":"Local body direction in which where suspension forces are applied (typically along -Z-axis)"},{"type":"Vector","name":"suspension_force_offset","default":"Vector(0, 0, 0)","description":"Vertical offset from where suspension forces are applied (along Z-axis)"}]}],"events":[{"name":"Horn","description":"Triggered when Vehicle honks","authority":"both","arguments":[{"type":"VehicleWheeled","name":"self"},{"type":"boolean","name":"is_honking"}]}]}'),qe=JSON.parse('{"name":"VehicleWater","description":"VehicleWater are entities which Characters can possesses and drive over the water with dynamic physics.","authority":"server","inheritance":["Entity","Actor","Vehicle","Paintable","Damageable"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"authority":"server","name":"SetEngineOffset","description":"Sets the relative location of the Engine (where the Physics Thruster, sounds and effects are attached)","description_long":"Sets the relative location of the Engine (where the Physics Thruster, sounds and effects are attached). Default is Vector(-200, 0, 0)","parameters":[{"type":"Vector","name":"offset"}]},{"authority":"server","name":"SetThrustStrength","description":"Sets the force of the Engine/Thruster","description_long":"Sets the force of the Engine/Thruster. Default is 1000","parameters":[{"type":"integer","name":"force"}]}]}'),Je=JSON.parse('{"name":"Weapon","description":"Weapons are entities with firing, reloading and aiming functionalities.<br/><br/>They are fully customizable, all pieces of the weapon can be changed with immense possibility of creation.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"name":"Default Constructor","parameters":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"},{"name":"asset","type":"SkeletalMeshPath"},{"name":"collision_type","type":"CollisionType","default":"CollisionType.Auto"},{"name":"gravity_enabled","type":"boolean","default":"true"}]}],"functions":[{"authority":"both","name":"GetAmmoBag","description":"Gets this Weapon\'s Ammo Bag","return":[{"name":"ammo_bag","type":"integer"}],"relations":{"functions":["SetAmmoBag"]}},{"authority":"both","name":"GetAmmoClip","description":"Gets this Weapon\'s Ammo Clip","return":[{"name":"ammo_clip","type":"integer"}],"relations":{"functions":["SetAmmoClip"]}},{"authority":"both","name":"GetAmmoToReload","return":[{"name":"ammo_to_reload","type":"integer"}]},{"authority":"both","name":"GetAnimationCharacterFire","return":[{"name":"animation_character_fire_path","type":"AnimationPath"}],"relations":{"functions":["SetAnimationCharacterFire"]}},{"authority":"both","name":"GetAnimationFire","return":[{"name":"animation_fire_path","type":"AnimationPath"}],"relations":{"functions":["SetAnimationFire"]}},{"authority":"both","name":"GetAnimationReload","description":"Gets the reload animation","return":[{"name":"reload_animation_path","type":"AnimationPath"}],"relations":{"functions":["SetAnimationReload"]}},{"authority":"both","name":"GetBulletColor","return":[{"type":"Color","name":"bullet_color"}],"relations":{"functions":["SetBulletColor"]}},{"authority":"both","name":"GetBulletCount","return":[{"type":"integer","name":"bullet_count"}]},{"authority":"both","name":"GetCadence","return":[{"name":"cadence","type":"float"}],"relations":{"functions":["SetCadence"]}},{"authority":"both","name":"GetCanHoldUse","return":[{"name":"can_hold_use","type":"boolean"}]},{"authority":"both","name":"GetClipCapacity","return":[{"name":"clip","type":"integer"}],"relations":{"functions":["SetClipCapacity"]}},{"authority":"both","name":"GetDamage","return":[{"name":"damage","type":"integer"}],"relations":{"functions":["SetDamage"]}},{"authority":"both","name":"GetHandlingMode","return":[{"name":"handling_mode","type":"HandlingMode"}],"relations":{"functions":["SetHandlingMode"]}},{"authority":"both","name":"GetHoldReleaseUse","return":[{"type":"boolean","name":"hold_release_use"}]},{"authority":"both","name":"GetLeftHandLocation","return":[{"name":"left_hand_location","type":"Vector"}]},{"authority":"both","name":"GetLeftHandRotation","return":[{"name":"left_hand_rotation","type":"Rotator"}]},{"authority":"both","name":"GetMagazineMesh","return":[{"name":"magazine_mesh","type":"StaticMeshPath"}],"relations":{"functions":["SetMagazineMesh"]}},{"authority":"both","name":"GetParticlesBulletTrail","return":[{"name":"particle_bullet_trail_asset_path","type":"ParticlePath"}],"relations":{"functions":["SetParticlesBulletTrail"]}},{"authority":"both","name":"GetParticlesShells","return":[{"name":"particle_shells_asset_path","type":"ParticlePath"}],"relations":{"functions":["SetParticlesShells"]}},{"authority":"both","name":"GetRecoil","return":[{"name":"recoil","type":"float"}],"relations":{"functions":["SetRecoil"]}},{"authority":"both","name":"GetRightHandOffset","return":[{"name":"right_hand_offset","type":"Vector"}],"relations":{"functions":["SetRightHandOffset"]}},{"authority":"both","name":"GetSightFOVMultiplier","return":[{"name":"sight_fov_multiplier","type":"float"}],"relations":{"functions":["SetSightFOVMultiplier"]}},{"authority":"both","name":"GetSightLocation","return":[{"name":"sight_location","type":"Vector"}]},{"authority":"both","name":"GetSightRotation","return":[{"name":"sight_rotation","type":"Rotator"}]},{"authority":"both","name":"GetSoundAim","return":[{"name":"sound_aim_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundAim"]}},{"authority":"both","name":"GetSoundDry","return":[{"name":"sound_dry_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundDry"]}},{"authority":"both","name":"GetSoundFire","return":[{"name":"sound_fire_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundFire"]}},{"authority":"both","name":"GetSoundLoad","return":[{"name":"sound_load_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundLoad"]}},{"authority":"both","name":"GetSoundUnload","return":[{"name":"sound_unload_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundUnload"]}},{"authority":"both","name":"GetSoundZooming","return":[{"name":"sound_zooming_asset_path","type":"SoundPath"}],"relations":{"functions":["SetSoundZooming"]}},{"authority":"both","name":"GetSpread","return":[{"name":"spread","type":"float"}],"relations":{"functions":["SetSpread"]}},{"authority":"both","name":"PlayAnimation","description":"Plays an Animation on this Weapon","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":"DefaultSlot"},{"type":"boolean","name":"loop_indefinitely","default":"false","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"blend_in_time","default":"0.25","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"blend_out_time","default":"0.25","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"play_rate","default":"1.0","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group. This parameter is only used if the Weapon has an Animation Blueprint"}]},{"authority":"server","name":"Reload","description":"Forces this Weapon to reload","description_long":"Forces this Weapon to reload (only if being handled by a Character)"},{"authority":"server","name":"SetAmmoBag","description":"Sets this Weapon\'s Ammo in the Bag","parameters":[{"name":"new_ammo_bag","type":"integer"}],"relations":{"functions":["GetAmmoBag"]}},{"authority":"server","name":"SetAmmoClip","description":"Sets this Weapon\'s Ammo in the Clip","parameters":[{"name":"new_ammo_clip","type":"integer"}],"relations":{"functions":["GetAmmoClip"]}},{"authority":"server","name":"SetAmmoSettings","description":"Aux for setting and configuring ammo","parameters":[{"name":"ammo_clip","type":"integer"},{"name":"ammo_bag","type":"integer"},{"name":"ammo_to_reload","type":"integer","default":"ammo_clip"},{"name":"clip_capacity","type":"integer","default":"ammo_clip"}]},{"authority":"server","name":"SetAnimationCharacterFire","description":"Animation played by the Character when Firing","parameters":[{"name":"animation_character_fire_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}],"relations":{"functions":["GetAnimationCharacterFire"]}},{"authority":"server","name":"SetAnimationFire","description":"Animation played by the Weapon when Firing","parameters":[{"name":"animation_fire_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}],"relations":{"functions":["GetAnimationFire"]}},{"authority":"server","name":"SetAnimationReload","description":"Animation played by the Character when Reloading","parameters":[{"name":"reload_animation_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}],"relations":{"functions":["GetAnimationReload"]}},{"authority":"server","name":"SetAutoReload","description":"If the Character will reload automatically when ammo empties","description_long":"If the Character will reload automatically when ammo empties. Default is true","parameters":[{"name":"auto_reload","type":"boolean"}]},{"authority":"server","name":"SetBulletColor","description":"Set the Bullet Color","description_long":"Set the Bullet Color<br/><br/>Only has effect if using Bullet Trail particle P_Bullet_Trail or if you particle has the Color parameter","parameters":[{"name":"bullet_color","type":"Color"}],"relations":{"functions":["GetBulletColor"]}},{"authority":"server","name":"SetBulletSettings","description":"Aux for setting and configuring the Bullet","parameters":[{"name":"bullet_count","type":"integer","description":"1 for common weapons<br/>> 1 for shotguns"},{"name":"bullet_max_distance","type":"integer"},{"name":"bullet_velocity","type":"integer","description":"Visuals only"},{"name":"bullet_color","type":"Color"}]},{"authority":"server","name":"SetCadence","description":"Speed of shots","parameters":[{"name":"cadence","type":"float","description":"1 shot at each <code>cadence</code> second"}],"relations":{"functions":["GetCadence"]}},{"authority":"server","name":"SetClipCapacity","description":"Capacity of the Weapon\'s clip","parameters":[{"name":"clip","type":"integer"}],"relations":{"functions":["GetClipCapacity"]}},{"authority":"server","name":"SetDamage","description":"Set the Base Weapon\'s Damage","description_long":"Base Weapon\'s Damage<br/><br/>This will be multiplied by multiplier factors when hitting specific bones","parameters":[{"name":"damage","type":"integer"}],"relations":{"functions":["GetDamage"]}},{"authority":"server","name":"SetHandlingMode","description":"Sets how the Character grabs this Weapon","parameters":[{"name":"handling_mode","type":"HandlingMode"}],"relations":{"functions":["GetHandlingMode"]}},{"authority":"server","name":"SetLeftHandTransform","description":"Left Hand Offset","parameters":[{"name":"left_hand_location","type":"Vector"},{"name":"left_hand_rotation","type":"Rotator"}]},{"authority":"server","name":"SetMagazineMesh","description":"Set the mesh used when the Character reloads the weapon","description_long":"Set the mesh used when the Character reloads the weapon.<br/><br/>Will drop this Mesh as an animation effect.","parameters":[{"name":"magazine_mesh","type":"StaticMeshPath"},{"name":"magazine_mesh_hide_bone","type":"string","default":"b_gun_mag","description":"Weapon bone to hide when reloading it"}],"relations":{"functions":["GetMagazineMesh"]}},{"authority":"server","name":"SetParticlesBarrel","description":"Particle of the Fire Blast in the muzzle","parameters":[{"name":"particle_asset_path","type":"ParticlePath"}]},{"authority":"server","name":"SetParticlesBulletTrail","description":"Particle of the Bullet flying","parameters":[{"name":"particle_bullet_trail_asset_path","type":"ParticlePath"}],"relations":{"functions":["GetParticlesBulletTrail"]}},{"authority":"server","name":"SetParticlesShells","description":"Particle of the empty bullet flying from the weapon when shooting","parameters":[{"name":"particle_shells_asset_path","type":"ParticlePath"}],"relations":{"functions":["GetParticlesShells"]}},{"authority":"server","name":"SetRecoil","description":"Base Weapon\'s Recoil","parameters":[{"name":"recoil","type":"float","description":"0 means no Recoil, default is 1"}],"relations":{"functions":["GetRecoil"]}},{"authority":"server","name":"SetRightHandOffset","description":"Set the offset of Right Hand","description_long":"Set the Offset of Right Hand. To position relative to the camera.","parameters":[{"name":"right_hand_offset","type":"Vector"}],"relations":{"functions":["GetRightHandOffset"]}},{"authority":"server","name":"SetSightFOVMultiplier","description":"The FOV multiplier when ADS","parameters":[{"name":"sight_fov_multiplier","type":"float"}],"relations":{"functions":["GetSightFOVMultiplier"]}},{"authority":"server","name":"SetSightTransform","description":"Offset applied to align player\'s head to weapon\'s sight and rotation applied on the weapon when ADS","parameters":[{"name":"sight_location","type":"Vector"},{"name":"sight_rotation","type":"Rotator"}]},{"authority":"server","name":"SetSoundAim","description":"Sound when Aiming","parameters":[{"name":"sound_aim_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundAim"]}},{"authority":"server","name":"SetSoundDry","description":"Sound when weapon has not bullet and try to shoot","parameters":[{"name":"sound_dry_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundDry"]}},{"authority":"server","name":"SetSoundFire","description":"Sound when Shooting","parameters":[{"name":"sound_fire_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundFire"]}},{"authority":"server","name":"SetSoundFireLastBullets","description":"Sound when firing with only having X remaining bullets in the magazine","description_long":"Sound when firing with only having X remaining bullets in the magazine, useful for last shot \'ping\' or sound when low on bullets","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"remaining_bullets_count","type":"integer","default":"1","description":"The amount of remaining bullet to start playing this sound"}]},{"authority":"server","name":"SetSoundLoad","description":"Sound when Loading a magazine","parameters":[{"name":"sound_load_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundLoad"]}},{"authority":"server","name":"SetSoundUnload","description":"Sound when Unloading a magazine","parameters":[{"name":"sound_unload_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundUnload"]}},{"authority":"server","name":"SetSoundZooming","description":"Sound when Zooming","parameters":[{"name":"sound_zooming_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}],"relations":{"functions":["GetSoundZooming"]}},{"authority":"server","name":"SetSpread","description":"Base Weapon\'s Spread","parameters":[{"name":"spread","type":"float","description":"the higher the less precision - recommended value: 20"}],"relations":{"functions":["GetSpread"]}},{"authority":"server","name":"SetUsageSettings","description":"Sets if the Weapon can hold to keep firing and if it needs to release to fire","parameters":[{"name":"can_hold_use","type":"boolean"},{"name":"hold_release_use","type":"boolean"}]},{"authority":"server","name":"SetWallbangSettings","description":"Sets how the bullet will pass through walls","parameters":[{"name":"max_distance","type":"integer","description":"Max distance to pass through another wall"},{"name":"damage_multiplier","type":"float","description":"Damage given if wallbangged"}]}],"events":[{"authority":"both","name":"AmmoBagChange","description":"When the Ammo Bag is changed, by reloading or manually setting through scripting","arguments":[{"name":"self","type":"Weapon"},{"name":"old_ammo_clip","type":"integer"},{"name":"new_ammo_clip","type":"integer"}]},{"authority":"both","name":"AmmoClipChange","description":"When the Ammo Clip is changed, by reloading or manually setting through scripting","arguments":[{"name":"self","type":"Weapon"},{"name":"old_ammo_clip","type":"integer"},{"name":"new_ammo_clip","type":"integer"}]},{"authority":"both","name":"Fire","description":"Triggered when Weapon fires (this will be triggered for each shot)","arguments":[{"name":"self","type":"Weapon"},{"name":"shooter","type":"Character"}]},{"authority":"both","name":"Reload","description":"When a Weapon is reloaded, optionally by a Character","arguments":[{"name":"self","type":"Weapon"},{"name":"character","type":"Character"},{"name":"ammo_to_reload","type":"integer"}]}]}'),Ke=JSON.parse('{"name":"WebUI","description":"Class for spawning a dynamic Web Browser.","authority":"client","inheritance":["Entity"],"constructors":[{"name":"Default Constructor","parameters":[{"type":"string","name":"name","description":"Used for debugging logs"},{"type":"HTMLPath","name":"path","description":"Web URL or <a href=\'#html-path-searchers\'>HTML File Path</a> as <code>file://my_file.html</code>"},{"type":"WidgetVisibility","name":"visibility","default":"WidgetVisibility.Visible","description":"if WebUI is visible on screen"},{"type":"boolean","name":"is_transparent","default":"true","description":"if WebUI background is transparent"},{"type":"boolean","name":"auto_resize","default":"true","description":"if should auto resize when screen changes it\'s size (useful OFF when you are painting meshes with WebUI)"},{"type":"integer","name":"width","default":"0","description":"size of the WebUI width when you are not using auto_resize"},{"type":"integer","name":"height","default":"0","description":"size of the WebUI height when you are not using auto_resize"}]}],"functions":[{"name":"BringToFront","authority":"client","description":"Puts this WebUI in the front of all WebUIs and Widgets"},{"name":"CallEvent","authority":"client","description":"Calls an Event on the Browser\'s JavaScript","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","description":"Arguments to pass to the event"}]},{"name":"ExecuteJavaScript","authority":"client","description":"Executes a JavaScript code in the Browser","description_long":"Executes a JavaScript code in the Browser<br/>Note: This method is experimental and should be used cautiously. Events are still the preferred way of communicating between Packages and WebUI.","parameters":[{"type":"string","name":"javascript_code"}]},{"name":"GetName","authority":"client","description":"Gets this WebUI name","return":[{"name":"name","type":"string"}]},{"name":"GetSize","authority":"client","description":"Gets the current size of this WebUI","return":[{"type":"Vector2D"}]},{"name":"GetVisibility","authority":"client","description":"Returns the current WebUI visibility","return":[{"name":"visibility","type":"WidgetVisibility"}],"relations":{"functions":["SetVisibility"]}},{"name":"IsFrozen","authority":"client","description":"Returns if this WebUI is currently frozen","return":[{"name":"freeze","type":"boolean"}]},{"name":"LoadHTML","authority":"client","description":"Loads a pure HTML in this Browser","parameters":[{"type":"string","name":"html"}]},{"name":"LoadURL","authority":"client","description":"Loads a new File/URL in this Browser","parameters":[{"type":"HTMLPath","name":"url"}]},{"name":"RemoveFocus","authority":"client","description":"Removes the focus from this WebUI (and sets it back to game viewport)","description_long":"Removes the focus from this WebUI (and sets it back to game viewport)<br/>You MUST call this after you don\'t need keyboard input anymore"},{"name":"SendKeyEvent","authority":"client","description":"Sends a Key Event into the WebUI programatically","parameters":[{"type":"WebUIKeyType","name":"key_type"},{"type":"integer","name":"key_code"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"}]},{"name":"SendMouseClickEvent","authority":"client","description":"Sends a Mouse Click into the WebUI programatically","description_long":"You must send both Down and Up to make it work properly","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"WebUIMouseType","name":"mouse_type","description":"Which mouse button"},{"type":"boolean","name":"is_mouse_up","description":"Whether the event was up or down"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"},{"type":"integer","name":"click_count","default":"1","description":"Use 2 for double click event"}]},{"name":"SendMouseMoveEvent","authority":"client","description":"Sends a Mouse Move Event into the WebUI programatically","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"},{"type":"boolean","name":"mouse_leave","default":"false"}]},{"name":"SendMouseWheelEvent","authority":"client","description":"Sends a Mouse Event into the WebUI programatically","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"float","name":"delta_x"},{"type":"float","name":"delta_y"}]},{"name":"SetFocus","authority":"client","description":"Enables the focus on this browser (i.e. can receive Keyboard input and will trigger input events)","description_long":"Enables the focus on this browser (i.e. can receive Keyboard input and will trigger input events<br/>Note: Only one browser can have focus per time."},{"name":"SetFreeze","authority":"client","description":"Freezes the WebUI Rendering to the surface (it will still execute the JS under the hood)","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"SetLayout","authority":"client","description":"Sets the Layout as Canvas on Screen","description_long":"Sets the Layout as Canvas on Screen. <strong>Anchors</strong>:<br/><br/><img src=\'/img/docs/anchors.webp\' />","parameters":[{"type":"Vector2D","name":"screen_location/offset_left_top","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"size/offset_right_bottom","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector(1, 1)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector(0.5, 0.5)"}]},{"name":"SetVisibility","authority":"client","description":"Sets the visibility in screen","parameters":[{"type":"WidgetVisibility","name":"visibility"}],"relations":{"functions":["GetVisibility"]}},{"name":"SpawnSound","authority":"client","description":"Spawns a Sound entity to plays this WebUI sound","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"boolean","name":"is_2d","default":"true"},{"type":"float","name":"volume","default":"1.0"},{"type":"integer","name":"inner_radius","default":"400"},{"type":"integer","name":"falloff_distance","default":"3600"},{"type":"AttenuationFunction","name":"attenuation_function","default":"AttenuationFunction.Linear"}],"return":[{"type":"Sound"}]}],"events":[{"name":"Fail","authority":"client","description":"Triggered when this page fails to load","arguments":[{"type":"integer","name":"error_code"},{"type":"string","name":"message"}]},{"name":"Ready","authority":"client","description":"Triggered when this page is fully loaded"}]}'),$e=JSON.parse('{"name":"Widget","description":"The Widget class supports spawning Unreal Widgets classes through scripting and manipulate them such as Blueprints!","authority":"client","inheritance":["Entity"],"constructors":[{"name":"UserWidget Constructor","description":"Spawns a Widget passing a UserWidget blueprint","parameters":[{"type":"BlueprintPath","name":"blueprint_path","description":"A custom UserWidget Blueprint to spawn"}]},{"name":"Native Widget Constructor","description":"Spawns a Widget passing a NativeWidget enum","parameters":[{"type":"NativeWidget","name":"native_widget","description":"One of the native Widgets to spawn"}]}],"functions":[{"name":"AddChild","authority":"client","description":"Adds a new child widget to this Widget container, if this is a <a href=\'https://docs.unrealengine.com/5.1/en-US/API/Runtime/UMG/Components/UPanelWidget/\'>Panel</a>","parameters":[{"type":"WebUI|Widget","name":"other","description":""}]},{"name":"AddToViewport","authority":"client","description":"Adds it to the game\'s viewport and fills the entire screen"},{"name":"BindBlueprintEventDispatcher","description":"Assigns and Binds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback","description":"Callback function to call","function_parameters":[{"name":"self","type":"Blueprint"},{"name":"params","type":"any..."}]}],"return":[{"type":"function","description":"the callback itself"}]},{"name":"BringToFront","authority":"client","description":"Puts this Widget in the front of all WebUIs and Widgets","description_long":"Puts this Widget in the front of all WebUIs and Widgets. Note: You can only call it if the Widget is parented to the Viewport!"},{"name":"CallBlueprintEvent","return":[{"type":"any...","description":"the function return values"}],"description":"Calls a Blueprint Event or Function","description_long":"Calls a Blueprint Event or Function<br/>Returns all Function return values on <strong>Client Side</strong>","authority":"client","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"name":"GetBlueprintPropertyValue","description":"Gets a Blueprint Property/Variable value","authority":"client","return":[{"type":"any","description":"the value"}],"parameters":[{"type":"string","name":"property_name"}],"relations":{"functions":["SetBlueprintPropertyValue"]}},{"name":"GetVisibility","authority":"client","description":"Returns the current WebUI visibility","return":[{"name":"visibility","type":"WidgetVisibility"}],"relations":{"functions":["SetVisibility"]}},{"name":"SetBlueprintPropertyValue","description":"Sets a Blueprint Property/Variable value directly","authority":"client","parameters":[{"type":"string","name":"property_name"},{"type":"any","name":"value"}],"relations":{"functions":["GetBlueprintPropertyValue"]}},{"name":"SetCanvasLayout","authority":"client","description":"Sets the Layout as Canvas on Screen","description_long":"Sets the Layout as Canvas on Screen.<br/><br/>Note: This method only works if this Widget is child of a Canvas Panel.<br/><br/><strong>Anchors</strong>:<br/><br/><img src=\'/img/docs/anchors.webp\' />","parameters":[{"type":"Vector2D","name":"screen_location/offset_left_top","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"size/offset_right_bottom","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector(1, 1)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector(0.5, 0.5)"}]},{"name":"SetContentForSlot","authority":"client","description":"Sets the widget for a given <a href=\'https://docs.unrealengine.com/5.0/en-US/using-named-slots-in-umg-for-unreal-engine/\'>slot</a> by name, if this is a <a href=\'https://docs.unrealengine.com/5.1/en-US/API/Runtime/UMG/Blueprint/UUserWidget/\'>UserWidget</a>","parameters":[{"type":"string","name":"slot_name"},{"type":"Widget?","name":"widget","description":"Pass it nil to remove it"}]},{"name":"SetFocus","authority":"client","description":"Enables the focus on this Widget (i.e. can receive Keyboard input and will trigger input events)","description_long":"Enables the focus on this Widget (i.e. can receive Keyboard input and will trigger input events<br/>Note: Only one Widget can have focus per time."},{"name":"SetVisibility","authority":"client","description":"Sets the visibility in screen","parameters":[{"type":"WidgetVisibility","name":"visibility"}],"relations":{"functions":["GetVisibility"]}},{"name":"SpawnWidget3D","authority":"client","description":"Spawns a 3D Widget actor rendering this Widget in the world","return":[{"type":"Widget3D","name":"widget_3D"}],"parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"WidgetSpace","name":"widget_space","default":"WidgetSpace.World"},{"type":"bool","name":"auto_size","default":"false"},{"type":"Vector2D","name":"size","description":"Only works if auto_size = false","default":"Vector2D(500, 500)"},{"type":"float","name":"auto_repaint_rate","description":"Leaves -1 to repaint every frame","default":"-1"},{"type":"Vector2D","name":"pivot","default":"Vector2D(0.5, 0.5)"}]},{"name":"UnbindBlueprintEventDispatcher","description":"Unbinds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback?","description":"Optional callback to unbind"}]}],"events":[]}'),Ye=JSON.parse('{"name":"Widget3D","description":"The Widget3D class is the 3D representation of a Widget class spawned in the world.","authority":"client","inheritance":["Entity","Actor"],"functions":[{"return":[{"name":"widget","type":"Widget"}],"name":"GetWidget","authority":"client"},{"name":"Repaint","authority":"client","description":"Forces this to repaint"},{"name":"SetAutoRepaintRate","authority":"client","description":"Sets the auto repaint rate","parameters":[{"type":"float","name":"rate"}]}],"events":[]}'),Xe=JSON.parse('{"name":"Color","description":"A color composed of components (R, G, B, A) with floating point precision.","constructors":[{"name":"Default Constructor","parameters":[{"name":"R","type":"number","default":"0","description":"Red color percentage (0-1)"},{"name":"G","type":"number","default":"X","description":"Green color percentage (0-1)"},{"name":"B","type":"number","default":"X","description":"Blue color percentage (0-1)"},{"name":"A","type":"number","default":"1","description":"Alpha transparency percentage (0-1)"}]}],"operators":[{"name":"+","operator":"__add","lhs":"Color|number","rhs":"Color|number","return":"Color","description":"Adds two Colors or a number into each component"},{"name":"-","operator":"__sub","lhs":"Color","rhs":"Color|number","return":"Color","description":"Subtracts two Colors or a number from each component"},{"name":"*","operator":"__mul","lhs":"Color|number","rhs":"Color|number","return":"Color","description":"Multiplies two Colors or a number into each component"},{"name":"/","operator":"__div","lhs":"Color","rhs":"Color|number","return":"Color","description":"Divides two Colors or a number from each component"},{"name":"==","operator":"__eq","lhs":"Color","rhs":"Color","return":"boolean","description":"Checks if two Colors have the same values"},{"name":"tostring","operator":"tostring","lhs":"Color","return":"string","description":"Gets a string representation of this struct"}],"properties":[{"name":"R","type":"number","description":"Red color percentage (0-1)"},{"name":"G","type":"number","description":"Green color percentage (0-1)"},{"name":"B","type":"number","description":"Blue color percentage (0-1)"},{"name":"A","type":"number","description":"Alpha transparency percentage (0-1)"}],"static_properties":[{"name":"WHITE","value":"Color(1, 1, 1)"},{"name":"BLACK","value":"Color(0, 0, 0)"},{"name":"TRANSPARENT","value":"Color(0, 0, 0, 0)"},{"name":"RED","value":"Color(1, 0, 0)"},{"name":"GREEN","value":"Color(0, 1, 0)"},{"name":"BLUE","value":"Color(0, 0, 1)"},{"name":"YELLOW","value":"Color(1, 1, 0)"},{"name":"CYAN","value":"Color(0, 1, 1)"},{"name":"MAGENTA","value":"Color(1, 0, 1)"},{"name":"ORANGE","value":"Color(1, 0.5, 0)"},{"name":"CHARTREUSE","value":"Color(0.5, 1, 1)"},{"name":"AQUAMARINE","value":"Color(0, 1, 0.5)"},{"name":"AZURE","value":"Color(0, 0.5, 1)"},{"name":"VIOLET","value":"Color(0.5, 0, 1)"},{"name":"ROSE","value":"Color(1, 0, 0.5)"}],"functions":[{"name":"ToHex","description":"Gets the Hexadecimal representation of this Color","parameters":[{"name":"appends_transparency","type":"boolean","default":"true","description":"Appends transparency part"}],"return":[{"type":"string","description":"Hexadecimal representation of this Color"}]}],"static_functions":[{"name":"RandomPalette","description":"Returns a random color from Color Palette","parameters":[{"name":"includes_black","type":"boolean","default":"true","description":"Includes blacks in the scope"}],"return":[{"type":"Color","description":"Random color from Color Palette"}]},{"name":"Random","description":"Returns a random color from all color scope","return":[{"type":"Color","description":"Random color from all color scope"}]},{"name":"FromRGBA","description":"Returns the color from 0-255 range values","parameters":[{"name":"r","type":"number","default":"0","description":"Red"},{"name":"g","type":"number","default":"0","description":"Green"},{"name":"b","type":"number","default":"0","description":"Blue"},{"name":"a","type":"number","default":"0","description":"Alpha"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromCYMK","description":"Returns a color from the CYMK format","parameters":[{"name":"c","type":"number","default":"0","description":"Cyan"},{"name":"y","type":"number","default":"0","description":"Yellow"},{"name":"m","type":"number","default":"0","description":"Magenta"},{"name":"k","type":"number","default":"0","description":"Black"},{"name":"a","type":"number","default":"0","description":"Alpha"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHSL","description":"Returns a color from the HSL format","parameters":[{"name":"h","type":"number","default":"0","description":"Hue"},{"name":"s","type":"number","default":"0","description":"Saturation"},{"name":"l","type":"number","default":"0","description":"Lightness"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHSV","description":"Returns a color from the HSV format","parameters":[{"name":"h","type":"number","default":"0","description":"Hue"},{"name":"s","type":"number","default":"0","description":"Saturation"},{"name":"v","type":"number","default":"0","description":"Value"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHEX","description":"Returns a color from the Hexadecimal format","parameters":[{"name":"hex","type":"string","description":"Hexadecimal"}],"return":[{"type":"Color","description":"Final Color"}]}]}'),Qe=JSON.parse('{"name":"Matrix","description":"A Matrix is an array of numbers this can be used for geometric and positional calculations. This is mainly used internally.","constructors":[{"name":"Default Constructor","parameters":[{"name":"rotation","type":"Rotator","description":"The rotation of the matrix"},{"name":"origin","type":"Vector","description":"The origin of the matrix"}]}],"functions":[{"name":"TransformVector","description":"Transform the vector with the matrix","return":[{"type":"Vector","description":"The new vector"}],"parameters":[{"type":"Vector","name":"vector","description":"The vector who will be transformed"}]},{"name":"GetTransposed","description":"Returns a new matrix transposed (<a href=\\"https://en.wikipedia.org/wiki/Transpose\\">Wikipedia</a>)","return":[{"type":"Matrix","description":"The matrix transpoosed"}]}]}'),Ze=JSON.parse('{"name":"Rotator","description":"A container for rotation information (Pitch, Yaw, Roll). All rotation values are stored in degrees.","operators":[{"name":"+","operator":"__add","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"},{"name":"-","operator":"__sub","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"},{"name":"*","operator":"__mul","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"}],"constructors":[{"name":"Default Constructor","parameters":[{"name":"pitch","type":"number","default":"0","description":"Pitch"},{"name":"yaw","type":"number","default":"pitch","description":"Yaw"},{"name":"roll","type":"number","default":"pitch","description":"Roll"}]}],"properties":[{"name":"Pitch","type":"number","description":"Rotation around the right axis (around Y axis), Looking up and down (0=Straight Ahead, +Up, -Down)"},{"name":"Yaw","type":"number","description":"Rotation around the up axis (around Z axis), Running in circles 0=East, +North, -South."},{"name":"Roll","type":"number","description":"Rotation around the forward axis (around X axis), Tilting your head, 0=Straight, +Clockwise, -CCW."}],"functions":[{"name":"GetForwardVector","description":"Get the forward (X) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the forward direction"}]},{"name":"GetRightVector","description":"Get the right (Y) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the right direction"}]},{"name":"GetUpVector","description":"Get the up (Z) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the up direction"}]},{"name":"RotateVector","description":"Rotate a vector rotated by this rotator.","parameters":[{"type":"Vector","name":"vector","description":"the vector to rotate by the Rotator"}],"return":[{"type":"Vector","description":"the rotated vector"}]},{"name":"Normalize","description":"In-place normalize, removes all winding and creates the \u201cshortest route\u201d rotation."},{"name":"UnrotateVector","description":"Returns the vector rotated by the inverse of this rotator.","parameters":[{"type":"Vector","name":"vector","description":"The vector to rotate by the inverse of the Rotator"}],"return":[{"type":"Vector","description":"the unrotated vector"}]},{"name":"Quaternion","description":"Get Rotation as a quaternion.","return":[{"type":"Quat","description":"the rotation as a quaternion"}]},{"name":"GetNormalized","description":"Returns a new Rotator normalized.","return":[{"type":"Rotator","description":"the normalized Rotator"}]},{"name":"IsNearlyZero","description":"Checks whether rotator is near to zero within a specified tolerance","parameters":[{"type":"number","name":"tolerance","description":"Tolerance to check","default":"0.000001"}],"return":[{"type":"boolean","description":"whether the rotator is nearly zero"}]},{"name":"IsZero","description":"Checks whether all components of the rotator are exactly zero","return":[{"type":"boolean","description":"whether the rotator is exactly zero"}]}],"static_functions":[{"name":"Random","description":"Generates a random rotation, with optional random roll","parameters":[{"type":"boolean","name":"roll","description":"Whether to use a random roll in the rotator, otherwise uses 0 for roll","default":"false"},{"type":"float","name":"min","description":"Minimum value","default":"-180"},{"type":"float","name":"max","description":"Maximum value","default":"180"}],"return":[{"type":"Rotator","description":"the random rotation"}]}]}'),et=JSON.parse('{"name":"Quat","description":"Floating point Quaternion that can represent a rotation about an axis in 3-D space","operators":[{"name":"+","operator":"__add","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"},{"name":"-","operator":"__sub","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"},{"name":"*","operator":"__mul","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"}],"constructors":[{"name":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"The quaternion\'s X-component"},{"name":"Y","type":"number","default":"X","description":"The quaternion\'s Y-component"},{"name":"Z","type":"number","default":"X","description":"The quaternion\'s Z-component"},{"name":"W","type":"number","default":"X","description":"The quaternion\'s W-component"}]}],"properties":[{"name":"X","type":"number","description":"The quaternion\'s X-component"},{"name":"Y","type":"number","description":"The quaternion\'s Y-component"},{"name":"Z","type":"number","description":"The quaternion\'s Z-component"},{"name":"W","type":"number","description":"The quaternion\'s W-component"}],"functions":[{"name":"Normalize","description":"In place normalize this Quaternion"},{"name":"Rotator","description":"Get the Rotator representation of this Quaternion","return":[{"type":"Rotator","description":"Rotator representation of this Quaternion"}]},{"name":"Inverse","description":"Returns the inverse of this Quaternion","return":[{"type":"Quat","description":"Inverse of this Quaternion"}]}]}'),tt=JSON.parse('{"name":"Vector","description":"A Vector composed of components (X, Y, Z) with floating point precision. Used mainly for entity position.","operators":[{"name":"+","operator":"__add","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"-","operator":"__sub","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"*","operator":"__mul","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"/","operator":"__div","lhs":"Vector","rhs":"Vector|number","return":"Vector"},{"name":"^","operator":"__pow","lhs":"Vector","rhs":"Vector|number","return":"Vector"}],"constructors":[{"name":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"X Coordinate"},{"name":"Y","type":"number","default":"X","description":"Y Coordinate"},{"name":"Z","type":"number","default":"X","description":"Z Coordinate"}]}],"properties":[{"name":"X","type":"number","description":"X Coordinate"},{"name":"Y","type":"number","description":"Y Coordinate"},{"name":"Z","type":"number","description":"Z Coordinate"}],"functions":[{"name":"Equals","description":"Check against another vector for equality, within specified error limits","description_long":"Check if the vector is equal to another vector, within specified error limits","return":[{"type":"boolean","description":"Are the vectors equal or not"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to compare to"},{"type":"number","name":"tolerance","default":"0.000001","description":"The error limits"}]},{"name":"Distance","description":"Distance between two points","description_long":"Returns the distance of 2 vectors","return":[{"type":"number","description":"The distance betweem the vectors"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to get the distance to"}]},{"name":"DistanceSquared","description":"Squared distance between two points","description_long":"Return the squared distance of 2 vectors","return":[{"type":"number","description":"The squared distance betweem the vectors"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to get the squared distance to"}]},{"name":"GetUnsafeNormal","description":"Calculates normalized version of vector without checking for zero length","description_long":"Returns the normalized version of vector without checking for zero length","return":[{"type":"Vector","description":"The unsafe normal"}],"parameters":[]},{"name":"GetSafeNormal","description":"Gets a normalized copy of the vector, checking it is safe to do so based on the length","description_long":"Returns a normalized copy of the vector, checking it is safe to do so based on the length","return":[{"type":"Vector","description":"The safe normal"}],"parameters":[]},{"name":"IsNearlyZero","description":"Checks whether vector is near to zero within a specified tolerance","return":[{"type":"boolean","description":"If the bool is near to zero"}],"parameters":[{"type":"number","name":"tolerance","default":"0.000001","description":"The error limits"}]},{"name":"IsZero","description":"Checks whether all components of the vector are exactly zero","return":[{"type":"boolean","description":"If all components of the vector are exactly zero"}]},{"name":"Normalize","description":"Normalize this vector in-place if it is larger than a given tolerance. Leaves it unchanged if not","return":[{"type":"boolean","description":"If the vector has been modified"}]},{"name":"Size","description":"Get the length (magnitude) of this vector","return":[{"type":"number","description":"The lenght of the vector"}]},{"name":"SizeSquared","description":"Get the squared length of this vector","return":[{"type":"number","description":"The squared length of the vector"}]},{"name":"Rotation","description":"Returns the orientation corresponding to the direction in which the vector points","return":[{"type":"Rotator","description":"The orientation of the vector"}]}]}'),at=JSON.parse('{"name":"Vector2D","description":"A Vector2D composed of components (X, Y) with floating point precision. Used mainly for HUD and Drawing on screen.","operators":[{"name":"+","operator":"__add","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"-","operator":"__sub","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"*","operator":"__mul","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"/","operator":"__div","lhs":"Vector2D","rhs":"Vector2D|number","return":"Vector2D"}],"constructors":[{"name":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"X Coordinate"},{"name":"Y","type":"number","default":"X","description":"Y Coordinate"}]}],"properties":[{"name":"X","type":"number","description":"X Coordinate"},{"name":"Y","type":"number","description":"Y Coordinate"}]}'),nt=JSON.parse('{"name":"Assets","description":"Retrieve Assets Data from Asset Packs.","authority":"both","static_functions":[{"name":"GetAnimations","description":"Gets a list containing all Animation Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetAssetPacks","description":"Gets a list containing information about all loaded Asset Packs","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"Name","type":"string"},{"name":"Path","type":"string"},{"name":"Author","type":"string"},{"name":"Version","type":"string"}]}]},{"name":"GetAssetPath","description":"Gets the file path of an asset","authority":"both","parameters":[{"type":"string","name":"asset","description":"The asset reference in the format <code>asset-pack::AssetKey</code>"},{"type":"AssetType","name":"asset_type","description":"The Asset Type"}],"return":[{"type":"string","description":"The file path defined in the Assets.toml"}]},{"name":"GetBlueprints","description":"Gets a list containing all Blueprints Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetMaps","description":"Gets a list containing all Map Asset Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetMaterials","description":"Gets a list containing all Materials Asset Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetOthers","description":"Gets a list containing all Other Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetParticles","description":"Gets a list containing all Particle Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetSkeletalMeshes","description":"Gets a list containing all Skeletal Mesh Asset Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetSounds","description":"Gets a list containing all Sound Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"GetStaticMeshes","description":"Gets a list containing all Static Mesh Assets Keys from an AssetPack","authority":"both","return":[{"type":"table[]","table_properties":[{"name":"key","type":"string"},{"name":"...","type":"any"}],"description":"array of tables containing all assets and it\'s metadata"}],"parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"Precache","description":"Manually adds an Asset to be loaded during the Player\'s loading screen","authority":"server","parameters":[{"type":"string","name":"asset_path","description":"The Asset Key"},{"type":"AssetType","name":"asset_type","description":"The Asset Type"}],"examples":[{"title":"Precaches a Static Mesh","content":"Assets.Precache(\\"my-asset-pack::SM_MyStaticMesh\\", AssetType.StaticMesh)"}]}]}'),it=JSON.parse('{"name":"Chat","description":"Configure, send and intercept chat messages.","authority":"both","static_functions":[{"name":"AddMessage","description":"Adds a chat message which will display local only","authority":"client","parameters":[{"type":"string","name":"message","description":""}]},{"name":"BroadcastMessage","description":"Sends a chat message to all Players","authority":"server","parameters":[{"type":"string","name":"message","description":"The message to send to all Players"}],"examples":[{"title":"Sends a message to everyone","content":"Chat.BroadcastMessage(\\"Welcome to the server!\\")"}]},{"name":"Clear","description":"Clears all messages","authority":"client"},{"name":"SendMessage","description":"Sends a chat message to a Player only","authority":"server","parameters":[{"type":"Player","name":"player","description":"The player to receive the message"},{"type":"string","name":"message","description":"The message"}]},{"name":"SetConfiguration","description":"Configures the Chat visuals and position","authority":"client","parameters":[{"type":"Vector2D","name":"screen_location","description":"","default":"Vector2D(-25, 0)"},{"type":"Vector2D","name":"size","description":"","default":"Vector2D(600, 250)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector2D(1, 0.5)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector2D(1, 0.5)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector2D(1, 0.5)"},{"type":"boolean","name":"justify","description":"","default":"true"},{"type":"boolean","name":"show_scrollbar","description":"","default":"true"}]},{"name":"SetVisibility","description":"Sets if the Chat is visible or not","authority":"client","parameters":[{"type":"boolean","name":"is_visible","description":""}]}],"events":[{"name":"ChatEntry","description":"Called when a new Chat Message is received, this is also triggered when new messages are sent programatically","description_long":"Called when a new Chat Message is received, this is also triggered when new messages are sent programatically<br/><br/>This is useful for creating your own Chat interface while still use the built-in system","authority":"client","arguments":[{"type":"string","name":"message","description":"The message"},{"type":"Player?","name":"player","description":"The player who sent the message or <code>nil</code> if this was called on client side or was sent through code"}]},{"name":"Close","description":"When player closes the Chat","authority":"client"},{"name":"Open","description":"When player opens the Chat","authority":"client"},{"name":"PlayerSubmit","description":"Called when a player submits a message in the chat","authority":"both","return":[{"type":"boolean","description":"Return false to prevent the message from being sent"}],"arguments":[{"type":"string","name":"message","description":"The message sent by the player"},{"type":"Player","name":"player","description":"The player who sent the message - on client it will always be the localplayer"}]}]}'),rt=JSON.parse('{"name":"Client","description":"Static Class present on Client side.","authority":"client","static_functions":[{"name":"CopyToClipboard","description":"Copies a text to Clipboard","authority":"client","parameters":[{"type":"string","name":"text"}]},{"name":"Disconnect","description":"Disconnects from the server","authority":"client"},{"name":"GetAllValuesKeys","description":"Gets a list of all values keys","authority":"client","return":[{"type":"string[]","description":"a list with all values keys"}],"relations":{"functions":["GetValue","SetValue"]}},{"name":"GetConnectedServerIP","description":"Gets the current connected server IP:Port","authority":"client","return":[{"type":"string"}]},{"name":"GetFrameTime","description":"Gets the current Frame Time","authority":"client","return":[{"type":"float","description":"The Frame Time"}]},{"name":"GetLocalPlayer","description":"Gets the local Player","authority":"client","return":[{"type":"Player","description":"The local Player"}]},{"name":"GetMap","description":"Returns the current Map","authority":"client","return":[{"type":"string","description":"The current Map"}]},{"name":"GetNearClipPlane","description":"Gets the Near Clip Plane value","authority":"client","return":[{"type":"float"}],"relations":{"static_functions":["SetNearClipPlane"]}},{"name":"GetPackages","description":"Returns a list of Packages running","authority":"client","return":[{"type":"table[]","description":"a list of Packages data","table_properties":[{"name":"title","type":"string"},{"name":"name","type":"string"},{"name":"type","type":"PackageType"},{"name":"version","type":"string"},{"name":"author","type":"string"}]}],"parameters":[{"type":"PackageType","name":"package_type_filter","description":"Which Package type to return. Leave it default (-1) to return all types.","default":"-1"}]},{"name":"GetTime","description":"Gets the Unix Epoch Time in milliseconds","authority":"client","return":[{"type":"integer","description":"the unix timestamp"}]},{"name":"GetValue","description":"Gets a value given a key","authority":"client","return":[{"type":"any","description":"Value at key or fallback if key doesn\'t exist"}],"parameters":[{"type":"string","name":"key","description":""},{"type":"any","name":"fallback","description":""}],"relations":{"functions":["GetAllValuesKeys"],"static_functions":["SetValue"]}},{"name":"IsPackageLoaded","description":"Returns if a Package is currently loaded","authority":"client","return":[{"type":"boolean","description":"If the package is loaded"}],"parameters":[{"type":"string","name":"package_name","description":""}]},{"name":"SetDebugEnabled","description":"Enables/Disables Debug settings and Client Console to be used","authority":"client","parameters":[{"type":"boolean","name":"enable_debug","description":""}]},{"name":"SetEscapeMenuText","description":"Sets the Escape Menu text","authority":"client","examples":[{"title":"Adding customized texts","content":["Client.SetEscapeMenuText([[","    <h1>Header 1</>","    <h2>Header 2</>","    <h3>Header 3</>","    <strong>Strong</>","    Normal Text","]])"]}],"parameters":[{"type":"string","name":"text","description":"Supports using <code>&#60h1&#62</code>, <code>&#60h2&#62</code>, <code>&#60h3&#62</code> and <code>&#60strong&#62</code> tags in the text."}]},{"name":"SetHighlightColor","description":"Changes the Highlight Color for highlighted actors at a specific Index","description_long":"Changes the Highlight Color for highlighted actors at a specific Index. Multiply it by 5 (or more) for having a glowing effect.<br/><br/><code>HighlightMode.Always</code> will always be visible, even behind walls<br/><code>HighlightMode.OnlyHidden</code> will only be visible if behind a wall<br/><code>HighlightMode.OnlyVisible</code> will only be visible if not behind a wall<br/><br/>Note: You can only have 3 differents indexes (0, 1 or 2).","authority":"client","parameters":[{"type":"Color","name":"highlight_color","description":""},{"type":"integer","name":"index","description":""},{"type":"HighlightMode","name":"mode","description":"","default":"HighlightMode.Always"}]},{"name":"SetNearClipPlane","description":"Sets the Near Clip Plane","authority":"client","parameters":[{"type":"float","name":"near_clip_plane","description":""}],"relations":{"static_functions":["GetNearClipPlane"]}},{"name":"SetOutlineColor","description":"Changes the Outline Color for outlined actors at a specific Index","description_long":"Changes the Outline Color for outlined actors at a specific Index. Multiply it by 5 (or more) for having a glowing effect.<br/><br/>Note: You can only have 3 differents indexes (0, 1 or 2), and the default Outline color index used by the game is  <code>0</code> (when interacting with stuff).","authority":"client","parameters":[{"type":"Color","name":"outline_color","description":""},{"type":"integer","name":"index","description":"","default":"0"},{"type":"float","name":"thickness","description":"","default":"2"}]},{"name":"SetValue","description":"Sets a global value in the Client, which can be accessed from anywhere (client side)","description_long":"Sets a global value in the Client, which can be accessed from anywhere (client side)<br/><br/>Please refer to <a href=\\"/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"client","parameters":[{"type":"string","name":"key","description":""},{"type":"any","name":"value","description":""}],"relations":{"functions":["GetAllValuesKeys"],"static_functions":["GetValue"]}},{"name":"Subscribe","description":"Subscribes for an Event","authority":"client","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":""},{"type":"function","name":"callback","description":""}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"client","parameters":[{"type":"string","name":"event_name","description":""},{"type":"function","name":"callback","description":"","default":"nil"}]}],"events":[{"name":"SpawnLocalPlayer","description":"Called when the local player spawns (just after the game has loaded)","authority":"client","arguments":[{"type":"Player","name":"local_player","description":""}]},{"name":"Tick","description":"Called Every Frame. Do not abuse","authority":"client","arguments":[{"type":"float","name":"delta_time","description":""}]},{"name":"WindowFocusChange","description":"Called when the game is focused/unfocused","authority":"client","arguments":[{"type":"boolean","name":"is_focused","description":"If it\'s focused"}]}]}'),ot=JSON.parse('{"name":"Console","description":"Exposes access to registering Console Commands and Logging messages.","authority":"both","static_functions":[{"name":"Error","description":"Logs a red error in the console with stack information","description_long":"Logs a red error in the console with stack information, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]},{"name":"Log","description":"Logs and formats a message in the console","description_long":"Logs and formats a message in the console, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}],"examples":[{"title":"Basic","content":"Console.Log(\\"Hello, world!\\")","output":"Hello, world!"},{"title":"With formatting (string)","content":["local player_name = \\"John\\"","Console.Log(\\"Hello %s!\\", player_name)"],"output":"Hello John!"},{"title":"With formatting (integer)","content":["local health = 50","local max_health = 100","Console.Log(\\"Player health: %d/%d\\", health, max_health)"],"output":"Player health: 50/100"}]},{"name":"RegisterCommand","description":"Registers a new Console Command","authority":"both","parameters":[{"type":"string","name":"command","description":"The command"},{"type":"function","name":"callback","description":"The callback to be called when the command is inputted","function_parameters":[{"name":"params","type":"any..."}]},{"type":"string","name":"description","description":"The command description to display in the console"},{"type":"string[]","name":"parameters","description":"The list of supported parameters to display in the console"}],"examples":[{"title":"Registering to a command that sends a message to everyone","content":["Console.RegisterCommand(\\"hello\\", function(text)","    Console.Log(\\"Sending a \'Hello %s\' to everyone!\\", text)","    Chat.BroadcastMessage(\\"Hello \\" .. text)","end, \\"says a message to everyone\\", { \\"my_text\\" })"]}]},{"name":"RunCommand","description":"Runs a Console Command programmatically","authority":"both","parameters":[{"type":"string","name":"command","description":"The command"}],"examples":[{"title":"Running a Console Command","content":"Console.RunCommand(\\"hello\\")"}]},{"name":"Warn","description":"Logs an orange warning in the console with stack information","description_long":"Logs an orange warning in the console with stack information, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]}],"events":[{"name":"Close","description":"When player closes the Console","authority":"client"},{"name":"LogEntry","description":"Called when a log is received","authority":"both","arguments":[{"type":"string","name":"text","description":"Log Message"},{"type":"LogType","name":"type","description":"Type of the log"}]},{"name":"Open","description":"When player opens the Console","authority":"client"},{"name":"PlayerSubmit","description":"Called when a console command is submitted","authority":"both","arguments":[{"type":"string","name":"text","description":"Text submitted"}],"examples":[{"title":"Handles Console Inputs","content":["if (text == \\"some_text\\") then","    Console.Log(\\"Player submitted some_text!\\")","end"]}]}]}'),st=JSON.parse('{"name":"Debug","description":"Draws Debug shapes in the world.","authority":"client","static_functions":[{"name":"DrawBox","description":"Draws a Debug box in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Vector","name":"extent","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"Color","name":"color","description":""},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawCoordinateSystem","description":"Draws a Debug coordinate system in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"float","name":"size","description":"","default":"100"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawCrosshairs","description":"Draws a Debug crosshair in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"float","name":"size","description":"","default":"100"},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawCylinder","description":"Draws a Debug cylinder in the world","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""},{"type":"float","name":"radius","description":""},{"type":"integer","name":"segments","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawDirectionalArrow","description":"Draws a Debug directional arrow in the world","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""},{"type":"float","name":"arrow_size","description":"","default":"100"},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawLine","description":"Draws a Debug Line in the World","authority":"client","parameters":[{"type":"Vector","name":"start_position","description":""},{"type":"Vector","name":"end_position","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawPoint","description":"Draws a Debug Point in the World","authority":"client","parameters":[{"type":"Vector","name":"start_position","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"size","description":"","default":"10"}]},{"name":"DrawSphere","description":"Draws a Debug sphere in the World","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"float","name":"radius","description":""},{"type":"integer","name":"segments","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"float","name":"thickness","description":"","default":"0"}]},{"name":"DrawString","description":"Draws a Debug string in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"string","name":"text","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default":"5"},{"type":"boolean","name":"draw_shadow","description":"","default":"false"},{"type":"float","name":"font_scale","description":"","default":"1"}]}]}'),lt=JSON.parse('{"name":"Discord","description":"Initialize and set Discord activity.","authority":"client","static_functions":[{"name":"Initialize","description":"Initializes the Discord Integration with your custom client_id","authority":"client","parameters":[{"type":"integer","name":"client_id","description":""}]},{"name":"SetActivity","description":"Communicates with Discord and sets a custom user status","authority":"client","parameters":[{"type":"string","name":"state","description":""},{"type":"string","name":"details","description":""},{"type":"string","name":"large_image","description":""},{"type":"string","name":"large_text","description":""},{"type":"string","name":"reset_time","description":"Whether or not to reset current activity elapsed time","default":"false"}]}]}'),ct=JSON.parse('{"name":"Events","description":"Subscribe for user-defined Events.","authority":"both","static_functions":[{"authority":"server","name":"BroadcastRemote","description":"Calls an Event on Server which will be triggered in all Client\'s Packages of all Players","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"BroadcastRemoteDimension","description":"Calls an Event on Server which will be triggered in all Client\'s Packages of all Players in that dimension","parameters":[{"type":"integer","name":"dimension","description":"The Dimension to send this event"},{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"both","name":"Call","description":"Calls an Event which will be triggered in all Local Packages","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"client","name":"CallRemote","description":"Calls an Event if on Client which will be triggered in all Server Packages","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"CallRemote","description":"Calls an Event if on Server which will be triggered in all Client\'s Packages of a specific Player","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"Player","name":"player","description":"The remote player to send this event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"both","return":[{"type":"function","description":"the subscribed callback itself"}],"name":"Subscribe","description":"Subscribes for an user-created event which will be triggered for only local called events","parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"authority":"both","return":[{"type":"function","description":"the subscribed callback itself"}],"name":"SubscribeRemote","description":"Subscribes for an user-created event which will be triggered for only remote called events","parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"authority":"both","name":"Unsubscribe","description":"Unsubscribes from all subscribed events in this Package with that event name, optionally passing the function to unsubscribe only that callback","parameters":[{"type":"string","name":"event_name","description":"The Event Name to unsubscribe"},{"type":"function","name":"callback","default":"nil","description":"The callback function to unsubscribe"}]},{"authority":"both","name":"UnsubscribeRemote","description":"Unsubscribes from all subscribed remote events in this Package with that event name, optionally passing the function to unsubscribe only that callback","parameters":[{"type":"string","name":"event_name","description":"The Event Name to unsubscribe"},{"type":"function","name":"callback","default":"nil","description":"The callback function to unsubscribe"}]}]}'),pt=JSON.parse('{"name":"HTTP","description":"HTTP Requests Interface.","authority":"both","static_functions":[{"name":"Request","return":[{"type":"table","table_properties":[{"name":"Status","type":"integer"},{"name":"Data","type":"string"}]}],"description":"Makes a synchronous HTTP Request.<br/><br/>The request will be made synchronously and will freeze the server until it\'s done.","authority":"server","parameters":[{"type":"string","name":"uri","description":"The main URI (the base address)"},{"type":"string","name":"endpoint","default":"","description":"The endpoint"},{"type":"HTTPMethod","name":"method","default":"HTTPMethod.GET","description":"The HTTP Method to be used"},{"type":"string","name":"data","default":"","description":"Payload"},{"type":"string","name":"content_type","default":"application/json","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\'>Content Type</a> to be used"},{"type":"boolean","name":"compress","default":"false","description":"Whether or not to compress the content with gzip"},{"type":"table","name":"headers","default":"{}","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\'>Headers</a> to be used"}]},{"name":"RequestAsync","description":"Makes an asynchronous HTTP Request","description_long":"Makes an asynchronous HTTP Request.<br/><br/>The request will be made asynchronously and returned safetly in the same thread in the callback provided when it\'s done.<br/><br/><b>Note:</b> If a request is still running when unloading packages, the server will freeze until it\'s finished, then the package will unload.","authority":"both","parameters":[{"type":"string","name":"uri","description":"The main URI (the base address)"},{"type":"string","name":"endpoint","default":"","description":"The endpoint"},{"type":"HTTPMethod","name":"method","default":"HTTPMethod.GET","description":"The HTTP Method to be used"},{"type":"string","name":"data","default":"","description":"Payload"},{"type":"string","name":"content_type","default":"application/json","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\'>Content Type</a> to be used"},{"type":"boolean","name":"compress","default":"false","description":"Whether or not to compress the content with gzip"},{"type":"table","name":"headers","default":"{}","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\'>Headers</a> to be used"},{"type":"function","name":"callback","default":"nil","description":"The result","function_parameters":[{"name":"status","type":"integer","description":"The HTTP status"},{"name":"data","type":"string","description":"The response data"}]}]},{"name":"SetConnectionTimeout","description":"Sets the global Connection Timeout in seconds","authority":"both","parameters":[{"type":"integer","name":"connection_timeout","description":"The timeout in seconds"}]},{"name":"SetReadWriteTimeout","description":"Sets the global Read and Write Timeout in seconds","authority":"both","parameters":[{"type":"integer","name":"read_write_timeout","description":"The timeout in seconds"}]}]}'),dt=JSON.parse('{"name":"Input","description":"Create custom keybindings and retrieve input information.","authority":"client","static_functions":[{"authority":"client","name":"Bind","description":"Binds a function to an Input defined using <code>Register</code> or from the game","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"InputEvent","name":"input_event","description":"Which event to register (Released/Pressed)"},{"type":"function","name":"callback","description":"The function to trigger","function_parameters":[{"name":"delta?","type":"float"}]}]},{"authority":"client","name":"GetGameKeyBindings","description":"Returns a table with all Game KeyBindings","return":[{"type":"table","table_properties_custom":"\\n\\t\\"[BINDING_NAME_01]\\" = {\\n\\t\\t\\"[KEY_01]\\",\\n\\t\\t\\"[KEY_02]\\",\\n\\t\\t...\\n\\t},\\n\\t\\"[BINDING_NAME_02]\\" = {\\n\\t\\t\\"[KEY_03]\\",\\n\\t\\t\\"[KEY_04]\\",\\n\\t\\t...\\n\\t},\\n\\t..."}]},{"authority":"client","name":"GetKeyCode","description":"Gets the key code of a key","parameters":[{"type":"string","name":"key_name"}],"return":[{"type":"integer"}]},{"authority":"client","name":"GetKeyIcon","description":"Gets the icon path of a key","parameters":[{"type":"string","name":"key_name"},{"type":"boolean","name":"dark_mode","default":"false"}],"return":[{"type":"string"}]},{"authority":"client","name":"GetMappedKeys","description":"Returns the keys bound to a keybinding","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"}],"return":[{"type":"string[]","description":"list of all keys"}]},{"authority":"client","name":"GetModifierKeys","description":"Gets the currently pressed modifier keys","return":[{"type":"KeyModifier"}],"examples":[{"title":"Checks if has Shift pressed","content":["local modifier_keys = Input.GetModifierKeys()","local has_shift_pressed = modifier_keys & KeyModifier.LeftShiftDown"],"output":"true"}]},{"authority":"client","name":"GetScriptingKeyBindings","description":"Returns a table with all Scripting KeyBindings","return":[{"type":"table","table_properties_custom":"\\n\\t\\"[BINDING_NAME_01]\\" = {\\n\\t\\t\\"[KEY_01]\\",\\n\\t\\t\\"[KEY_02]\\",\\n\\t\\t...\\n\\t},\\n\\t\\"[BINDING_NAME_02]\\" = {\\n\\t\\t\\"[KEY_03]\\",\\n\\t\\t\\"[KEY_04]\\",\\n\\t\\t...\\n\\t},\\n\\t..."}]},{"name":"InputKey","description":"Forces an Input Key event on Local Player","description_long":"Forces an Input Key event on Local Player<br/><br/>This won\'t trigger any Scripting event as it bypass internal validations","authority":"client","parameters":[{"type":"string","name":"key_name","description":"Key Name to input"},{"type":"InputEvent","name":"input_event","description":"Which Event to input"},{"type":"float","name":"amount_depressed","description":"The amount pressed","default":"1"}]},{"name":"IsInputEnabled","description":"","authority":"client","return":[{"type":"boolean","description":"if the input is visible"}],"relations":{"static_functions":["SetInputEnabled"]}},{"name":"IsKeyDown","description":"Returns if a key is being pressed","authority":"client","return":[{"type":"boolean","description":"if the key is pressed"}],"parameters":[{"type":"string","name":"key_name","description":""}]},{"name":"IsMouseEnabled","description":"","authority":"client","return":[{"type":"boolean","description":"if the mouse is visible"}],"relations":{"static_functions":["SetMouseEnabled"]}},{"authority":"client","name":"Register","description":"Registers a keybinding to a default key","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key_name","description":"The Key to use by default if this wasn\'t set before"},{"type":"string","name":"description","description":"Text to show on Key Bindings Settings"}]},{"authority":"client","name":"ResetBindings","description":"Resets all bound functions by this Package"},{"name":"SetInputEnabled","description":"Toggles Local Player input","authority":"client","parameters":[{"type":"boolean","name":"enable_input","description":""}],"relations":{"static_functions":["IsInputEnabled"]}},{"name":"SetMouseCursor","description":"Sets the current Mouse Cursor type","authority":"client","parameters":[{"type":"CursorType","name":"cursor_type","description":""}]},{"name":"SetMouseEnabled","description":"Displays/Hides Mouse Cursor","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}],"relations":{"static_functions":["IsMouseEnabled"]}},{"authority":"client","name":"Unbind","description":"Unbinds an Input function","description_long":"Unbinds all Input functions related to the given binding_name and input_event","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"InputEvent","name":"input_event","description":"Which event to register (Released/Pressed)"},{"type":"function","name":"callback","description":"The specific function to unbind","default":"nil"}]},{"authority":"client","name":"Unregister","description":"Unregister a keybinding","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"}]}],"events":[{"name":"KeyBindingChange","description":"A key binding has been changed through the settings","authority":"client","arguments":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key","description":"The new key associated"},{"type":"float","name":"scale","description":"The scale input (usually 1 or -1)"}]},{"name":"KeyDown","description":"A keyboard key is being pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"KeyPress","description":"A keyboard key has been pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"KeyUp","description":"A keyboard key has been released","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"MouseDown","description":"A mouse button has been pressed / is being pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]},{"name":"MouseEnable","description":"When mouse cursor is displayed/hidden","authority":"client","arguments":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"MouseMove","description":"Called when the mouse moves","authority":"client","arguments":[{"type":"float","name":"cursor_delta_x","description":""},{"type":"float","name":"cursor_delta_y","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]},{"name":"MouseScroll","description":"Called when the mouse scrolls","authority":"client","arguments":[{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""},{"type":"float","name":"delta","description":""}]},{"name":"MouseUp","description":"A mouse button has been released","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]}]}'),ht=JSON.parse('{"name":"Level","description":"Work with Unreal level in runtime.","authority":"client","static_functions":[{"name":"CallLevelBlueprintEvent","return":[{"type":"any...","description":"the function return values"}],"description":"Calls a Level Blueprint custom event (which can be added when creating levels through Unreal Engine)","authority":"client","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"authority":"client","name":"GetStreamLevels","description":"Gets a list of all Stream Levels","return":[{"type":"table[]","table_properties":[{"name":"name","type":"string","description":"The short name of the Level"},{"name":"path","type":"string","description":"The full path to the Level file"},{"name":"is_loaded","type":"boolean","description":"If the Level was marked to be loaded"},{"name":"is_visible","type":"boolean","description":"If the Level is currently visible"},{"name":"is_temp","type":"boolean","description":"If the Level is temporary (an instance loaded, shouldn\'t be directly unloaded)"}]}]},{"authority":"client","name":"LoadStreamLevel","description":"Loads a Level in runtime","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"should_block_on_load","default":"false","description":"If this should be a blocking operation - the game will freeze"},{"type":"boolean","name":"make_visible_after_load","default":"true","description":"If this should be visible automatically after loaded"}]},{"authority":"client","name":"SetStreamLevelVisibility","description":"Sets a Stream Level visibility","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"visibility","description":"If this level should be visible"}]},{"authority":"client","name":"UnloadStreamLevel","description":"Unloads a Level in runtime","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"should_block_on_unload","default":"false","description":"If this should be a blocking operation - the game will freeze"}]}],"events":[{"name":"StreamLevelHide","authority":"client","description":"Called when a Stream Level is hidden","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelLoad","authority":"client","description":"Called when a Stream Level is loaded","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelShow","authority":"client","description":"Called when a Stream Level is shown","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelUnload","authority":"client","description":"Called when a Stream Level is unloaded","arguments":[{"type":"string","name":"level_name"}]}]}'),mt=JSON.parse('{"name":"Navigation","description":"Creates a reachable path into navigable space.","authority":"client","static_functions":[{"name":"FindPathToLocation","description":"Finds a Path given Start and End location","description_long":"Finds a Path given Start and End location (only if map has a NavMesh)","authority":"client","return":[{"type":"table","table_properties":[{"name":"IsValid","type":"boolean"},{"name":"IsPartial","type":"boolean"},{"name":"Length","type":"number"},{"name":"Cost","type":"number"},{"name":"PathPoints","type":"Vector[]"}]}],"parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""}]},{"name":"GetRandomPointInNavigableRadius","description":"Finds random, point in navigable space restricted to Radius around Origin. Resulting location is not tested for reachability from the Origin","description_long":"Finds random, point in navigable space restricted to Radius around Origin. Resulting location is not tested for reachability from the Origin (only if map has a NavMesh)","authority":"client","return":[{"type":"Vector","description":"The random point"}],"parameters":[{"type":"Vector","name":"origin","description":""},{"type":"float","name":"radius","description":""}]},{"name":"GetRandomReachablePointInRadius","description":"Finds random, reachable point in navigable space restricted to radius around origin","description_long":"Finds random, reachable point in navigable space restricted to radius around origin (only if map has a NavMesh)","authority":"client","return":[{"type":"Vector","description":"The random point"}],"parameters":[{"type":"Vector","name":"origin","description":""},{"type":"float","name":"radius","description":""}]}]}'),ut=JSON.parse('{"name":"Package","description":"Class which represents the current Package","authority":"both","static_functions":[{"name":"Export","description":"Makes any variable available in the global scope","authority":"both","parameters":[{"type":"string","name":"variable_name","description":"Name of the variable to export"},{"type":"any","name":"value","description":"Value to be set in the global scope"}]},{"name":"FlushPersistentData","description":"Flushes the Persistent Data pending changes to disk immediately","description_large":"Flushes the Persistent Data pending changes to disk immediately. Note: this operation is already performed automatically under the hood, it is not necessary to keep always flushing and should only be used when really needed, as disk writing is a slow operation","authority":"both"},{"name":"GetCompatibilityVersion","description":"Returns the package compatibility version","authority":"both","return":[{"type":"string","description":"The package compatibility version"}]},{"name":"GetDirectories","description":"Gets a list of all directories in this package","description_long":"Gets a list of all files in this package, optionally with filters","authority":"both","parameters":[{"type":"string","name":"path_filter","default":"","description":"Path filter"}],"return":[{"type":"string[]","description":"List of directories"}]},{"name":"GetFiles","description":"Gets a list of all files in this package","description_long":"Gets a list of all files in this package, optionally with filters","authority":"both","parameters":[{"type":"string|table","name":"path_filter","default":"","description":"Path filter"},{"type":"string","name":"extension_filter","default":"","description":"Example: <code>.lua</code>"}],"return":[{"type":"string[]","description":"List of files"}]},{"name":"GetName","description":"Returns the package name/path","authority":"both","return":[{"type":"string","description":"The package name/path"}]},{"name":"GetPersistentData","description":"Gets the Persistent Value from the disk","description_large":"Gets a Persistent Value from the disk<br/>Pass no parameter to return the whole table, or a key to get a specific value","authority":"both","return":[{"type":"table","description":"Persistent values from disk"}],"parameters":[{"type":"string?","name":"key","default":"","description":"The key to get the data"}],"relations":{"static_functions":["SetPersistentData"]}},{"name":"GetTitle","description":"Returns the package title","authority":"both","return":[{"type":"string","description":"The package title"}]},{"name":"GetVersion","description":"Returns the package version","authority":"both","return":[{"type":"string","description":"The package version"}]},{"name":"Require","description":"Includes new .lua files","description_long":"Includes new .lua files<br/><br/>We currently support 5 searchers, which are looked in the following order:<br/><ol><li>Relative to <code>current-file-path/</code></li><li>Relative to <code>current-package/Client/</code> or <code>current-package/Server/</code> (depending on your side)</li><li>Relative to <code>current-package/Shared/</code></li><li>Relative to <code>current-package/</code></li><li>Relative to <code>Packages/</code></li></ol>","authority":"both","parameters":[{"type":"string","name":"script_file","description":"Path to the script file to require"},{"type":"boolean?","name":"force_load","description":"Whether to force loading this file even if it was already loaded"}],"return":[{"type":"any","description":"Any return values from the included file"}]},{"name":"SetPersistentData","description":"Sets a Persistent Value which will be saved to disk","authority":"both","parameters":[{"type":"string","name":"key","description":"Key to index data into"},{"type":"any","name":"value","description":"Value to set at the key"}],"relations":{"static_functions":["GetPersistentData"]}},{"name":"Subscribe","description":"Subscribes to an Event","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event to subscribe to"},{"type":"function","name":"callback","description":"Callback to run on the event occurring"}],"return":[{"type":"function","description":"The function callback"}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event to unsubscribe to"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to specifically unsubscribe to"}]}],"events":[{"name":"Load","authority":"both","description":"Called when this package is loaded","description_long":"Called when this package is loaded<br/><br/>This event is triggered differently depending on the situation:<br/><ul><li>When the <b>server starts</b> or you run <code>package reload all</code> the event triggers only after ALL packages are loaded.</li><li>In all other cases (<code>package load/reload</code> or <code>Package.Load/Reload</code>) the event is triggered immediately after the package is loaded/reloaded.</li></ul>"},{"name":"Unload","authority":"both","description":"Called when this package is unloaded"}]}'),yt=JSON.parse('{"name":"PostProcess","authority":"client","description":"Interaction with Post Process effects.","static_functions":[{"authority":"client","name":"RemoveMaterial","description":"Removes the current Post Process Material"},{"authority":"client","name":"SetBloom","description":"Set Post Process Bloom Settings","parameters":[{"type":"float","name":"intensity","default":"0.675"},{"type":"float","name":"threshold","default":"-1"}]},{"authority":"client","name":"SetChromaticAberration","description":"Set Post Process Chromatic Abberation Settings","parameters":[{"type":"float","name":"intensity","default":"0"},{"type":"float","name":"start_offset","default":"0"}]},{"authority":"client","name":"SetExposure","description":"Set Post Process Exposure Settings","parameters":[{"type":"float","name":"exposure_compensation","default":"1"},{"type":"float","name":"min_ev100","default":"-10"},{"type":"float","name":"max_ev100","default":"20"},{"type":"float","name":"low_percent","default":"10"},{"type":"float","name":"high_percent","default":"90"}]},{"authority":"client","name":"SetFilm","description":"Set Post Process Film Settings","parameters":[{"type":"float","name":"slope","default":"0.8"},{"type":"float","name":"toe","default":"0.55"},{"type":"float","name":"shoulder","default":"0.26"},{"type":"float","name":"black_clip","default":"0"},{"type":"float","name":"white_clip","default":"0.3"}]},{"authority":"client","name":"SetGlobalSaturation","description":"Set Post Process Saturation Colors. Use Alpha for overall Saturation intensity","parameters":[{"type":"Color","name":"color"}]},{"authority":"client","name":"SetImageEffects","description":"Set Post Process Image Effect Settings","parameters":[{"type":"float","name":"vignette_intensity","default":"0.6"},{"type":"float","name":"grain_jitter","default":"0"},{"type":"float","name":"grain_intensity","default":"0"}]},{"authority":"client","name":"SetLookupTable","description":"Set Post Process Lookup Table (LUT) Texture","parameters":[{"type":"ImagePath","name":"texture_path"}]},{"authority":"client","name":"SetMaterial","description":"Sets a Post Process Material","parameters":[{"type":"MaterialPath","name":"material_path","description":"The Material Asset to set as Post Process"}]},{"authority":"client","name":"SetSunAngle","description":"Sets the sun\'s angle (0-360)","parameters":[{"type":"float","name":"angle"}]}]}'),ft=JSON.parse('{"name":"Server","description":"Server represents all Server controls in the Server side.","authority":"server","static_functions":[{"authority":"server","name":"BanByAccountID","description":"Ban the player from the server by it\'s Account ID, ideal for banning from inside PlayerConnect event","parameters":[{"name":"player_account_id","type":"string"},{"name":"reason","type":"string"}]},{"name":"ChangeMap","description":"Restarts the server in a new Map, restarts all packages and reconnects all players","authority":"server","parameters":[{"type":"string","name":"map_path","description":"The new map to load"}]},{"name":"GetAllValuesKeys","description":"Gets a list of all values keys","authority":"server","return":[{"type":"string[]","description":"a list with all values keys"}],"relations":{"functions":["GetValue","SetValue"]}},{"name":"GetCompressionLevel","description":"Returns the server Compression Level being used","authority":"server","return":[{"type":"integer","description":"the server Compression Level"}]},{"name":"GetCustomSettings","description":"Returns the Server Custom Settings passed as parameter or New Game screen","authority":"server","return":[{"type":"table[]","description":"a list of the Custom Settings","table_properties_custom":"\\n\\t\\"[KEY_01]\\" = \\"[VALUE_01]\\",\\n\\t\\"[KEY_02]\\" = \\"[VALUE_02]\\",\\n\\t..."}]},{"name":"GetDescription","description":"Returns the Server Description","authority":"server","return":[{"type":"string","description":"the Server Description"}],"relations":{"static_functions":["SetDescription"]}},{"name":"GetIP","description":"Returns the server Public IP","authority":"server","return":[{"type":"string","description":"the server Public IP"}]},{"name":"GetMap","description":"Returns the current Map Package name","authority":"server","return":[{"type":"string","description":"the current map package"}]},{"name":"GetMapAsset","description":"Returns the current Map Asset reference","authority":"server","return":[{"type":"string","description":"the current map asset"}]},{"name":"GetMapConfig","description":"Returns a list of the Custom Config of the current map (stored in the MAP_NAME.toml)","authority":"server","return":[{"type":"table","description":"a list of the Custom Config of the current map"}]},{"name":"GetMapSpawnPoints","description":"Returns a list of the Spawn Points of the current map (stored in the MAP_NAME.toml)","authority":"server","return":[{"type":"table[]","description":"a list of the Spawn Points of the current map","table_properties":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"}]}]},{"name":"GetMaxPlayers","description":"Returns the Max Players configured","authority":"server","return":[{"type":"integer","description":"the max players configured"}],"relations":{"static_functions":["SetMaxPlayers"]}},{"name":"GetName","description":"Returns the Server Name","authority":"server","return":[{"type":"string","description":"The Server Name"}],"relations":{"static_functions":["SetName"]}},{"name":"GetPackages","description":"Returns a list of Packages running, optionally returns all Packages installed in the server","authority":"server","return":[{"type":"table[]","description":"a list of Packages data","table_properties":[{"name":"title","type":"string"},{"name":"name","type":"string"},{"name":"type","type":"PackageType"},{"name":"version","type":"string"},{"name":"author","type":"string"}]}],"parameters":[{"type":"boolean","name":"only_loaded","description":"Set to true the function return only loaded and running packages. Caution: setting to false will retrieve Packages list from disk, which is a slow operation!","default":"true"},{"type":"PackageType","name":"package_type_filter","description":"Which Package type to return. Leave it default (-1) to return all types.","default":"-1"}]},{"name":"GetPort","description":"Returns the server Port","authority":"server","return":[{"type":"integer","description":"the server Port"}]},{"name":"GetQueryPort","description":"Returns the server QueryPort","authority":"server","return":[{"type":"integer","description":"the server QueryPort"}]},{"name":"GetTickRate","description":"Returns the Configured Tick Rate","authority":"server","return":[{"type":"integer","description":"the server Tick Rate"}]},{"name":"GetTime","description":"Gets the Unix Epoch Time in milliseconds","authority":"server","return":[{"type":"integer","description":"the unix timestamp"}]},{"name":"GetValue","description":"Gets a value given a key","authority":"server","return":[{"type":"any","description":"Value at key or fallback if key doesn\'t exist"}],"parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"fallback","description":"Fallback Value if key doesn\'t exist"}],"relations":{"functions":["GetAllValuesKeys"],"static_functions":["SetValue"]}},{"name":"GetVersion","description":"Returns the server version","authority":"server","return":[{"type":"string","description":"the server version"}]},{"name":"IsAnnounced","description":"Returns if the Server is announced in the Master List","authority":"server","return":[{"type":"boolean","description":"if the Server is announced in the Master List"}]},{"name":"IsPackageLoaded","description":"Returns if a Package is currently loaded","authority":"server","return":[{"type":"boolean","description":"If the package is loaded"}],"parameters":[{"type":"string","name":"package_name","description":""}]},{"authority":"server","name":"KickByAccountID","description":"Kicks the player from the server by it\'s Account ID, ideal for kicking from inside PlayerConnect event","parameters":[{"name":"player_account_id","type":"string"},{"name":"reason","type":"string"}]},{"name":"LoadPackage","description":"Loads a Package","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to load"}],"return":[{"type":"boolean","description":"if the Package was loaded"}],"relations":{"functions":["ReloadPackage","UnloadPackage"]}},{"name":"ReloadPackage","description_long":"Reloads a Package<br/>Note: the package is effectively reloaded in the next server tick","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to reload"}],"return":[{"type":"boolean","description":"if the Package was found"}],"relations":{"functions":["LoadPackage","UnloadPackage"]}},{"name":"Restart","description":"Restarts the server, reloading all Packages and reconnecting all Players","authority":"server"},{"name":"SetDescription","description":"Sets the description of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"description","description":"The new description"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}],"relations":{"static_functions":["GetDescription"]}},{"name":"SetLogo","description":"Sets the logo of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"logo_url","description":"The new logo"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetMaxPlayers","description":"Sets the maximum player slots of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"integer","name":"max_players","description":"The maximum players"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}],"relations":{"static_functions":["GetMaxPlayers"]}},{"name":"SetName","description":"Sets the name of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"name","description":"The new name"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}],"relations":{"static_functions":["GetName"]}},{"name":"SetPassword","description":"Sets the password of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"password","description":"The new password"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetValue","description":"Sets a global value in the Server, which can be accessed from anywhere (server side)","authority":"server","parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"value","description":"Value"},{"name":"sync_on_client","type":"boolean","default":"false","description":"If enabled will sync this value through all clients, accessible through Client.GetValue() static class."}],"relations":{"functions":["GetAllValuesKeys"],"static_functions":["GetValue"]}},{"name":"Stop","description":"Stops the server","authority":"server"},{"name":"Subscribe","description":"Subscribes for an Event","authority":"server","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":"The name of the Event"},{"type":"function","name":"function","description":"Callback function"}]},{"name":"Unban","description":"Unbans a Player by it\'s account ID","authority":"server","parameters":[{"type":"string","name":"account_id","description":"nanos account ID"}]},{"name":"UnloadPackage","description":"Unloads a Package","description_long":"Unloads a Package<br/>Note: the package is effectively unloaded in the next server tick","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package you want unload"}],"return":[{"type":"boolean","description":"if the Package was found"}],"relations":{"functions":["LoadPackage","ReloadPackage"]}},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The name of the Events"},{"type":"function","name":"function","description":"Callback function","default":"nil"}]}],"events":[{"name":"ChangeMap","description":"Called when the map changes","description_long":"Called when the map changes. This is always called just before Restart event","authority":"server","arguments":[{"type":"string","name":"old_map"},{"type":"string","name":"new_map"}]},{"name":"PlayerConnect","description":"Called when a player is attempting to connect to the server","description_long":"Called when a player is attempting to connect to the server<br/><br/>Use Server.KickByAccountID() or Server.BanByAccountID() to kick or ban the player from inside this event.","authority":"server","arguments":[{"type":"string","name":"IP","description":"IP of the player"},{"type":"string","name":"player_account_ID","description":"Account ID of the player"},{"type":"string","name":"player_name","description":"Player name"},{"type":"string","name":"player_steam_ID","description":"SteamID of the player"}],"relations":{"functions":["KickByAccountID","BanByAccountID"]}},{"name":"Restart","description":"Server has been restarted","authority":"server"},{"name":"Start","description":"Server has been started","authority":"server"},{"name":"Stop","description":"Server has been stopped","authority":"server"},{"name":"Tick","description":"Triggered every 33ms by default","description_long":"Triggered every 33ms by default<br/><br/>Caution: Only small operations should be performed here, otherwise this can lead to server lag and delays","authority":"server","arguments":[{"type":"float","name":"delta_time","description":""}]}]}'),gt=JSON.parse('{"name":"Sky","description":"Interact with built-in Sky & Weather system.","authority":"client","static_functions":[{"authority":"client","name":"ChangeWeather","description":"Changes the Weather","parameters":[{"type":"WeatherType","name":"weather","description":"weather to change"},{"type":"float","name":"transition_time","description":"fade time to completely change to new weather"}]},{"authority":"client","name":"DestroyAllSky","description":"Destroys all Directional Lights, Sky Lights, Exponential Height Fogs, Volumetric Clouds, Sky Atmosphere, Ultra Dynamic Sky Actors and all Actors with the <code>Sun</code> Actor Tag from the Level"},{"authority":"client","name":"GetTimeOfDay","description":"Gets the current time","return":[{"type":"integer","description":"hours"},{"type":"integer","description":"minutes"},{"type":"integer","description":"seconds"}],"relations":{"static_functions":["SetTimeOfDay"]}},{"authority":"client","name":"GetWeather","description":"Gets the current weather","return":[{"type":"WeatherType"}]},{"authority":"client","name":"IsSpawned","description":"Returns if the Ultra Dynamic Sky was spawned","parameters":[{"type":"boolean","name":"including_weather","description":"if to check for Weather Actor too"}],"return":[{"type":"boolean"}]},{"authority":"client","name":"Reconstruct","description":"Reconstruct the Ultra Dynamic Sky Actor, forces most of the changes to be applied"},{"authority":"client","name":"SetAnimateTimeOfDay","description":"Sets whether or not to animate the time of day","parameters":[{"type":"boolean","name":"animate","description":"Whether or not to animate the time of day"},{"type":"float?","name":"day_length","default":"30.0","description":"The time (in minutes) from sunrise to sunset"},{"type":"float?","name":"night_length","default":"15.0","description":"The time (in minutes) from sunset to sunrise"}]},{"authority":"client","name":"SetCloudCoverage","description":"The amount of coverage for the cloud layer, from a clear sky to overcast","parameters":[{"type":"float","name":"cloud_coverage"}]},{"authority":"client","name":"SetContrast","description":"A simple contrast boost for the sky material. Cannot affect volumetric clouds","parameters":[{"type":"float","name":"contrast"}]},{"authority":"client","name":"SetFog","description":"The fogginess of the scene. The impact this has on fog density is scaled from the Fog Density category","parameters":[{"type":"float","name":"fog_percentage"}]},{"authority":"client","name":"SetMoonAngle","description":"Sets the Moon Angle","parameters":[{"type":"float","name":"yaw"},{"type":"float","name":"pitch"}]},{"authority":"client","name":"SetMoonGlowIntensity","description":"Sets the Moon Glow Intensity","parameters":[{"type":"float","name":"glow_intensity"}]},{"authority":"client","name":"SetMoonLightIntensity","description":"Sets the Moon Light Intensity","parameters":[{"type":"float","name":"intensity"}]},{"authority":"client","name":"SetMoonPhase","description":"Sets the Moon Phase","parameters":[{"type":"float","name":"phase","description":"Ranges from 0-30"}]},{"authority":"client","name":"SetMoonScale","description":"Sets the Moon Scale","parameters":[{"type":"float","name":"scale"}]},{"authority":"client","name":"SetMoonTexture","description":"Sets the Moon Texture","description_long":"Sets the Moon Texture<br /><br />Set it to empty to restore the default. After setting it, you must call <code>Sky.Reconstruct()</code> to have it applied properly","parameters":[{"type":"ImagePath","name":"texture"}]},{"authority":"client","name":"SetMoonTextureRotation","description":"Sets the Moon Texture Rotation","parameters":[{"type":"float","name":"rotation"}]},{"authority":"client","name":"SetMoonVerticalOffset","description":"Sets the Moon Vertical Offset","parameters":[{"type":"float","name":"offset"}]},{"authority":"client","name":"SetNightBrightness","description":"Can be used to scale the brightness of the sky and lighting, at night","parameters":[{"type":"float","name":"brightness"}]},{"authority":"client","name":"SetOverallIntensity","description":"The overall brightness of the shader","parameters":[{"type":"float","name":"intensity"}]},{"authority":"client","name":"SetSkyMode","description":"Sets the Sky Mode","description_long":"Sets the Sky Mode<br /><br />After setting it, you must call <code>Sky.Reconstruct()</code> to have it applied properly","parameters":[{"type":"SkyMode","name":"sky_mode"}]},{"authority":"client","name":"SetSunAngle","description":"Sets the Sun Angle","parameters":[{"type":"float","name":"yaw"},{"type":"float","name":"pitch"}]},{"authority":"client","name":"SetSunLightIntensity","description":"Sets the Sun Light Intensity","parameters":[{"type":"float","name":"intensity"}]},{"authority":"client","name":"SetSunScale","description":"Sets the Sun Scale","parameters":[{"type":"float","name":"radius"}]},{"authority":"client","name":"SetTimeOfDay","description":"Sets the current time","parameters":[{"type":"integer","name":"hours"},{"type":"integer","name":"minutes"}],"relations":{"static_functions":["GetTimeOfDay"]}},{"authority":"client","name":"SetVolumetricCloudColor","description":"Sets the Volumetric Cloud Color","description_long":"Sets the Volumetric Cloud Color<br /><br />This is only applied if <code>SetSkyMode(SkyMode.VolumetricClouds)</code> is set","parameters":[{"type":"Color","name":"color"}]},{"authority":"client","name":"Spawn","description":"Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page","description_long":"Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page. Internally this calls <code>Sky.DestroyAllSky()</code> automatically","parameters":[{"type":"boolean","name":"spawn_weather","default":"false","description":"Whether or not to spawn the Weather Actor (to be able to use Weather related methods)"},{"type":"boolean","name":"find_existing","default":"true","description":"Whether or not to try to find existing Sky & Weather Actors spawned in the map, using their references instead"}]}]}'),bt=JSON.parse('{"name":"Steam","description":"Interact with Steam APIs.","authority":"client","static_functions":[{"name":"SetRichPresence","description":"Sets Steam Rich Presence text","authority":"client","parameters":[{"type":"string","name":"text","description":""}]}]}'),vt=JSON.parse('{"name":"Timer","description":"Execute code at specified time intervals.","authority":"both","static_functions":[{"name":"Bind","authority":"both","description":"Binds a Timer to any Actor. The timer will be automatically cleared when the Actor is destroyed","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"},{"type":"Actor","name":"actor","description":"Actor to be bound"}],"examples":[{"title":"Binding a Timer to an Entity","content":["local character = Character(Vector(), Rotator(), \\"nanos-world::SK_Male\\")","","local my_timer = Timer.SetTimeout(function(_character)","    -- Do something with _character","    -- Ex: Destroy the character after 10 seconds","    _character:Destroy()","end, 10000, character)","","-- Binds the Timer to the Character","-- This will ensure it will never trigger if the character is destroyed before it","-- With this you don\'t need to validate if the \'_character\' parameter is valid","Timer.Bind(my_timer, character)"]}]},{"name":"ClearInterval","authority":"both","description":"Stops the execution of the function specified in SetInterval()","parameters":[{"type":"integer","name":"interval_id","description":"The ID value returned by SetInterval() is used as the parameter for this method"}]},{"name":"ClearTimeout","authority":"both","description":"Stops the execution of the function specified in SetTimeout()","parameters":[{"type":"integer","name":"timeout_id","description":"The ID value returned by SetTimeout() is used as the parameter for this method"}]},{"name":"GetElapsedTime","authority":"both","description":"Returns the time elapsed since the last tick","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"integer","name":"elapsed_time"}]},{"name":"GetRemainingTime","authority":"both","description":"Returns the time remaining to the next tick","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"integer","name":"remaining_time"}]},{"name":"IsValid","authority":"both","description":"Checks if a Timer is currently active or waiting to be triggered","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"boolean","name":"is_valid"}]},{"name":"Pause","authority":"both","description":"Pauses the Timer","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"ResetElapsedTime","authority":"both","description":"Resets a Timer to restart from beginning","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"Resume","authority":"both","description":"Resumes the Timer","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"SetInterval","authority":"both","description":"Same as SetTimeout(), but repeats the execution of the function continuously","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed.<br/>Return false to stop it from being called."},{"type":"integer","name":"milliseconds","default":"0","description":"The time in milliseconds the timer should delay in between executions of the specified function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"integer","description":"the interval_id"}]},{"name":"SetTimeout","authority":"both","description":"Executes a function, after waiting a specified number of milliseconds","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed"},{"type":"integer","name":"milliseconds","default":"0","description":"The time in milliseconds to wait before executing the function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"integer","description":"the timeout_id"}]}]}'),_t=JSON.parse('{"name":"Trace","description":"Trace a ray against the world and get collided objects information.","authority":"client","static_functions":[{"name":"BoxMulti","description":"Trace a box against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a box against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the box"},{"type":"Vector","name":"end_location","description":"End location of the box"},{"type":"Vector","name":"half_size","description":"Distance from the center of box along each axis"},{"type":"Rotator","name":"orientation","description":"Orientation of the box"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"BoxSingle","description":"Trace a box against the world and returns a table with the first blocking hit information","description_long":"Trace a box against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the box"},{"type":"Vector","name":"end_location","description":"End location of the box"},{"type":"Vector","name":"half_size","description":"Distance from the center of box along each axis"},{"type":"Rotator","name":"orientation","description":"Orientation of the box"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"CapsuleMulti","description":"Trace a capsule against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a capsule against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the capsule"},{"type":"Vector","name":"end_location","description":"End location of the capsule"},{"type":"float","name":"radius","description":"Radius of the capsule to sweep"},{"type":"float","name":"half_height","description":"Distance from center of capsule to tip of hemisphere endcap."},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"CapsuleSingle","description":"Trace a capsule against the world and returns a table with the first blocking hit information","description_long":"Trace a capsule against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the capsule"},{"type":"Vector","name":"end_location","description":"End location of the capsule"},{"type":"float","name":"radius","description":"Radius of the capsule to sweep"},{"type":"float","name":"half_height","description":"Distance from center of capsule to tip of hemisphere endcap."},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"LineMulti","description":"Trace a ray against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a ray against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the ray"},{"type":"Vector","name":"end_location","description":"End location of the ray"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"LineSingle","description":"Trace a ray against the world and returns a table with the first blocking hit information","description_long":"Trace a ray against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the ray"},{"type":"Vector","name":"end_location","description":"End location of the ray"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"SphereMulti","description":"Trace a sphere against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a sphere against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the sphere"},{"type":"Vector","name":"end_location","description":"End location of the sphere"},{"type":"float","name":"radius","description":"Radius of the sphere"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"SphereSingle","description":"Trace a sphere against the world and returns a table with the first blocking hit information","description_long":"Trace a sphere against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"ImpactPoint","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the sphere"},{"type":"Vector","name":"end_location","description":"End location of the sphere"},{"type":"float","name":"radius","description":"Radius of the sphere"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitly pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]}]}'),St=JSON.parse('{"name":"Viewport","description":"Work with screen properties and effects.","authority":"client","static_functions":[{"name":"DeprojectScreenToWorld","description":"Transforms a 2D screen coordinates into 3D world-space location","authority":"client","parameters":[{"type":"Vector2D","name":"screen_position","description":"Screen position"}],"return":[{"type":"table","table_properties":[{"name":"Position","type":"Vector"},{"name":"Direction","type":"Vector"}]}]},{"name":"GetMousePosition","description":"Gets the current mouse screen location","authority":"client","return":[{"type":"Vector2D","description":"The current mouse screen location"}],"relations":{"static_functions":["SetMousePosition"]}},{"name":"GetViewportScale","description":"Gets the scale of viewport","authority":"client","return":[{"type":"float","description":"The scale of viewport"}]},{"name":"GetViewportSize","description":"Gets the size of viewport","authority":"client","return":[{"type":"Vector2D","description":"The size of viewport"}]},{"name":"ProjectWorldToScreen","description":"Transforms a 3D world-space vector into 2D screen coordinates","authority":"client","parameters":[{"type":"Vector","name":"world_position","description":"World 3D position"}],"return":[{"type":"Vector2D"}]},{"name":"SetBloodScreenEnabled","description":"Enables/Disables the Blood Screen effect","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"SetBloodScreenIntensity","description":"Manually sets the Blood Screen intensity","description_long":"If you want the Blood Screen to do not be overridden, disable it with <code>Client.SetBloodScreenEnabled(false)</code> before","authority":"client","parameters":[{"type":"float","name":"intensity","description":"From 0.0 to 1.0"}]},{"name":"SetCrosshairEnabled","description":"Enables/Disables the Crosshair","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"SetHardwareCursor","description":"Loads and sets a hardware cursor in the game from a PNG image","description_long":"Loads and sets a hardware cursor in the game from a PNG image<br/>Note: due an engine limitation modifying an already set cursor image will not change the cursor until the game is restarted","authority":"client","parameters":[{"type":"CursorType","name":"cursor_shape","description":""},{"type":"ImagePath","name":"cursor_path","description":"a PNG image relative to Assets/"},{"type":"Vector2D","name":"hotspot","description":"","default":"Vector(0, 0)"}]},{"name":"SetMousePosition","description":"Sets the mouse position","authority":"client","parameters":[{"type":"Vector2D","name":"new_position","description":""}],"relations":{"static_functions":["GetMousePosition"]}}],"events":[{"name":"Resize","description":"Called when the screen is resized","authority":"client","arguments":[{"type":"Vector2D","name":"new_size","description":"New new screen size"}]}]}'),wt=JSON.parse('{"name":"JSON","description":"JSON library.","static_functions":[{"name":"stringify","description":"Returns a string representing value encoded in JSON","return":[{"type":"string","description":"the table in JSON"}],"parameters":[{"type":"table","name":"value","description":"the table that will become JSON"}],"examples":[{"title":"Stringifies a Lua table","content":"local encoded_value = JSON.stringify({ 1, 2, 3, { x = 10, y = Vector(1, 2, 3) }, \\"he\\" })","output":"[1,2,3,{\\"x\\":10,\\"y\\":\\"Vector(1.0, 2.0, 3.0)\\"},\\"he\\"]"}]},{"name":"parse","description":"Returns a value representing the decoded JSON string","return":[{"type":"any","description":"the json in table"}],"parameters":[{"type":"string","name":"value","description":"the JSON that will become a table"}],"examples":[{"title":"Parses a JSON string into a Lua table","content":"local decoded_value = JSON.parse(\'[1,2,3,{\\"x\\":10,\\"y\\":\\"Vector(1.0, 2.0, 3.0)\\"},\\"he\\"]\')","output":"the table { 1, 2, 3, { x = 10, y = Vector(1, 2, 3) }, \\"he\\" }"}]}]}'),kt=JSON.parse('{"name":"TOML","description":"TOML library.","static_functions":[{"name":"Dump","description":"Returns a string representing value encoded in TOML","return":[{"type":"string","description":"the table in TOML"}],"parameters":[{"type":"table","name":"value","description":"the table that will become TOML"}],"examples":[{"title":"Stringifies a Lua table","content":"local encoded_value = TOML.Dump({ 1, 2, 3, { x = 10, y = Vector(1, 2, 3) }, \\"he\\" })","output":"[ 1, 2, 3, { y = \\"Vector(1.000000, 2.000000, 3.000000)\\", x = 10 }, \\"he\\" ]"}]},{"name":"Parse","description":"Returns a value representing the decoded TOML string","return":[{"type":"any","description":"the TOML in table"}],"parameters":[{"type":"string","name":"value","description":"the TOML that will become a table"}],"examples":[{"title":"Parses a TOML string into a Lua table","content":"local decoded_value = TOML.Parse(\\"my_table = [ 1, 2, 3 ]\\")","output":"the table { [\\"my_table\\"] = { [1] = 1, [2] = 2, [3] = 3 } }"}]}]}'),Ct=JSON.parse('{"name":"NanosMath","description":"A table containing useful and aux Math functions.","static_functions":[{"name":"Round","description":"Rounds a number","return":[{"type":"number","description":"the rounded number"}],"parameters":[{"type":"number","name":"value","description":"The number to be rounded"}]},{"name":"Clamp","description":"Clamps a number","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"},{"type":"number","name":"min","description":"The min value"},{"type":"number","name":"max","description":"The max value"}]},{"name":"ClampAxis","description":"Clamps an angle to the range of [0, 360]","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"}],"examples":[{"title":"Clamping an angle","content":"local axis = NanosMath.ClampAxis(720)"}]},{"name":"NormalizeAxis","description":"Clamps an angle to the range of [-180, 180]","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"}]},{"name":"RelativeTo","description":"Calculates the location and rotation relative to an actor","return":[{"type":"Vector","description":"the location relative to the actor"},{"type":"Rotator","description":"the rotation relative to the actor"}],"parameters":[{"type":"Vector","name":"location","description":"The location of the new system"},{"type":"Rotator","name":"rotation","description":"The rotation of the new system"},{"type":"Actor","name":"actor","description":"The actor to be translated to the new system"}]},{"name":"RandomFloat","description":"Returns a random float value","return":[{"type":"float","description":"the random value"}],"parameters":[{"type":"float","name":"min","description":"Minimum value"},{"type":"float","name":"max","description":"Maximum value"}]},{"name":"FInterpTo","description":"Interpolate number from Current to Target","return":[{"type":"number"}],"parameters":[{"type":"number","name":"current"},{"type":"number","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}],"examples":[{"title":"Interpolating a number until it reaches 100 with speed 3","content":["local my_value = 0","Client.Subscribe(\\"Tick\\", function(delta_time)","    my_value = NanosMath.FInterpTo(my_value, 100, delta_time, 3)","end)"]}]},{"name":"RInterpTo","description":"Interpolate Rotator from Current to Target","return":[{"type":"Rotator"}],"parameters":[{"type":"Rotator","name":"current"},{"type":"Rotator","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"RInterpConstantTo","description":"Interpolate Rotator from Current to Target with a constant step","return":[{"type":"Rotator"}],"parameters":[{"type":"Rotator","name":"current"},{"type":"Rotator","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"VInterpTo","description":"Interpolate Vector from Current to Target","return":[{"type":"Vector"}],"parameters":[{"type":"Vector","name":"current"},{"type":"Vector","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}],"examples":[{"title":"Interpolating a Vector until it reaches Vector(1000, 200, 100) with speed 5","content":["local my_value = Vector(0, 0, 0)","Client.Subscribe(\\"Tick\\", function(delta_time)","    my_value = NanosMath.VInterpTo(my_value, Vector(1000, 200, 100), delta_time, 5)","end)"]}]},{"name":"VInterpConstantTo","description":"Interpolate Vector from Current to Target with a constant step","return":[{"type":"Vector"}],"parameters":[{"type":"Vector","name":"current"},{"type":"Vector","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]}]}'),Tt=JSON.parse('{"name":"NanosUtils","description":"A table containing useful and aux functions.","static_functions":[{"name":"IsEntityValid","description":"Returns if an entity is valid","return":[{"type":"boolean","description":"if the entity is valid"}],"parameters":[{"type":"any","name":"entity","description":"Entity to verify"}]},{"name":"Benchmark","description":"Benchmarks a function performance","description_long":"Benchmarks a function performance, outputs in the console the elapsed time","parameters":[{"type":"string","name":"name","description":"Benchmark name to output"},{"type":"number","name":"amount","description":"Amount of times to loop"},{"type":"function","name":"func","description":"The function to call"},{"type":"any","name":"args...","description":"The arguments of the function to call"}],"examples":[{"title":"Benchmarks a function","content":["local arg1 = math.random()","local arg2 = math.random()","","NanosUtils.Benchmark(\\"My Heavy Operation\\", 1000, function(param1, param2)","    -- Do some heavy operations here","    local result = param1 * param2","end, arg1, arg2)",""],"output":"Benchmark \'My Heavy Operation\' (x1000) took 1.5ms"}]}]}'),At=JSON.parse('{"name":"NanosTable","description":"A table containing useful and aux table functions.","static_functions":[{"name":"Dump","description":"Dumps a table into a readable text","return":[{"type":"string","description":"the table as readable text"}],"parameters":[{"type":"table","name":"table","description":"Table to dump"}],"examples":[{"title":"Dumps a table","content":["local table = {","    \\"my_key\\" = 123,","    [2] = \\"my_value\\"","}","","local dump_text = NanosTable.Dump(table)","","Console.Log(dump_text)","","-- Outputs Text","--[[","{","   \\"my_key\\": 123,","    2 = \\"my_value\\"","}","--]]"]}]},{"name":"ShallowCopy","description":"Performs a shallow copy of a table","return":[{"type":"table","description":"the copied table"}],"parameters":[{"type":"table","name":"table","description":"The table to shallow copy"}]}]}'),Pt=JSON.parse('{"name":"string","description":"This library provides generic functions for string manipulation, such as finding and extracting substrings, and pattern matching. When indexing a string in Lua, the first character is at position 1 (not at 0, as in C). Indices are allowed to be negative and are interpreted as indexing backwards, from the end of the string. Thus, the last character is at position -1, and so on.","functions":[{"name":"StartsWith","description":"Test whether this string starts with given string","is_native":false,"return":[{"type":"boolean"}],"parameters":[{"type":"string","name":"other_string","description":"The given string"}],"examples":[{"title":"Checks if string starts with text","content":["local str = \\"awesome text!\\"","local starts = str:StartsWith(\\"awesome\\")"],"output":"true"}]},{"name":"EndsWith","description":"Test whether this string ends with given string","is_native":false,"return":[{"type":"boolean"}],"parameters":[{"type":"string","name":"other_string","description":"The given string"}],"examples":[{"title":"Checks if string ends with text","content":["local str = \\"awesome text!\\"","local ends = str:EndsWith(\\"text!\\")"],"output":"true"}]},{"name":"Trim","description":"Returns a new string with removed whitespace characters from the front and end of this string","is_native":false,"return":[{"type":"string"}],"examples":[{"title":"Removes extra spaces","content":["local str = \\"  Hello world!    \\"","local new_str = str:Trim()"],"output":"Hello world!"}]},{"name":"FormatArgs","description":"A better string.Format, replace <code>{num}</code> by the corresponding vararg in a string","is_native":false,"examples":[{"title":"Replaces {1} and {2} with corresponding texts","content":["local str = \\"Hello {2} I\'m {1}\\"","local new_str = str:FormatArgs(\\"a noob\\", \\"world!\\")"],"output":"Hello world! I\'m a noob"}],"return":[{"type":"string"}],"parameters":[{"type":"any...","name":"args","description":"The args"}]},{"name":"byte","description":"Returns the internal numeric codes of the characters <code>s[start_pos], s[start_pos + 1], ..., s[end_pos]</code>","is_native":true,"return":[{"type":"integer...","description":"the internal numeric code"}],"parameters":[{"type":"integer","name":"start_pos","default":"1","description":"The first character of the string to get the byte of"},{"type":"integer","name":"end_pos","default":"start_pos","description":"The last character of the string to get the byte of"}]},{"name":"char","description":"Receives zero or more integers. Returns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument","is_native":true,"return":[{"type":"string","description":"the string"}],"parameters":[{"type":"integer...","name":"values"}]},{"parameters":[{"type":"string","name":"haystack","description":"The string to search in."},{"type":"string","name":"needle","description":"The string to find, can contain patterns if enabled."},{"type":"number","name":"startPos","description":"The position to start the search from, can be negative start position will be relative to the end position."},{"type":"boolean","name":"noPatterns","description":"Disable patterns."}],"return":[{"type":"number"},{"type":"number"},{"type":"string"}],"is_native":true,"name":"find","description":"Looks for the first match of <code>pattern</code> in the string."},{"parameters":[{"type":"string","name":"str","description":"The string to convert."},{"type":"number","name":"repetitions","description":"Timer to repeat, this values gets rounded internally."},{"type":"string","name":"separator","description":"String that will separate the repeated piece. Notice that it doesn\'t add this string to the start or the end of the result, only between the repeated parts."}],"return":[{"type":"string"}],"is_native":true,"name":"rep","description":"Returns a string that is the concatenation of <code>n</code> copies of the string <code>s</code> separated by the string <code>sep</code>."},{"parameters":[{"type":"string","name":"str","description":"The string to convert."}],"return":[{"type":"string"}],"is_native":true,"name":"lower","description":"Returns a copy of this string with all uppercase letters changed to lowercase."},{"parameters":[{"type":"string","name":"str","description":"The string to convert."}],"return":[{"type":"string"}],"is_native":true,"name":"upper","description":"Returns a copy of this string with all lowercase letters changed to uppercase."},{"parameters":[{"type":"function","name":"func","description":"The function to get the bytecode of"},{"type":"boolean","name":"stripDebugInfo","description":"True to strip the debug data, false to keep it"}],"return":[{"type":"string"}],"is_native":true,"name":"dump","description":"Returns a string containing a binary representation (a *binary chunk*) of the given function."},{"parameters":[{"type":"string","name":"string","description":"String which should be searched in for matches."},{"type":"string","name":"pattern","description":"The pattern that defines what should be matched."},{"type":"number","name":"startPosition","description":"The start index to start the matching from, can be negative to start the match from a position relative to the end."}],"return":[{"type":"number"}],"is_native":true,"name":"match","description":"Looks for the first match of <code>pattern</code> in the string."},{"parameters":[{"type":"string","name":"str","description":"The string to be reversed."}],"return":[{"type":"string"}],"is_native":true,"name":"reverse","description":"Returns a string that is the string <code>s</code> reversed."},{"parameters":[{"type":"string","name":"string","description":"The string you\'ll take a sub-string out of."},{"type":"number","name":"StartPos","description":"The position of the first character that will be included in the sub-string."},{"type":"number","name":"EndPos","description":"The position of the last character to be included in the sub-string. It can be negative to count from the end."}],"return":[{"type":"string"}],"is_native":true,"name":"sub","description":"Returns the substring of the string that starts at <code>i</code> and continues until <code>j</code>."},{"parameters":[{"type":"string","name":"data","description":"The string to search in"},{"type":"string","name":"pattern","description":"The pattern to search for"}],"return":[{"type":"function"}],"is_native":true,"name":"gmatch","description":"Returns an iterator function that, each time it is called, returns the next captures from <code>pattern</code> over the string s. "},{"parameters":[{"type":"string","name":"str","description":"The string to find the length of."}],"return":[{"type":"number"}],"is_native":true,"name":"len","description":"Returns its length."},{"parameters":[{"type":"string","name":"string","description":"String which should be modified."},{"type":"string","name":"pattern","description":"The pattern that defines what should be matched and eventually be replaced."},{"type":"string","name":"replacement","description":"In case of a string the matched sequence will be replaced with it. In case of a table, the matched sequence will be used as key and the table will tested for the key, if a value exists it will be used as replacement.  In case of a function all matches will be passed as parameters to the function, the return value(s) of the function will then be used as replacement."},{"type":"number","name":"maxReplaces","description":"Maximum number of replacements to be made."}],"return":[{"type":"string"},{"type":"number"}],"is_native":true,"name":"gsub","description":"Returns a copy of s in which all (or the first <code>n</code>, if given) occurrences of the <code>pattern</code> have been replaced by a replacement string specified by <code>repl</code>."},{"parameters":[{"type":"string","name":"format","description":"The string to be formatted"},{"type":"number","name":"formatParameters","description":"Values to be formatted into the string."}],"return":[{"type":"string"}],"is_native":true,"name":"format","description":"Returns a formatted version of its variable number of arguments following the description given in its first argument."}]}'),xt=JSON.parse('{"name":"table","description":"This library provides generic functions for table manipulation. It provides all its functions inside the table <code>table</code>.","static_functions":[{"parameters":[{"type":"table","name":"tbl","description":"The table to insert the variable into."},{"type":"number","name":"position","description":"The position in the table to insert the variable. If the third argument is nil this argument becomes the value to insert at the end of given table.","default":"#tbl + 1"},{"type":"any","name":"value","description":"The variable to insert into the table.","default":""}],"return":[{"type":"number"}],"is_native":true,"description":"Inserts element value at <code>position</code> in <code>tbl</code>","description_long":"Inserts element value at <code>position</code> in <code>tbl</code>, shifting up the elements <code>tbl[position], tbl[position + 1], \xb7\xb7\xb7, tbl[#tbl]</code>","name":"insert"},{"parameters":[{"type":"table","name":"tbl","description":"The table to sort."},{"type":"function","name":"sorter","description":"If specified, the function will be called with 2 parameters each.\\r\\nReturn true in this function if you want the first parameter to come first in the sorted array."}],"is_native":true,"description":"Sorts the <code>tbl</code> elements in a given order, in-place, from <code>tbl[1]</code> to <code>tbl[#tbl]</code>","description_long":"Sorts the <code>tbl</code> elements in a given order, in-place, from <code>tbl[1]</code> to <code>tbl[#tbl]</code>. If <code>sorter</code> is given, then it must be a function that receives two <code>tbl</code> elements and returns true when the first element must come before the second in the final order, so that, after the sort, i &lt;= j implies <code>not sorter(tbl[j], tbl[i])</code>. If <code>sorter</code> is not given, then the standard Lua operator &lt; is used instead.<br/><br/>The <code>sorter</code> function must define a consistent order; more formally, the function must define a strict weak order. (A weak order is similar to a total order, but it can equate different elements for comparison purposes).<br/><br/>The sort algorithm is not stable: Different elements considered equal by the given order may have their relative positions changed by the sort.","name":"sort"},{"parameters":[{"type":"table","name":"source_table","description":"The source table from which the elements are to be moved."},{"type":"number","name":"from","description":"The start index of the source range from which the elements are to be moved."},{"type":"number","name":"to","description":"The end index of the source range until which the elements are to be moved."},{"type":"number","name":"dest","description":"The index within the destination table where the moved elements should be inserted. If this is not specified, the moved elements will be inserted at the end of the table."},{"type":"table","name":"dest_table","description":"The destination table to which the elements are to be moved. By default, this is the same as the source table.","default":"source_table"}],"return":[{"type":"table"}],"is_native":true,"description":"Moves elements from the <code>source_table</code> to the <code>dest_table</code>","description_long":"Moves elements from the <code>source_table</code> to the <code>dest_table</code>, performing the equivalent to the following multiple assignment: <code>dest_table[dest], \xb7\xb7\xb7 = a1[from], \xb7\xb7\xb7, source_table[to]</code>.<br /><br />The destination range can overlap with the source range. The number of elements to be moved must fit in a Lua integer.","name":"move"},{"parameters":[{"type":"table","name":"tbl","description":"The table to remove the value from."},{"type":"number","name":"index","description":"The index of the value to remove."}],"return":[{"type":"any"}],"is_native":true,"description":"Removes from <code>tbl</code> the element at position <code>index</code>, returning the value of the removed element","description_long":"Removes from <code>tbl</code> the element at position <code>index</code>, returning the value of the removed element.<br /><br />When <code>index</code> is an integer between 1 and <code>#tbl</code>, it shifts down the elements <code>tbl[index + 1], tbl[index + 2], \xb7\xb7\xb7, tbl[#tbl]</code> and erases element <code>tbl[#tbl]</code>.<br /><br />The <code>index</code> can also be 0 when <code>#tbl</code> is 0, or <code>#tbl + 1</code>.","name":"remove"},{"parameters":[{"type":"table","name":"tbl","description":"The table to concatenate."},{"type":"string","name":"separator","description":"A separator to insert between strings","default":"\\"\\""},{"type":"number","name":"start_pos","description":"The index to start at","default":"1"},{"type":"number","name":"end_pos","description":"The index to end at","default":"#tbl"}],"return":[{"type":"string"}],"is_native":true,"description":"Given a <code>tbl</code> where all elements are strings or numbers, returns the string with elements concatenated.","description_long":"Given a <code>tbl</code> where all elements are strings or numbers, returns the string <code>tbl[start_pos] .. separator .. tbl[start_pos + 1] ... separator .. tbl[end_pos]</code>.<br/><br/>If <code>start_pos</code> is greater than <code>end_pos</code>, returns the empty string","name":"concat"}]}'),Mt={Stable:{Class:{Entity:ge,Actor:be,Pickable:ve,Paintable:_e,Damageable:Se,Vehicle:we,Pawn:ke,Billboard:Ce,Blueprint:Te,Cable:Ae,Canvas:Pe,Character:xe,CharacterSimple:Me,Database:De,Decal:Re,File:Ve,Gizmo:Ge,Grenade:Ie,Light:Ee,Melee:We,Particle:Ne,Player:Be,Prop:Le,SceneCapture:je,StaticMesh:Oe,Sound:Fe,TextRender:Ue,Trigger:ze,VehicleWheeled:He,VehicleWater:qe,Weapon:Je,WebUI:Ke,Widget:$e,Widget3D:Ye},Struct:{Color:Xe,Matrix:Qe,Quat:et,Rotator:Ze,Vector:tt,Vector2D:at},StaticClass:{Assets:nt,Chat:it,Client:rt,Console:ot,Debug:st,Discord:lt,Events:ct,HTTP:pt,Input:dt,Level:ht,Navigation:mt,Package:ut,PostProcess:yt,Server:ft,Sky:gt,Steam:bt,Timer:vt,Trace:_t,Viewport:St},UtilityClass:{JSON:wt,TOML:kt,NanosMath:Ct,NanosUtils:Tt,NanosTable:At},StandardLibrary:{string:Pt,math:JSON.parse('{"name":"math","description":"This library provides basic mathematical functions. It provides all its functions and constants inside the table <code>math</code>.","static_properties":[{"name":"pi","value":"3.141592653589793"},{"name":"huge","value":"2^1024"}],"static_functions":[{"parameters":[{"type":"number","name":"number","description":"The number to be rounded up."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the integer no greater than the given value (even for negatives)","name":"ceil"},{"parameters":[{"type":"number","name":"value","description":"Angle in radians"}],"return":[{"type":"number"}],"is_native":true,"description":"Return the tangent value for a given value in radians.","name":"tan"},{"parameters":[{"type":"number...","name":"numbers","description":"Numbers to get the smallest from."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the minimum value from a variable length list of arguments","name":"min"},{"parameters":[{"type":"number","name":"base","description":"The base value."},{"type":"number","name":"modulator","description":"The modulator."}],"return":[{"type":"number"}],"is_native":true,"description":"Returns the remainder of the division of <code>base</code> by <code>modulator</code> that rounds the quotient towards zero","name":"fmod"},{"parameters":[{"type":"number","name":"exponent","description":"The exponent for the function."}],"return":[{"type":"number"}],"is_native":true,"description":"Returns e (the base of natural logarithms) raised to the power <code>exponent</code>","name":"exp"},{"parameters":[{"type":"number","name":"m","description":"If m is the only parameter: upper limit.\\r\\n\\r\\nIf n is also provided: lower limit.\\r\\n\\r\\nIf provided, this must be an integer."},{"type":"number","name":"n","description":"Upper limit.\\r\\n\\r\\nIf provided, this must be an integer."}],"return":[{"type":"number"}],"is_native":true,"description":"Generates pseudo-random numbers uniformly distributed","name":"random"},{"parameters":[{"type":"number","name":"degrees","description":"The angle measured in degrees."}],"return":[{"type":"number"}],"is_native":true,"description":"Convert from degrees to radians","name":"rad"},{"parameters":[{"type":"number","name":"number","description":"Angle in radians"}],"return":[{"type":"number"}],"is_native":true,"description":"Return the sine value for a given value in radians.","name":"sin"},{"parameters":[{"type":"number","name":"number","description":"Angle in radians"}],"return":[{"type":"number"}],"is_native":true,"description":"Return the cosine value for a given value in radians.","name":"cos"},{"parameters":[{"type":"number","name":"normal","description":"Sine value in the range of -1 to 1."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the inverse sine in radians of the given value.","name":"asin"},{"parameters":[{"type":"number","name":"seed","description":"The new seed"}],"is_native":true,"description":"Sets a seed for the pseudo-random generator: Equal seeds produce equal sequences of numbers","name":"randomseed"},{"parameters":[{"type":"number","name":"number","description":"The number to be rounded down."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the integer no less than the given value (even for negatives)","name":"floor"},{"parameters":[{"type":"number...","name":"numbers","description":"Numbers to get the largest from"}],"return":[{"type":"number"}],"is_native":true,"description":"Return the maximum value from a variable length list of arguments","name":"max"},{"parameters":[{"type":"number","name":"normal","description":"Tangent value."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the inverse tangent in radians. We can do this by supplying y/x ourselves or we can pass y and x to math.atan to do this for us","name":"atan"},{"parameters":[{"type":"number","name":"cos","description":"Cosine value in range of -1 to 1."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the inverse cosine in radians of the given value.","name":"acos"},{"parameters":[{"type":"number","name":"x","description":"The number to get the absolute value of."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the absolute, or non-negative value, of a given value","name":"abs"},{"parameters":[{"type":"number","name":"x","description":"The value to get the base from exponent from."},{"type":"number","name":"base","description":"The logarithmic base."}],"return":[{"type":"number"}],"is_native":true,"description":"Returns the inverse of this. <code>math.exp(1)</code> returns <code>e</code>","name":"log"},{"parameters":[{"type":"number","name":"base","description":"The base value."}],"return":[{"type":"number"},{"type":"number"}],"is_native":true,"description":"Return the integral and fractional parts of the given number","name":"modf"},{"parameters":[{"type":"number","name":"radians","description":"Value to be converted to degrees."}],"return":[{"type":"number"}],"is_native":true,"description":"Convert from radians to degrees","name":"deg"},{"parameters":[{"type":"number","name":"value","description":"Value to get the square root of."}],"return":[{"type":"number"}],"is_native":true,"description":"Return the square root of a given number. Only non-negative arguments are allowed","name":"sqrt"}]}'),table:xt},Enums:JSON.parse('{"AimMode":{"description":"Used by Characters to change the Aiming Mode while holding Weapons","enums":[{"key":"None","value":"0"},{"key":"ADS","value":"1"},{"key":"ZoomedZoom","value":"2"},{"key":"Zoomed","value":"3"},{"key":"ZoomedFar","value":"4"}]},"AnimationSlotType":{"enums":[{"key":"FullBody","value":"0"},{"key":"UpperBody","value":"1"}]},"AssetType":{"enums":[{"key":"Map","value":2},{"key":"StaticMesh","value":4},{"key":"SkeletalMesh","value":8},{"key":"Sound","value":16},{"key":"Animation","value":32},{"key":"Particle","value":64},{"key":"Material","value":128},{"key":"Blueprint","value":256},{"key":"Other","value":32768}]},"AttachmentRule":{"enums":[{"key":"KeepRelative","value":"0","description":"Will keep the current relative position/rotation if already attached."},{"key":"KeepWorld","value":"1","description":"Will calculate the new relative position/rotation so the Actor stays at the same position after being attached."},{"key":"SnapToTarget","value":"2","description":"Will set the Actor to the same position/rotation as the parent actor (or at the bone location) and reset its relative position/rotation to zero."}]},"AttenuationFunction":{"enums":[{"key":"Linear","value":"0"},{"key":"Logarithmic","value":"1"},{"key":"Inverse","value":"2"},{"key":"LogReverse","value":"3"},{"key":"NaturalSound","value":"4"}]},"BlendMode":{"enums":[{"key":"Opaque","value":"0"},{"key":"Masked","value":"1"},{"key":"Translucent","value":"2"},{"key":"Additive","value":"3"},{"key":"Modulate","value":"4"},{"key":"MaskedDistanceField","value":"5"},{"key":"MaskedDistanceFieldShadowed","value":"6"},{"key":"TranslucentDistanceField","value":"7"},{"key":"TranslucentDistanceFieldShadowed","value":"8"},{"key":"AlphaComposite","value":"9"},{"key":"AlphaHoldout","value":"10"},{"key":"AlphaBlend","value":"11"},{"key":"TranslucentAlphaOnly","value":"12"},{"key":"TranslucentAlphaOnlyWriteAlpha","value":"13"}]},"CameraMode":{"enums":[{"key":"FPSTPS","value":"0"},{"key":"FPSOnly","value":"1"},{"key":"TPSOnly","value":"2"}]},"CCDMode":{"enums":[{"key":"Auto","value":"0","description":"Automatically enables/disables depending on the Object size"},{"key":"Disabled","value":"1","description":"Disables CCD"},{"key":"Enabled","value":"2","description":"Enables CCD"}]},"CollisionChannel":{"supports_bitwise":true,"enums":[{"key":"WorldStatic","value":"1 << 0","description":"WorldStatic Object Types"},{"key":"WorldDynamic","value":"1 << 1","description":"WorldDynamic Object Types"},{"key":"Pawn","value":"1 << 2","description":"Capsules (usually from Characters)"},{"key":"PhysicsBody","value":"1 << 5","description":"Pickables and Props Meshes"},{"key":"Mesh","value":"1 << 17","description":"Character Mesh"},{"key":"Water","value":"1 << 19","description":"Water Body"},{"key":"Foliage","value":"1 << 20","description":"Foliage Meshes"},{"key":"Vehicle","value":"1 << 22","description":"Vehicles Meshes"},{"key":"All","value":"(1 << 32) - 1","description":"All Objects"}]},"CollisionType":{"enums":[{"key":"Normal","value":"0","description":"Blocks All"},{"key":"StaticOnly","value":"1","description":"Only Blocks Static objects"},{"key":"NoCollision","value":"2","description":"Doesn\'t Block anything"},{"key":"IgnoreOnlyPawn","value":"3","description":"Blocks everything but Pawns (Characters)"},{"key":"Auto","value":"4","description":"Automatically selects - usually will be Normal. On Props it will switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> depending on the Prop size"}]},"CursorType":{"enums":[{"key":"None","value":"0"},{"key":"Default","value":"1"},{"key":"TextEditBeam","value":"2"},{"key":"ResizeLeftRight","value":"3"},{"key":"ResizeUpDown","value":"4"},{"key":"ResizeSouthEast","value":"5"},{"key":"ResizeSouthWest","value":"6"},{"key":"CardinalCross","value":"7"},{"key":"Crosshairs","value":"8"},{"key":"Hand","value":"9"},{"key":"GrabHand","value":"10"},{"key":"GrabHandClosed","value":"11"},{"key":"SlashedCircle","value":"12"},{"key":"EyeDropper","value":"13"}]},"ConstraintMotion":{"enums":[{"key":"Free","value":"0"},{"key":"Limited","value":"1"},{"key":"Locked","value":"2"}]},"DamageType":{"enums":[{"key":"Shot","value":"0"},{"key":"Explosion","value":"1"},{"key":"Punch","value":"2"},{"key":"Fall","value":"3"},{"key":"RunOverProp","value":"4"},{"key":"RunOverVehicle","value":"5"},{"key":"Melee","value":"6"},{"key":"Unknown","value":"7"}]},"DatabaseEngine":{"enums":[{"key":"SQLite","value":"0"},{"key":"MySQL","value":"1"},{"key":"PostgreSQL","value":"2"}]},"FallingMode":{"enums":[{"key":"None","value":"0"},{"key":"Jumping","value":"1"},{"key":"Climbing","value":"2"},{"key":"Vaulting","value":"3"},{"key":"Falling","value":"4"},{"key":"HighFalling","value":"5"},{"key":"Parachuting","value":"6"},{"key":"SkyDiving","value":"7"}]},"FontType":{"enums":[{"key":"Roboto","value":"0"},{"key":"GothicA1","value":"1"},{"key":"PoiretOne","value":"2"},{"key":"Oswald","value":"3"},{"key":"RobotoMono","value":"4"},{"key":"OpenSans","value":"5"}]},"GaitMode":{"enums":[{"key":"None","value":"0"},{"key":"Walking","value":"1"},{"key":"Sprinting","value":"2"}]},"GizmoTransformMode":{"enums":[{"key":"Translation","value":"0"},{"key":"Rotation","value":"1"},{"key":"Scale","value":"2"}]},"GizmoAlignSpace":{"enums":[{"key":"Local","value":"0"},{"key":"World","value":"1"}]},"GrabMode":{"enums":[{"key":"Disabled","value":"0","description":"Disables grabbing"},{"key":"Auto","value":"1","description":"Automatically enables/disables depending on the Prop size"},{"key":"Enabled","value":"2","description":"Enables grabbing"}]},"HandlingMode":{"enums":[{"key":"SingleHandedWeapon","value":"0"},{"key":"DoubleHandedWeapon","value":"1"},{"key":"SingleHandedMelee","value":"2"},{"key":"DoubleHandedMelee","value":"3"},{"key":"Throwable","value":"4"},{"key":"Torch","value":"5"},{"key":"Barrel","value":"6"},{"key":"Box","value":"7"}]},"HighlightMode":{"enums":[{"key":"Always","value":"0"},{"key":"OnlyHidden","value":"1"},{"key":"OnlyVisible","value":"2"}]},"HTTPMethod":{"description":"HTTP defines a set of request methods to indicate the desired action to be performed for a given resource. Read more <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\'>here</a>.","enums":[{"key":"GET","value":"0","description":"The GET method requests a representation of the specified resource. Requests using GET should only retrieve data."},{"key":"POST","value":"1","description":"The POST method submits an entity to the specified resource, often causing a change in state or side effects on the server."},{"key":"PUT","value":"2","description":"The PUT method replaces all current representations of the target resource with the request payload."},{"key":"HEAD","value":"3","description":"The HEAD method asks for a response identical to a GET request, but without the response body."},{"key":"DELETE","value":"4","description":"The DELETE method deletes the specified resource."},{"key":"PATCH","value":"5","description":"The PATCH method applies partial modifications to a resource."},{"key":"OPTIONS","value":"6","description":"The OPTIONS method describes the communication options for the target resource."}]},"ImageFormat":{"enums":[{"key":"JPEG","value":"0"},{"key":"PNG","value":"1"},{"key":"BMP","value":"2"}]},"InputEvent":{"enums":[{"key":"Pressed","value":"0"},{"key":"Released","value":"1"}]},"KeyModifier":{"supports_bitwise":true,"enums":[{"key":"None","value":"0"},{"key":"LeftShiftDown","value":"1 << 0"},{"key":"RightShiftDown","value":"1 << 1"},{"key":"LeftControlDown","value":"1 << 2"},{"key":"RightControlDown","value":"1 << 3"},{"key":"LeftAltDown","value":"1 << 4"},{"key":"RightAltDown","value":"1 << 5"},{"key":"LeftCommandDown","value":"1 << 6"},{"key":"RightCommandDown","value":"1 << 7"},{"key":"CapsLocked","value":"1 << 8"}]},"LightProfile":{"enums":[{"key":"None","value":"0"},{"key":"Arrow_Star","value":"1"},{"key":"Arrow_Up","value":"2"},{"key":"Beam_01","value":"3"},{"key":"Beam_02","value":"4"},{"key":"Beam_03","value":"5"},{"key":"Beam_04","value":"6"},{"key":"Beam_05","value":"7"},{"key":"Beam_06","value":"8"},{"key":"Beam_07","value":"9"},{"key":"Beam_08","value":"10"},{"key":"Beam_LED_01","value":"11"},{"key":"Beam_LED_02","value":"12"},{"key":"Beam_LED_03","value":"13"},{"key":"Beam_LED_04","value":"14"},{"key":"Beam_LED_05","value":"15"},{"key":"Beam_LED_06","value":"16"},{"key":"Beam_LED_07","value":"17"},{"key":"Bow","value":"18"},{"key":"Capped_01","value":"19"},{"key":"Capped_02","value":"20"},{"key":"Shattered_01","value":"21"},{"key":"Shattered_02","value":"22"},{"key":"Shattered_03","value":"23"},{"key":"Shattered_04","value":"24"},{"key":"Shattered_05","value":"25"},{"key":"SpotLight_01","value":"26"},{"key":"SpotLight_02","value":"27"},{"key":"SpotLight_03","value":"28"},{"key":"SpotLight_04","value":"29"},{"key":"Spreadout_01","value":"30"},{"key":"Spreadout_02","value":"31"},{"key":"Spreadout_03","value":"32"},{"key":"Spreadout_04","value":"33"},{"key":"Star_Bow","value":"34"},{"key":"Star_Burst_01","value":"35"},{"key":"Star_Burst_02","value":"36"},{"key":"Star_Burst_03","value":"37"},{"key":"Star_Burst_04","value":"38"},{"key":"Star_Burst_05","value":"39"},{"key":"Star_Burst_06","value":"40"},{"key":"Star_Burst_07","value":"41"},{"key":"Star_Burst_08","value":"42"},{"key":"Star_X_01","value":"43"},{"key":"Star_X_02","value":"44"},{"key":"Wall_Boomerang","value":"45"},{"key":"Wall_Inverted_V","value":"46"},{"key":"Wall_Star_T","value":"47"},{"key":"Wing_6","value":"48"},{"key":"Wing_V_01","value":"49"},{"key":"Wing_V_02","value":"50"}]},"LogType":{"enums":[{"key":"Display","value":"0"},{"key":"Warning","value":"1"},{"key":"Error","value":"2"},{"key":"Debug","value":"3"},{"key":"Verbose","value":"4"},{"key":"Scripting","value":"5"},{"key":"ScriptingWarn","value":"6"},{"key":"ScriptingError","value":"7"},{"key":"Chat","value":"8"},{"key":"WebUI","value":"9"},{"key":"Success","value":"10"},{"key":"Fatal","value":"11"}]},"LightType":{"enums":[{"key":"Point","value":"0"},{"key":"Spot","value":"1"},{"key":"React","value":"2"}]},"NativeWidget":{"enums":[{"key":"Border","value":"0"},{"key":"Button","value":"1"},{"key":"CheckBox","value":"2"},{"key":"Image","value":"3"},{"key":"ProgressBar","value":"4"},{"key":"RichTextBlock","value":"5"},{"key":"Slider","value":"6"},{"key":"Text","value":"7"},{"key":"ComboBox","value":"8"},{"key":"EditableText","value":"9"},{"key":"EditableTextMultiLine","value":"10"},{"key":"SpinBox","value":"11"},{"key":"TextBox","value":"12"},{"key":"TextBoxMultiLine","value":"13"},{"key":"CanvasPanel","value":"14"},{"key":"GridPanel","value":"15"},{"key":"HorizontalBox","value":"16"},{"key":"Overlay","value":"17"},{"key":"ScaleBox","value":"18"},{"key":"ScrollBox","value":"19"},{"key":"SizeBox","value":"20"},{"key":"UniformGridPanel","value":"21"},{"key":"VerticalBox","value":"22"},{"key":"WrapBox","value":"23"},{"key":"BackgroundBlur","value":"24"}]},"PackageType":{"enums":[{"key":"Script","value":"0"},{"key":"GameMode","value":"1"},{"key":"LoadingScreen","value":"2"},{"key":"Map","value":"4"}]},"SkyMode":{"enums":[{"key":"VolumetricClouds","value":"0","description":"Uses a 3D Volumetric Cloud layer"},{"key":"StaticClouds","value":"1","description":"Designed to mimic the look of the volumetric clouds but as a static cloud texture. Much lower performance cost than volumetric clouds."},{"key":"DynamicClouds2D","value":"2","description":"Uses simple 2D dynamic clouds"},{"key":"NoClouds","value":"3","description":"Disables all forms of dynamic clouds"},{"key":"VolumetricAurora","value":"4","description":"Trades clouds for a full 3D volumetric aurora, much more convincing than the 2D effect."},{"key":"Space","value":"5","description":"Turns off all sky color, atmospheric scattering, clouds, etc. Specifically for environments which are set in outer space with no planet/ground beneath the camera."}]},"SoundType":{"enums":[{"key":"SFX","value":"0"},{"key":"Music","value":"1"},{"key":"UI","value":"2"}]},"SoundLoopMode":{"enums":[{"key":"Default","value":"0","description":"Default value defined in the asset"},{"key":"Forever","value":"1","description":"Overrides it to make it loop forever"},{"key":"Never","value":"2","description":"Overrides it to make it play once"}]},"StanceMode":{"enums":[{"key":"None","value":"0"},{"key":"Standing","value":"1"},{"key":"Crouching","value":"2"},{"key":"Proning","value":"3"}]},"SteeringType":{"enums":[{"key":"SingleAngle","value":"0","description":"Both wheels steer by the same amount"},{"key":"AngleRatio","value":"1","description":"Outer wheels on corner steer less than the inner ones by set ratio"},{"key":"Ackermann","value":"2","description":"Ackermann steering principle is applied"}]},"SurfaceType":{"enums":[{"key":"Default","value":"0"},{"key":"Carpet","value":"1"},{"key":"Concrete","value":"2"},{"key":"Grass","value":"3"},{"key":"Gravel","value":"4"},{"key":"Ground","value":"5"},{"key":"MetalLight","value":"6"},{"key":"Plastic","value":"7"},{"key":"Sand","value":"8"},{"key":"Snow","value":"9"},{"key":"Water","value":"10"},{"key":"WoodLight","value":"11"},{"key":"Flesh","value":"12"},{"key":"MetalHeavy","value":"13"},{"key":"WoodHeavy","value":"14"},{"key":"Ice","value":"15"},{"key":"Mud","value":"16"},{"key":"Rock","value":"17"},{"key":"Thump","value":"18"},{"key":"Glass","value":"19"},{"key":"Rubber","value":"20"},{"key":"Air","value":"21"}]},"SwimmingMode":{"enums":[{"key":"None","value":"0"},{"key":"Surface","value":"1"},{"key":"Underwater","value":"2"}]},"TextRenderAlignCamera":{"enums":[{"key":"Unaligned","value":"0"},{"key":"AlignCameraRotation","value":"1"},{"key":"FaceCamera","value":"2"}]},"TextRenderBevelType":{"enums":[{"key":"Linear","value":"0"},{"key":"HalfCircle","value":"1"},{"key":"Convex","value":"2"},{"key":"Concave","value":"3"},{"key":"OneStep","value":"4"},{"key":"TwoSteps","value":"5"},{"key":"Engraved","value":"6"}]},"TextRenderHorizontalAlignment":{"enums":[{"key":"Left","value":"0"},{"key":"Center","value":"1"},{"key":"Right","value":"2"}]},"TextRenderVerticalAlignment":{"enums":[{"key":"Top","value":"0"},{"key":"Center","value":"1"},{"key":"Bottom","value":"2"},{"key":"QuadTop","value":"3"}]},"TriggerType":{"enums":[{"key":"Sphere","value":"0"},{"key":"Box","value":"1"}]},"TraceMode":{"supports_bitwise":true,"enums":[{"key":"DrawDebug","value":"1 << 0","description":"Whether to draw a 3D line representing the ray"},{"key":"TraceComplex","value":"1 << 1","description":"Whether should trace against complex collision"},{"key":"ReturnPhysicalMaterial","value":"1 << 2","description":"Whether want to include the physical material in the results (adds <code>SurfaceType</code> to result)"},{"key":"ReturnEntity","value":"1 << 3","description":"Whether want to return the Entity hit (adds <code>Entity</code> to result)"},{"key":"ReturnNames","value":"1 << 4","description":"Whether should return names (adds <code>ActorName</code>, <code>ComponentName</code> and <code>BoneName</code> to result)"},{"key":"ReturnUV","value":"1 << 5","description":"Whether want to trace and return UV information (adds <code>UV</code> to result)"},{"key":"TraceOnlyVisibility","value":"1 << 6","description":"Whether should only trace for objects that don\'t ignore visibility collision channel"}]},"ViewMode":{"enums":[{"key":"FPS","value":"0","description":"First Person View"},{"key":"TPS1","value":"1","description":"Third Person Close View"},{"key":"TPS2","value":"2","description":"Third Person Medium View"},{"key":"TPS3","value":"3","description":"Third Person Far View"},{"key":"TopDown","value":"4","description":"Top Down View"}]},"VOIPSetting":{"enums":[{"key":"Local","value":"0","description":"3D Sound"},{"key":"Global","value":"1","description":"2D Sound"},{"key":"Muted","value":"2"}]},"WeatherType":{"enums":[{"key":"ClearSkies","value":"1"},{"key":"Cloudy","value":"2"},{"key":"Foggy","value":"3"},{"key":"Overcast","value":"4"},{"key":"PartlyCloudy","value":"5"},{"key":"Rain","value":"6"},{"key":"RainLight","value":"7"},{"key":"RainThunderstorm","value":"8"},{"key":"SandDustCalm","value":"9"},{"key":"SandDustStorm","value":"10"},{"key":"Snow","value":"11"},{"key":"SnowBlizzard","value":"12"},{"key":"SnowLight","value":"13"}]},"WebUIModifier":{"supports_bitwise":true,"enums":[{"key":"None","value":"0"},{"key":"CapsLockOn","value":"1 << 0"},{"key":"ShiftDown","value":"1 << 1"},{"key":"ControlDown","value":"1 << 2"},{"key":"AltDown","value":"1 << 3"},{"key":"LeftMouseButton","value":"1 << 4"},{"key":"MiddleMouseButton","value":"1 << 5"},{"key":"RightMouseButton","value":"1 << 6"},{"key":"CommandDown","value":"1 << 7"},{"key":"NumLockOn","value":"1 << 8"},{"key":"IsKeyPad","value":"1 << 9"},{"key":"IsLeft","value":"1 << 10"},{"key":"IsRight","value":"1 << 11"},{"key":"AltgrDown","value":"1 << 12"},{"key":"IsRepeat","value":"1 << 13"}]},"WebUIKeyType":{"enums":[{"key":"Down","value":"0"},{"key":"Up","value":"1"},{"key":"Char","value":"2"}]},"WebUIMouseType":{"enums":[{"key":"Left","value":"0"},{"key":"Right","value":"1"},{"key":"Middle","value":"2"}]},"WidgetVisibility":{"enums":[{"key":"Hidden","value":"0"},{"key":"Visible","value":"1"},{"key":"VisibleNotHitTestable","value":"2"}]},"WidgetSpace":{"enums":[{"key":"World","value":"0","description":"The widget is rendered in the world as mesh, it can be occluded like any other mesh in the world"},{"key":"Screen","value":"1","description":"The widget is rendered in the screen, completely outside of the world, never occluded"}]}}')},BleedingEdge:{Class:{Entity:n,Actor:i,Pickable:r,Paintable:o,Damageable:s,Vehicle:l,Pawn:c,Billboard:p,Blueprint:d,Cable:h,Canvas:m,Character:u,CharacterSimple:y,Database:f,Decal:g,File:b,Gizmo:v,Grenade:_,Light:S,Melee:w,Particle:k,Player:C,Prop:T,SceneCapture:A,StaticMesh:P,Sound:x,TextRender:M,Trigger:D,VehicleWheeled:R,VehicleWater:V,Weapon:G,WebUI:I,Widget:E,Widget3D:W},Struct:{Color:N,Matrix:B,Quat:j,Rotator:L,Vector:O,Vector2D:F},StaticClass:{Assets:U,Chat:z,Client:H,Console:q,Debug:J,Discord:K,Events:$,HTTP:Y,Input:X,Level:Q,Navigation:Z,Package:ee,PostProcess:te,Server:ae,Sky:ne,Steam:ie,Timer:re,Trace:oe,Viewport:se},UtilityClass:{JSON:le,TOML:ce,NanosMath:pe,NanosUtils:de,NanosTable:he},StandardLibrary:{string:me,math:ye,table:ue},Enums:fe}}},54735:(e,t,a)=>{a.d(t,{Ee:()=>h,Rj:()=>s,ae:()=>p,bJ:()=>m,g5:()=>c,jV:()=>l,wk:()=>u,zr:()=>d});var n=a(44070),i=a(54625),r=a(21122),o=a(74848);const s=({path:e,noplay:t,controls:a=!0,className:n,style:i})=>(0,o.jsx)("video",{controls:a,allowFullScreen:!0,preload:"none",autoPlay:!t,loop:!t,muted:!t,className:n,style:i,children:(0,o.jsx)("source",{src:`https://github.com/nanos-world/docs/raw/master/external/videos${e}`})},e),l=({path:e,className:t})=>(0,o.jsx)("img",{src:`https://github.com/nanos-world/docs/raw/master/external/images${e}`,className:t,decoding:"async",loading:"lazy"}),c=()=>{const e=(0,n.ir)();return e?e.path:"/docs/next"},p=e=>e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),d=e=>(0,o.jsx)(i.N_,{...e,to:`${c()}/${e.to}`}),h=({children:e})=>(0,o.jsx)("p",{className:"media-legend",children:e}),m=({img_left:e,label_left:t,img_right:a,label_right:n,legend:i,max_width:r="100%",enable_zoom:s=!0,zoom_direction:l="top left",caption_on_bottom:c=!0})=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)("img-comparison-slider",{class:s?"img-comparison-slider-zoomable":"",style:{maxWidth:r},children:[(0,o.jsxs)("figure",{slot:"first",class:"before",children:[(0,o.jsx)("img",{width:"100%",src:e,style:{transformOrigin:l}}),(0,o.jsx)("figcaption",{style:c?{bottom:"10px"}:{top:"10px"},children:t})]}),(0,o.jsxs)("figure",{slot:"second",class:"after",children:[(0,o.jsx)("img",{width:"100%",src:a,style:{transformOrigin:l}}),(0,o.jsx)("figcaption",{style:c?{bottom:"10px"}:{top:"10px"},children:n})]})]}),(0,o.jsx)(h,{children:i})]}),u=({username:e="I2I3537D1"})=>(0,o.jsx)("div",{style:{textAlign:"center"},children:(0,o.jsx)("a",{href:`https://ko-fi.com/${e}`,target:"_blank",style:{display:"inline-block"},children:(0,o.jsx)(r.A,{alt:"Ko-fi",sources:{light:"/img/docs/kofi-dark.webp",dark:"/img/docs/kofi-beige.webp"},style:{maxWidth:"300px"}})})})},78154:(e,t,a)=>{a.d(t,{Ec:()=>d,NG:()=>y,WN:()=>p,aQ:()=>m,f4:()=>u,hO:()=>l,r4:()=>f,y5:()=>h,zc:()=>c});a(96540);var n=a(16151),i=a.n(n),r=a(81253),o=a(25191),s=a(74848);const l=({img:e,title:t,subtitle:a,description:n})=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("h3",{className:"tooltip-header",children:[(0,s.jsx)("img",{src:e,title:t,className:"tooltip-img"}),(0,s.jsxs)("span",{className:"tooltip-span",children:[(0,s.jsx)("div",{children:t}),(0,s.jsx)("div",{className:"tooltip-sub",children:a})]})]}),(0,s.jsx)("span",{dangerouslySetInnerHTML:{__html:n}})]}),c=({label:e,description:t,subtitle:a})=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h3",{className:"tooltip-header",children:(0,s.jsxs)("span",{className:"tooltip-span",children:[(0,s.jsx)("div",{children:e}),(0,s.jsx)("div",{className:"tooltip-sub",children:a})]})}),(0,s.jsx)("span",{dangerouslySetInnerHTML:{__html:t}})]}),p=({class_name:e,emoji:t,description:a,append_title:n,inheritance_children:i})=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("h3",{className:"tooltip-header",children:[(0,s.jsx)("span",{className:"tooltip-img",children:t}),(0,s.jsxs)("span",{className:"tooltip-span",children:[(0,s.jsx)("div",{children:e}),(0,s.jsx)("div",{className:"tooltip-sub",children:n})]})]}),(0,s.jsx)("span",{dangerouslySetInnerHTML:{__html:a}}),i?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Child Classes: ",i.map(((e,t)=>(0,o.C_)(e,t))).reduce(((e,t)=>[e,", ",t])),"."]}):""]}),d=({class_name:e,event_data:t})=>(0,s.jsx)(i(),{className:"language-lua",children:(0,o.t2)(e,t)}),h=({class_name:e,function_data:t})=>(0,s.jsx)(i(),{className:"language-lua",children:(0,o.FQ)(e,t)}),m=({class_name:e,function_data:t})=>(0,s.jsx)(i(),{className:"language-lua",children:(0,o.VB)(e,t)}),u=({function_parameters:e})=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i(),{className:"language-lua",children:["function(",(0,o.Zd)(e),")"]}),(0,s.jsx)("br",{}),(0,s.jsx)(o.Zv,{parameters:e,include_default:!1})]}),y=({table_properties:e,table_properties_custom:t})=>(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)(i(),{className:"language-lua",children:["{",e?e.map((e=>`\n\t["${e.name}"] = ${e.type},${e.description?` -- ${e.description}`:""}`)).join(""):t,"\n}"]})}),f=({enum_name:e,enum_data:t})=>(0,s.jsx)(r.y,{enum_name:e,enum_data:t,is_tooltip:!0})},81253:(e,t,a)=>{a.d(t,{X:()=>l,y:()=>s});a(96540);var n=a(26474),i=a(27293),r=a(25191),o=a(74848);const s=({enum_name:e,enum_data:t,is_tooltip:a})=>(0,o.jsxs)(o.Fragment,{children:[a?(0,o.jsxs)("h3",{children:[(0,o.jsx)("img",{src:"/img/scripting/lua.webp",title:"Lua",className:"tooltip-img"}),(0,o.jsxs)("span",{className:"tooltip-span",children:[(0,o.jsx)("div",{children:e}),(0,o.jsx)("div",{className:"tooltip-sub",children:"Enum (integer)"})]})]}):(0,o.jsxs)("h3",{id:e.toLowerCase(),children:[(0,o.jsx)("code",{children:e}),(0,o.jsx)("a",{className:"hash-link",href:`#${e.toLowerCase()}`})]}),(0,o.jsx)("blockquote",{children:(0,o.jsx)("span",{dangerouslySetInnerHTML:{__html:t?t.description:null}})}),t&&t.supports_bitwise?(0,o.jsxs)(i.A,{type:"tip",icon:"\ud83d\udca1",title:"TIP",children:["This Enum supports ",(0,o.jsx)("a",{href:"https://www.lua.org/manual/5.4/manual.html#3.4.2",children:"Bitwise Operations"}),"!"]}):null,t&&t.relations?(0,o.jsxs)("p",{className:"relations",children:["Used by ",(0,r.GU)(t.relations),"."]}):null,(0,o.jsxs)("table",{style:{width:"100%",display:"table",marginBottom:"0"},children:[(0,o.jsx)("thead",{children:(0,o.jsxs)("tr",{children:[(0,o.jsx)("th",{children:"Label"}),(0,o.jsx)("th",{children:"Value"}),(0,o.jsx)("th",{children:"Description"})]})}),(0,o.jsx)("tbody",{children:t&&t.enums?t.enums.map((t=>(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{style:{whiteSpace:"nowrap"},children:(0,o.jsxs)("code",{children:[e,".",t.key]})}),(0,o.jsx)("td",{style:{whiteSpace:"nowrap"},children:(0,o.jsx)("code",{children:t.value})}),(0,o.jsx)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:t.description}})]},t.key))):null})]}),a?"":(0,o.jsx)("hr",{})]}),l=()=>Object.keys(n.A.BleedingEdge.Enums).map((e=>(0,o.jsx)(s,{enum_name:e,enum_data:n.A.BleedingEdge.Enums[e]},e)))}}]);