"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[6119],{28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>t});var i=o(96540);const l={},s=i.createContext(l);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},79046:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"core-concepts/packages/c-module","title":"C Module","description":"Custom Lua C Binaries Libraries","source":"@site/i18n/fr/docusaurus-plugin-content-docs/version-latest/core-concepts/packages/c-module.md","sourceDirName":"core-concepts/packages","slug":"/core-concepts/packages/c-module","permalink":"/fr/docs/core-concepts/packages/c-module","draft":false,"unlisted":false,"editUrl":"https://crowdin.com/project/nanos-world-docs/fr","tags":[{"inline":true,"label":"scripting","permalink":"/fr/docs/tags/scripting"},{"inline":true,"label":"packages","permalink":"/fr/docs/tags/packages"}],"version":"latest","lastUpdatedBy":null,"lastUpdatedAt":null,"sidebarPosition":1,"frontMatter":{"title":"C Module","description":"Custom Lua C Binaries Libraries","sidebar_position":1,"tags":["scripting","packages"],"keywords":["c","module","library","binary","package"]},"sidebar":"main","previous":{"title":"Guide sur les Packages","permalink":"/fr/docs/core-concepts/packages/packages-guide"},"next":{"title":"\xc9cran de chargement","permalink":"/fr/docs/core-concepts/packages/loading-screen"}}');var l=o(74848),s=o(28453);const a={title:"C Module",description:"Custom Lua C Binaries Libraries",sidebar_position:1,tags:["scripting","packages"],keywords:["c","module","library","binary","package"]},t=void 0,r={},d=[{value:"Creating your C Module binaries",id:"creating-your-c-module-binaries",level:2},{value:"Premi\xe8res \xe9tapes",id:"premi\xe8res-\xe9tapes",level:4},{value:"Comprendre l&#39;exemple",id:"comprendre-lexemple",level:3},{value:"Compiling your C Module",id:"compiling-your-c-module",level:3},{value:"Creating a C Module Package",id:"creating-a-c-module-package",level:2},{value:"Loading and Using your C Module",id:"loading-and-using-your-c-module",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"C Module is a Package type that allows extending the functionalities of nanos world Scripting API"}),"\n",(0,l.jsx)(n.p,{children:"C Modules allows you to extend the functionality of the nanos world scripting API on the server side. Actuellement, seuls les modules C sont pris en charge."}),"\n",(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsx)(n.p,{children:"Sachez que cette partie de l'API de scripting est actuellement en cours de r\xe9alisation et peut \xeatre modifi\xe9e \xe0 tout moment."})}),"\n",(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsx)(n.p,{children:"Comme il s'agit d'une proc\xe9dure avanc\xe9e, des instabilit\xe9s, voire des crashs, peuvent se produire."})}),"\n",(0,l.jsx)(n.h2,{id:"creating-your-c-module-binaries",children:"Creating your C Module binaries"}),"\n",(0,l.jsxs)(n.p,{children:["To create your own module, fist make sure you have ",(0,l.jsx)(n.strong,{children:"Visual Studio"})," installed with ",(0,l.jsx)(n.strong,{children:"Desktop development with C++"})," (and ",(0,l.jsx)(n.strong,{children:"CMake"}),") or any other C compiler on Linux."]}),"\n",(0,l.jsx)(n.h4,{id:"premi\xe8res-\xe9tapes",children:"Premi\xe8res \xe9tapes"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Then, clone our ",(0,l.jsx)(n.a,{href:"https://github.com/nanos-world-modules/module-example",children:"example module"})," in your computer to get start with it."]}),"\n",(0,l.jsxs)(n.li,{children:["After cloning, you will need to download it's submodules with ",(0,l.jsx)(n.code,{children:"git submodule update --init --recursive"})," - this will download the ",(0,l.jsx)(n.a,{href:"https://github.com/nanos-world/module-sdk/",children:"module-sdk"})," as a git submodule into deps/ folder automatically."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"comprendre-lexemple",children:"Comprendre l'exemple"}),"\n",(0,l.jsxs)(n.p,{children:["The important file is under ",(0,l.jsx)(n.code,{children:"src/example.cpp"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",metastring:"reference",children:"https://github.com/nanos-world-modules/module-example/blob/main/src/example.cpp\n"})}),"\n",(0,l.jsx)(n.h3,{id:"compiling-your-c-module",children:"Compiling your C Module"}),"\n",(0,l.jsx)(n.p,{children:"Pour compiler l'exemple, suivez les \xe9tapes suivantes :"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Create a folder called ",(0,l.jsx)(n.code,{children:"build/"}),": ",(0,l.jsx)(n.code,{children:"mkdir build"})]}),"\n",(0,l.jsxs)(n.li,{children:["Enter the build folder: ",(0,l.jsx)(n.code,{children:"cd build"})]}),"\n",(0,l.jsxs)(n.li,{children:["Generate the cmake build files with ",(0,l.jsx)(n.code,{children:"cmake .."})]}),"\n",(0,l.jsxs)(n.li,{children:["Finally build it with ",(0,l.jsx)(n.code,{children:"cmake --build . --config Release"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"This will generate the compiled library at:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["For Windows: ",(0,l.jsx)(n.code,{children:"build/Release/example.dll"})]}),"\n",(0,l.jsxs)(n.li,{children:["For Linux: ",(0,l.jsx)(n.code,{children:"build/libexample.so"})]}),"\n"]}),"\n",(0,l.jsx)(n.admonition,{type:"tip",children:(0,l.jsxs)(n.p,{children:["If you intend to make your module available for both Linux and Windows servers, you must also compile the ",(0,l.jsx)(n.code,{children:".so"})," files in a Linux machine and deliver both library files with your Package."]})}),"\n",(0,l.jsx)(n.h2,{id:"creating-a-c-module-package",children:"Creating a C Module Package"}),"\n",(0,l.jsxs)(n.p,{children:["First of all, create a new Package of type ",(0,l.jsx)(n.a,{href:"packages-guide#c-module",children:"c-module"}),", and add your ",(0,l.jsx)(n.code,{children:".dll"})," (windows) and/or ",(0,l.jsx)(n.code,{children:".so"})," (linux) files into the Package's root folder. Votre dossier devrait ressembler \xe0 cela :"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-folder-structure",children:"Packages/\n\u2514\u2500\u2500 my-module/\n    \u251c\u2500\u2500 Package.toml\n    \u251c\u2500\u2500 example.dll\n    \u2514\u2500\u2500 libexample.so\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Then add the name of your module library (in our case, ",(0,l.jsx)(n.code,{children:"example"}),") to the Package.toml ",(0,l.jsx)(n.strong,{children:"modules"})," list:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",metastring:'title="my-module/Package.toml"',children:'# vault configurations\n[meta]\n    # friendly name\n    title =                 "My Awesome C Module"\n    # contributors\n    author =                "Contributor Names"\n    # version\n    version =               "0.1.0"\n\n# c module configurations\n[c_module]\n    # list of modules to load (without file extension)\n    modules = [\n                            # highlight-next-line\n                            "example",\n    ]\n'})}),"\n",(0,l.jsx)(n.h2,{id:"loading-and-using-your-c-module",children:"Loading and Using your C Module"}),"\n",(0,l.jsx)(n.p,{children:"Now you can load the package you created as usual, by adding it to the Config.toml's list of Packages requirement or by adding it to another Package's Package.toml as dependency, e.g.:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",metastring:'title="Server/Config.toml"',children:'...\n# game configurations\n[game]\n    # default startup map\n    map =               "default-blank-map"\n    # game-mode package to load (set the main game-mode package to load - you can load only one \'game-mode\' package type at once)\n    game_mode =         ""\n    # packages list (set the packages you want to load)\n    packages = [\n                        # highlight-next-line\n                        "my-module",\n    ]\n...\n'})}),"\n",(0,l.jsx)(n.p,{children:"Et dans votre package, vous pouvez le charger et l'utiliser :"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",metastring:'title="my-awesome-package/Server/Index.lua" showLineNumbers',children:"-- Calls the module function 'test'\n-- Will print 'Hello World' on console\nConsole.Log(example.test())\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);