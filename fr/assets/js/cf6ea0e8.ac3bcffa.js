"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[5039],{10297:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/changelog-2314cb94efaa7607167460a4099a6636.webp"},14153:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/description-f30dcbd5e6c043d0e6c9027eec54c875.webp"},26241:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/playtest-01-f149a8bdf7faa41ae0885176bf1c9eb5.webp"},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(96540);const i={},a=s.createContext(i);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:t},e.children)}},32881:e=>{e.exports=JSON.parse('{"permalink":"/fr/blog/october-2022","editUrl":"https://crowdin.com/project/nanos-world-docs/fr","source":"@site/i18n/fr/docusaurus-plugin-content-blog/2022-11-09-october.md","title":"Oct: Playtest & Big API Refactor!","description":"Halloween Playtest, Big API Refactor and more!","date":"2022-11-09T00:00:00.000Z","tags":[{"inline":true,"label":"updates","permalink":"/fr/blog/tags/updates"}],"readingTime":6.75,"hasTruncateMarker":true,"authors":[{"name":"Gabriel \u2022 SyedMuhammad","title":"lead developer\u2122","page":{"permalink":"/fr/blog/authors/gtnardy"},"description":"nanos world Lead Developer.","socials":{"x":"https://x.com/gtnardy","github":"https://github.com/gtnardy"},"imageURL":"/fr/img/blog/syed.webp","key":"gtnardy"}],"frontMatter":{"slug":"october-2022","title":"Oct: Playtest & Big API Refactor!","authors":"gtnardy","tags":["updates"],"image":"/img/blog/2022-october/october-news.webp"},"unlisted":false,"prevItem":{"title":"Nov: Entity System, UDS & UE5.1!","permalink":"/fr/blog/november-2022"},"nextItem":{"title":"Sep: Dimensions!","permalink":"/fr/blog/september-2022"}}')},42101:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/new-vehicles-e37ed8a70f7c95e9e9962f55896624c2.webp"},69137:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/october-news-bf15512ba34f70aad174686272b867fc.webp"},73621:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var s=n(32881),i=n(74848),a=n(28453);const o={slug:"october-2022",title:"Oct: Playtest & Big API Refactor!",authors:"gtnardy",tags:["updates"],image:"/img/blog/2022-october/october-news.webp"},r=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Halloween Playtest",id:"halloween-playtest",level:2},{value:"Am\xe9liorations des V\xe9hicules",id:"am\xe9liorations-des-v\xe9hicules",level:2},{value:"New Default Vehicles",id:"new-default-vehicles",level:3},{value:"Animation Blueprints",id:"animation-blueprints",level:3},{value:"Dynamic Lights Texture",id:"dynamic-lights-texture",level:3},{value:"New Subtle SFX",id:"new-subtle-sfx",level:3},{value:"Vault Text HTML Parser",id:"vault-text-html-parser",level:2},{value:"Native JSON Parser",id:"native-json-parser",level:2},{value:"Kill Z",id:"kill-z",level:2},{value:"Big API Refactoring",id:"big-api-refactoring",level:2},{value:"Package Compatibility",id:"package-compatibility",level:3},{value:"Events",id:"events",level:3},{value:"Modules",id:"modules",level:3},{value:"Configuration Files",id:"configuration-files",level:3},{value:"Server, Package &amp; Assets Image",id:"server-package--assets-image",level:3},{value:"Multiple Constructors",id:"multiple-constructors",level:3},{value:"Static Classes Renames",id:"static-classes-renames",level:3},{value:"Class Renames",id:"class-renames",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components},{VideoExternal:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("VideoExternal",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Halloween Playtest, Big API Refactor and more!"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(69137).A+"",width:"800",height:"320"})}),"\n",(0,i.jsx)(t.h2,{id:"halloween-playtest",children:"Halloween Playtest"}),"\n",(0,i.jsx)(t.p,{children:"This month we had our annual Halloween \ud83c\udf83 event! As always, it has always been a moment of great evolution for nanos world! I would like to thank everyone who participated playing and the testers who participated creating content and game-modes for this event!"}),"\n",(0,i.jsx)(t.p,{children:"This year we had 4x more registered Playtesters than last year, and we hit several records in simultaneous players. And best of all, the game server managed to handle them all with ease \ud83d\ude4f! (except by the Vault that we had to increase the download limit during the event \ud83d\ude1c)."}),"\n",(0,i.jsx)(t.p,{children:"Due to the event, we halted the updates for two weeks to focus only on bug corrections and improvements. We pushed more than 10 small patches with many bug fixes and improvements we've found before the event to grant it's stability!"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(26241).A+"",width:"1919",height:"1079"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(91716).A+"",width:"1919",height:"1079"})}),"\n",(0,i.jsx)(t.h2,{id:"am\xe9liorations-des-v\xe9hicules",children:"Am\xe9liorations des V\xe9hicules"}),"\n",(0,i.jsx)(t.p,{children:"I did several improvements on the Vehicle class, allowing bigger customization on them."}),"\n",(0,i.jsx)(t.h3,{id:"new-default-vehicles",children:"New Default Vehicles"}),"\n",(0,i.jsx)(t.p,{children:"We've added a new Vehicle Pack to the default nanos world vehicles pack. 4 of them are from a Feature free Marketplace pack (from the same creator of our previous one), and the Offroad is from Epic Games."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(42101).A+"",width:"1915",height:"846"})}),"\n",(0,i.jsx)(t.h3,{id:"animation-blueprints",children:"Animation Blueprints"}),"\n",(0,i.jsx)(t.p,{children:"I've added the possibility of loading custom Animation Blueprints on Vehicles, allowing the opportunity to have custom suspension animations like this one of the new Offroad vehicle:"}),"\n",(0,i.jsx)(s,{path:"/blog/2022-october/offroad.mp4"}),"\n",(0,i.jsx)(t.h3,{id:"dynamic-lights-texture",children:"Dynamic Lights Texture"}),"\n",(0,i.jsxs)(t.p,{children:["Now it is possible to configure your vehicle with custom Material Parameters to turn it's Lights ON or OFF dynamically. You can find more info on how to configure your vehicles materials ",(0,i.jsx)(t.a,{href:"/docs/next/assets-modding/creating-assets/skeletal-meshes/vehicles-meshes#adding-dynamic-head--tail-lights",children:"here"}),"."]}),"\n",(0,i.jsx)(s,{path:"/blog/2022-october/taillights.webm"}),"\n",(0,i.jsx)(t.h3,{id:"new-subtle-sfx",children:"New Subtle SFX"}),"\n",(0,i.jsx)(t.p,{children:"Also, I've added new custom sounds effects to vehicles, such as pulling the handbrake, or wheels brake screeching for example which adds to the realism and immersion."}),"\n",(0,i.jsx)(t.h2,{id:"vault-text-html-parser",children:"Vault Text HTML Parser"}),"\n",(0,i.jsx)(t.p,{children:"Previously, as Vault item descriptions and changelogs were generated with HTML, we had CEF Browsers (WebUI) rendering them, but it was too much overkill and also quite disconnected from the rest of the UI."}),"\n",(0,i.jsx)(t.p,{children:"So I decided to implement a custom HTML Parser to convert the HTML into proper Unreal Rich Text, having then a native renderer for the descriptions and changelog, making everything pretty again."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(14153).A+"",width:"849",height:"787"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(10297).A+"",width:"847",height:"779"})}),"\n",(0,i.jsx)(t.h2,{id:"native-json-parser",children:"Native JSON Parser"}),"\n",(0,i.jsx)(t.p,{children:"I am migrating our current built-in JSON library to a native more-efficient JSON parser. With this new parser, we've managed to reach 10x speed when parsing JSON strings! All methods will remain the same, just the implementation will change."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Benchmark comparison: (9.5 MB JSON file)\nBenchmark 'Lua JSON Parser' (x10) took 9964ms.\nBenchmark 'Native JSON Parser' (x10) took 1057ms.\n"})}),"\n",(0,i.jsx)(t.h2,{id:"kill-z",children:"Kill Z"}),"\n",(0,i.jsx)(t.p,{children:"I implemented a built-in system for Kill Z. This is a system to destroying entities automatically when they reach too low heights, preventing some problems such as value overloading."}),"\n",(0,i.jsx)(t.p,{children:"Currently the Kill Z offset is hardcoded for testing."}),"\n",(0,i.jsx)(t.h2,{id:"big-api-refactoring",children:"Big API Refactoring"}),"\n",(0,i.jsx)(t.p,{children:"This refactoring update will come in a future update and it's not completely done yet, but I would like to advance some things that are planned to change. We know refactoring usually comes with several breaking changes, but this time I'm working harder to make this update with zero breaking changes, keeping backwards compatibilities until you update your packages."}),"\n",(0,i.jsx)(t.p,{children:"If you have more ideas for dramatical changes (such as renaming methods to maintain standard for example), please let us know so we can include in this big update!"}),"\n",(0,i.jsx)(t.h3,{id:"package-compatibility",children:"Package Compatibility"}),"\n",(0,i.jsx)(t.p,{children:'I will be introducing a new setting in the Package.toml for the "Compatibility Version", where you can configure the current version of the game that works with that package and if the game updates and any method that your package uses get modified, it will continue to work in a "compatibility mode" (with deprecated alerts).'}),"\n",(0,i.jsx)(t.p,{children:'This differs from the usual "deprecated warnings" because now in cases where the signature of a method changes the package will not stop working (as it happens today), and the old implementation/interface will still exist internally.'}),"\n",(0,i.jsx)(t.h3,{id:"events",children:"Events"}),"\n",(0,i.jsx)(t.p,{children:"Currently events work by just subscribing and calling them local or remotely, but we cannot strict if we just want to receive them on a specific side. A new addition will be the subscription of remote-only events:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:"Events.SubscribeRemote()\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This way only events called with ",(0,i.jsx)(t.code,{children:"Events.CallRemote()"})," on the other side will trigger it. And also events subscribed with ",(0,i.jsx)(t.code,{children:"Events.Subscribe()"})," will not receive remote events anymore."]}),"\n",(0,i.jsx)(t.h3,{id:"modules",children:"Modules"}),"\n",(0,i.jsx)(t.p,{children:"Modules (Lua external binaries) will be reformed to become a type of Package. This way they can be shared easily and used by other packages, including through Vault."}),"\n",(0,i.jsx)(t.h3,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,i.jsx)(t.p,{children:"Now different Packages types will have different configuration files format (toml)."}),"\n",(0,i.jsxs)(t.p,{children:["For example, the ",(0,i.jsx)(t.code,{children:"loading-screen"})," package configuration currently have a lot of configuration which is not used by it (dependencies, assets, lua settings, etc). I want to have specific configuration files for each kind of Package (Modules, Loading Screen, Game-Modes, Libraries and Scripts), as also they will be loaded in different ways internally."]}),"\n",(0,i.jsx)(t.h3,{id:"server-package--assets-image",children:"Server, Package & Assets Image"}),"\n",(0,i.jsxs)(t.p,{children:["I'm removing the ",(0,i.jsx)(t.code,{children:"image"})," URL setting inside the configuration .toml files, instead the image should be placed besides the .toml with the name ",(0,i.jsx)(t.code,{children:"Package.jpg"}),", ",(0,i.jsx)(t.code,{children:"Assets.jpg"})," or ",(0,i.jsx)(t.code,{children:"Server.jpg"}),". This will avoid some problems of the client accessing dangerous or bad external URLs."]}),"\n",(0,i.jsx)(t.h3,{id:"multiple-constructors",children:"Multiple Constructors"}),"\n",(0,i.jsx)(t.p,{children:"A feature that will be included is the possibility of multiple Constructors, a very good example is the Sound Class that has several parameters that depend if the sound is 2D or 3D:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:"-- Current Constructor\nSound(location, asset, is_2D_sound, auto_destroy, sound_type, volume, pitch, inner_radius, falloff_distance, attenuation_function, keep_playig_when_silent, loop_mode)\n\n-- New 2D Sound Constructor\nSound(asset, auto_destroy, sound_type, volume, pitch, loop_mode)\n\n-- New 3D Sound Constructor\nSound(location, asset, auto_destroy, sound_type, volume, pitch, inner_radius, falloff_distance, attenuation_function, keep_playig_when_silent, loop_mode)\n"})}),"\n",(0,i.jsx)(t.p,{children:"This way you can spawn a 2D or 3D sound just by choosing the right constructor!"}),"\n",(0,i.jsx)(t.h3,{id:"static-classes-renames",children:"Static Classes Renames"}),"\n",(0,i.jsx)(t.p,{children:"This will be a big organizational change! With each new update, some of our Static Classes are starting to accumulate lots of methods, and many of these are unrelated to each other."}),"\n",(0,i.jsx)(t.p,{children:"With this in mind, we will split some Static Classes into new Static Classes, aiming at the best organization and especially the easy search and understanding of scripting API functions, some of the following listed methods may be renamed to reduce redundancy (e.g. to Chat.SendMessage)."}),"\n",(0,i.jsx)(t.p,{children:"We will have several new Static Classes, to list a few:"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Chat"}),", ",(0,i.jsx)(t.code,{children:"Console"}),", ",(0,i.jsx)(t.code,{children:"Trace"}),", ",(0,i.jsx)(t.code,{children:"Navigation"}),", ",(0,i.jsx)(t.code,{children:"Debug"}),", ",(0,i.jsx)(t.code,{children:"Viewport"}),", ",(0,i.jsx)(t.code,{children:"Steam"}),", ",(0,i.jsx)(t.code,{children:"Discord"})," and others."]}),"\n",(0,i.jsx)(t.p,{children:"The full list with all changes will be listed when the update is released. All of these changes, including it's Events will be warned as deprecated for use."}),"\n",(0,i.jsx)(t.h3,{id:"class-renames",children:"Class Renames"}),"\n",(0,i.jsxs)(t.p,{children:["Some classes will also be renamed for better standardization. For example ",(0,i.jsx)(t.strong,{children:"Character"})," and ",(0,i.jsx)(t.strong,{children:"Vehicle"})," could become ",(0,i.jsx)(t.code,{children:"CharacterMannequin"})," and ",(0,i.jsx)(t.code,{children:"VehicleWheeled"}),", which allows new classes of other types e.g. ",(0,i.jsx)(t.code,{children:"VehicleWater"})," or ",(0,i.jsx)(t.code,{children:"CharacterGeneric"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(t.p,{children:"This was a month of several fixes, improvements and rethinking the API as a whole, refactor is always a challenge as I need to maintain everything working and still rearrange the new interfaces of it, I don't want to rush this change."}),"\n",(0,i.jsxs)(t.p,{children:["My main objective now is finishing the organization of the API refactoring (please give me feedback of the changes mentioned on this blog!). Once this get finished, I will get more comfortable on adding new things and classes into it, I have many new features being developed in parallel that have not yet been announced, several of them are from your suggestions from Canny (cof cof ",(0,i.jsx)(t.a,{href:"https://feedback.nanos-world.com",children:"vote!"})," cof cof)."]}),"\n",(0,i.jsx)(t.p,{children:"The result of the PlayTest was awesome! We had very few crashes and the server managed to handle very well the large amount of players!"}),"\n",(0,i.jsx)(t.p,{children:"I'm sure these upcoming improvements, including some not announced, will raise nanos world to another level of robustness!"}),"\n",(0,i.jsx)(t.p,{children:"Finally, thank you for all the support!! See you next time!"})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},91716:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/playtest-02-0d99d690f25c96d2c7088cd294db658e.webp"}}]);