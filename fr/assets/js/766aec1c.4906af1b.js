"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[6119],{28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var i=o(96540);const s={},l=i.createContext(s);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:n},e.children)}},79046:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"core-concepts/packages/c-module","title":"C Module","description":"Custom Lua C Binaries Libraries","source":"@site/i18n/fr/docusaurus-plugin-content-docs/version-latest/core-concepts/packages/c-module.md","sourceDirName":"core-concepts/packages","slug":"/core-concepts/packages/c-module","permalink":"/fr/docs/core-concepts/packages/c-module","draft":false,"unlisted":false,"editUrl":"https://crowdin.com/project/nanos-world-docs/fr","tags":[{"inline":true,"label":"scripting","permalink":"/fr/docs/tags/scripting"},{"inline":true,"label":"packages","permalink":"/fr/docs/tags/packages"}],"version":"latest","lastUpdatedBy":null,"lastUpdatedAt":null,"sidebarPosition":1,"frontMatter":{"title":"C Module","description":"Custom Lua C Binaries Libraries","sidebar_position":1,"tags":["scripting","packages"],"keywords":["c","module","library","binary","package"]},"sidebar":"main","previous":{"title":"Guide sur les Packages","permalink":"/fr/docs/core-concepts/packages/packages-guide"},"next":{"title":"\xc9cran de chargement","permalink":"/fr/docs/core-concepts/packages/loading-screen"}}');var s=o(74848),l=o(28453);const r={title:"C Module",description:"Custom Lua C Binaries Libraries",sidebar_position:1,tags:["scripting","packages"],keywords:["c","module","library","binary","package"]},a=void 0,t={},d=[{value:"Creating your C Module binaries",id:"creating-your-c-module-binaries",level:2},{value:"Premi\xe8res \xe9tapes",id:"premi\xe8res-\xe9tapes",level:4},{value:"Comprendre l&#39;exemple",id:"comprendre-lexemple",level:3},{value:"Compiling your C Module",id:"compiling-your-c-module",level:3},{value:"Creating a C Module Package",id:"creating-a-c-module-package",level:2},{value:"Loading and Using your C Module",id:"loading-and-using-your-c-module",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"C Module is a Package type that allows extending the functionalities of nanos world Scripting API"}),"\n",(0,s.jsx)(n.p,{children:"C Modules allows you to extend the functionality of the nanos world scripting API on the server side. Actuellement, seuls les modules C sont pris en charge."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Sachez que cette partie de l'API de scripting est actuellement en cours de r\xe9alisation et peut \xeatre modifi\xe9e \xe0 tout moment."})}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Comme il s'agit d'une proc\xe9dure avanc\xe9e, des instabilit\xe9s, voire des crashs, peuvent se produire."})}),"\n",(0,s.jsx)(n.h2,{id:"creating-your-c-module-binaries",children:"Creating your C Module binaries"}),"\n",(0,s.jsxs)(n.p,{children:["To create your own module, fist make sure you have ",(0,s.jsx)(n.strong,{children:"Visual Studio"})," installed with ",(0,s.jsx)(n.strong,{children:"Desktop development with C++"})," (and ",(0,s.jsx)(n.strong,{children:"CMake"}),") or any other C compiler on Linux."]}),"\n",(0,s.jsx)(n.h4,{id:"premi\xe8res-\xe9tapes",children:"Premi\xe8res \xe9tapes"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Then, clone our ",(0,s.jsx)(n.a,{href:"https://github.com/nanos-world-modules/module-example",children:"example module"})," in your computer to get start with it."]}),"\n",(0,s.jsxs)(n.li,{children:["After cloning, you will need to download it's submodules with ",(0,s.jsx)(n.code,{children:"git submodule update --init --recursive"})," - this will download the ",(0,s.jsx)(n.a,{href:"https://github.com/nanos-world/module-sdk/",children:"module-sdk"})," as a git submodule into deps/ folder automatically."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"comprendre-lexemple",children:"Comprendre l'exemple"}),"\n",(0,s.jsxs)(n.p,{children:["The important file is under ",(0,s.jsx)(n.code,{children:"src/example.cpp"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",metastring:"reference",children:"https://github.com/nanos-world-modules/module-example/blob/main/src/example.cpp\n"})}),"\n",(0,s.jsx)(n.h3,{id:"compiling-your-c-module",children:"Compiling your C Module"}),"\n",(0,s.jsx)(n.p,{children:"Pour compiler l'exemple, suivez les \xe9tapes suivantes :"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a folder called ",(0,s.jsx)(n.code,{children:"build/"}),": ",(0,s.jsx)(n.code,{children:"mkdir build"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Enter the build folder: ",(0,s.jsx)(n.code,{children:"cd build"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"cmake .."}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Build it with ",(0,s.jsx)(n.code,{children:"cmake --build . --config Release"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["And now you will have the dlls/libs in ",(0,s.jsx)(n.code,{children:"build/Release"})," folder."]}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-c-module-package",children:"Creating a C Module Package"}),"\n",(0,s.jsxs)(n.p,{children:["First of all, create a new Package of type ",(0,s.jsx)(n.a,{href:"packages-guide#c-module",children:"c-module"}),", and add your .dll and .so files into the Package's root folder. Votre dossier devrait ressembler \xe0 cela :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-folder-structure",children:"Packages/\n\u2514\u2500\u2500 my-module/\n    \u251c\u2500\u2500 Package.toml\n    \u251c\u2500\u2500 example.dll\n    \u2514\u2500\u2500 ...\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then make sure to add ",(0,s.jsx)(n.code,{children:"example"})," (or the name of your dll file) to the Package.toml configuration section:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'# c module configurations\n[c_module]\n    # list of binaries paths to load (without extension)\n    binaries = [\n                            "example",\n    ]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"loading-and-using-your-c-module",children:"Loading and Using your C Module"}),"\n",(0,s.jsx)(n.p,{children:"Now you can load the package you created as usual, by adding it to the Config.toml's list of Packages requirement or by adding it to another Package's Package.toml as dependency as well."}),"\n",(0,s.jsx)(n.p,{children:"Et dans votre package, vous pouvez le charger et l'utiliser :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",metastring:"showLineNumbers",children:"-- Calls the module function 'test'\n-- Will print 'Hello World' on console\nConsole.Log(example.test())\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);