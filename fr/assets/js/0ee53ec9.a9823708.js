"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[9352],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(96540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},29640:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"scripting-reference/classes/cable","title":"\u26d3\ufe0f Cable","description":"Un c\xe2ble repr\xe9sente une contrainte physique qui relie deux acteurs avec une repr\xe9sentation visuelle de type corde entre eux","source":"@site/i18n/fr/docusaurus-plugin-content-docs/version-latest/scripting-reference/classes/cable.mdx","sourceDirName":"scripting-reference/classes","slug":"/scripting-reference/classes/cable","permalink":"/fr/docs/scripting-reference/classes/cable","draft":false,"unlisted":false,"editUrl":"https://crowdin.com/project/nanos-world-docs/fr","tags":[{"inline":true,"label":"class","permalink":"/fr/docs/tags/class"}],"version":"latest","sidebarPosition":0,"frontMatter":{"title":"\u26d3\ufe0f Cable","description":"Un c\xe2ble repr\xe9sente une contrainte physique qui relie deux acteurs avec une repr\xe9sentation visuelle de type corde entre eux","sidebar_position":0,"tags":["class"]},"sidebar":"main","previous":{"title":"\ud83d\udd23 Blueprint","permalink":"/fr/docs/scripting-reference/classes/blueprint"},"next":{"title":"\ud83d\uddbc\ufe0f Canvas","permalink":"/fr/docs/scripting-reference/classes/canvas"}}');var r=t(74848),i=t(28453);const a={title:"\u26d3\ufe0f Cable",description:"Un c\xe2ble repr\xe9sente une contrainte physique qui relie deux acteurs avec une repr\xe9sentation visuelle de type corde entre eux",sidebar_position:0,tags:["class"]},c=void 0,o={},l=[{value:"\ud83c\udf92\xa0Examples",id:"examples",level:2},{value:"\ud83d\udee0\xa0Constructors",id:"constructors",level:2},{value:"\ud83d\uddff\xa0Static Functions",id:"static-functions",level:2},{value:"\ud83e\udda0\xa0Functions",id:"functions",level:2},{value:"\ud83d\ude80\xa0Events",id:"events",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components},{ConstructorDeclaration:t,EventsDeclaration:s,FunctionsDeclaration:a,HeaderDeclaration:c,StaticFunctionsDeclaration:o}=n;return t||p("ConstructorDeclaration",!0),s||p("EventsDeclaration",!0),a||p("FunctionsDeclaration",!0),c||p("HeaderDeclaration",!0),o||p("StaticFunctionsDeclaration",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(c,{type:"Class",name:"Cable",image:"/img/docs/cable.webp"}),"\n",(0,r.jsxs)(n.p,{children:["nanos world ",(0,r.jsx)(n.strong,{children:"Cables"})," are composed primarily of two Unreal Engine components: a ",(0,r.jsx)(n.a,{href:"https://docs.unrealengine.com/en-US/API/Plugins/CableComponent/UCableComponent/index.html",children:"Cable"})," and a ",(0,r.jsx)(n.a,{href:"https://docs.unrealengine.com/en-US/InteractiveExperiences/Physics/Constraints/ConstraintsBlueprints/index.html",children:"PhysicsConstraint"}),". Le premier est utilis\xe9 \xe0 des fins visuelles uniquement et le second donne les effets physiques effectifs qui sont appliqu\xe9s \xe0 chaque extr\xe9mit\xe9 du c\xe2ble."]}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["Cable ",(0,r.jsx)(n.strong,{children:"visuals"})," can be tweaked with ",(0,r.jsx)(n.code,{children:":SetForces()"}),", ",(0,r.jsx)(n.code,{children:":SetCableSettings()"})," and ",(0,r.jsx)(n.code,{children:":SetRenderingSettings()"})," methods. Ces m\xe9thodes n'ont pas d'effet sur la physique appliqu\xe9e et n'ont que des effets sur la repr\xe9sentation visuelle."]}),(0,r.jsxs)(n.p,{children:["Cable ",(0,r.jsx)(n.strong,{children:"physics"})," can be tweaked with ",(0,r.jsx)(n.code,{children:":SetAngularLimits()"})," and ",(0,r.jsx)(n.code,{children:":SetLinearLimits()"}),"."]})]}),"\n",(0,r.jsx)(n.p,{children:"Apr\xe8s avoir attach\xe9 les deux c\xf4t\xe9s de votre c\xe2ble, la physique peut \xeatre ajust\xe9e pour affecter la fa\xe7on dont la contrainte affectera les objets."}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Cables are automatically ",(0,r.jsx)(n.strong,{children:"destroyed"})," when one of the sides are detached"]})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"\ud83c\udf92\xa0Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="Server/Index.lua" showLineNumbers',children:'local my_cable = Cable(Vector())\nlocal cube_01 = Prop(Vector(100, 100, 100), Rotator(), "nanos-world::SM_Cube")\nlocal cube_02 = Prop(Vector(200, 0, 100), Rotator(), "nanos-world::SM_Cube")\n\nmy_cable:AttachStartTo(cube_01)\nmy_cable:AttachEndTo(cube_02)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"constructors",children:"\ud83d\udee0\xa0Constructors"}),"\n",(0,r.jsx)(t,{type:"Class",name:"Cable"}),"\n",(0,r.jsx)(n.h2,{id:"static-functions",children:"\ud83d\uddff\xa0Static Functions"}),"\n",(0,r.jsx)(o,{type:"Class",name:"Cable"}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"\ud83e\udda0\xa0Functions"}),"\n",(0,r.jsx)(a,{type:"Class",name:"Cable"}),"\n",(0,r.jsx)(n.h2,{id:"events",children:"\ud83d\ude80\xa0Events"}),"\n",(0,r.jsx)(s,{type:"Class",name:"Cable"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);