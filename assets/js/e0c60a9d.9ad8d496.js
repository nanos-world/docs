"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[27085],{28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var s=n(96540);const a={},i=s.createContext(a);function c(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(i.Provider,{value:t},e.children)}},37330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"scripting-reference/static-classes/timer","title":"\u23f1\ufe0f Timer","description":"Execute of code at specified time intervals.","source":"@site/docs/scripting-reference/static-classes/timer.mdx","sourceDirName":"scripting-reference/static-classes","slug":"/scripting-reference/static-classes/timer","permalink":"/docs/next/scripting-reference/static-classes/timer","draft":false,"unlisted":false,"editUrl":"https://github.com/nanos-world/docs/edit/master/docs/scripting-reference/static-classes/timer.mdx","tags":[{"inline":true,"label":"static-class","permalink":"/docs/next/tags/static-class"}],"version":"current","lastUpdatedBy":"Gabriel Tanasovici Nardy","lastUpdatedAt":1755341952000,"frontMatter":{"title":"\u23f1\ufe0f Timer","description":"Execute of code at specified time intervals.","tags":["static-class"]},"sidebar":"main","previous":{"title":"\ud83c\udfae Steam","permalink":"/docs/next/scripting-reference/static-classes/steam"},"next":{"title":"\ud83d\udd0d Trace","permalink":"/docs/next/scripting-reference/static-classes/trace"}}');var a=n(74848),i=n(28453);const c={title:"\u23f1\ufe0f Timer",description:"Execute of code at specified time intervals.",tags:["static-class"]},r=void 0,o={},l=[{value:"\ud83c\udf92\xa0Examples",id:"examples",level:2},{value:"\ud83d\uddff\xa0Static Functions",id:"static-functions",level:2},{value:"\ud83d\ude80\xa0Events",id:"events",level:2}];function m(e){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components},{EventsDeclaration:n,ExamplesDeclaration:s,HeaderDeclaration:c,StaticFunctionsDeclaration:r}=t;return n||p("EventsDeclaration",!0),s||p("ExamplesDeclaration",!0),c||p("HeaderDeclaration",!0),r||p("StaticFunctionsDeclaration",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(c,{type:"StaticClass",name:"Timer",is_static:!0,image:"/img/docs/stopwatch.webp"}),"\n",(0,a.jsx)(t.admonition,{type:"info",children:(0,a.jsx)(t.p,{children:"The shortest interval possible is equal to the local Tick Rate - usually at 33ms. On the Server this can vary depending on the Config.toml setting."})}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"\ud83c\udf92\xa0Examples"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",metastring:"showLineNumbers",children:'-- creates a Interval to call a function at every 2 seconds\nlocal my_interval = Timer.SetInterval(function(param1, param2)\n    Console.Log("Triggered each 2 seconds! Param1: " .. param1 .. ". Param2: " .. param2)\nend, 2000, "awesome param 1", 456)\n\n-- cancels the Interval\nTimer.ClearInterval(my_interval)\n\n-- creates a Timeout to call my_function in 5 seconds, once - passing a parameter\nTimer.SetTimeout(function(my_param)\n    Console.Log("nanos " .. my_param)\nend, 5000, "world")\n'})}),"\n",(0,a.jsx)(s,{type:"StaticClass",name:"Timer"}),"\n",(0,a.jsx)(t.h2,{id:"static-functions",children:"\ud83d\uddff\xa0Static Functions"}),"\n",(0,a.jsx)(r,{type:"StaticClass",name:"Timer"}),"\n",(0,a.jsx)(t.h2,{id:"events",children:"\ud83d\ude80\xa0Events"}),"\n",(0,a.jsx)(n,{type:"StaticClass",name:"Timer"})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);