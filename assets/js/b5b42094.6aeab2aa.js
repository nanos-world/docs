"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[63195],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var a=t(96540);const o={},r=a.createContext(o);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},49104:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"core-concepts/scripting/communicating-between-packages","title":"Packages Communication","description":"All you need to know to communicate between different Packages","source":"@site/docs/core-concepts/scripting/communicating-between-packages.md","sourceDirName":"core-concepts/scripting","slug":"/core-concepts/scripting/communicating-between-packages","permalink":"/docs/next/core-concepts/scripting/communicating-between-packages","draft":false,"unlisted":false,"editUrl":"https://github.com/nanos-world/docs/edit/master/docs/core-concepts/scripting/communicating-between-packages.md","tags":[{"inline":true,"label":"scripting","permalink":"/docs/next/tags/scripting"}],"version":"current","lastUpdatedBy":"Gabriel Tanasovici Nardy","lastUpdatedAt":1758067973000,"sidebarPosition":3,"frontMatter":{"title":"Packages Communication","description":"All you need to know to communicate between different Packages","sidebar_position":3,"tags":["scripting"]},"sidebar":"main","previous":{"title":"Authority Concepts","permalink":"/docs/next/core-concepts/scripting/authority-concepts"},"next":{"title":"Entity Values","permalink":"/docs/next/core-concepts/scripting/entity-values"}}');var o=t(74848),r=t(28453);const i={title:"Packages Communication",description:"All you need to know to communicate between different Packages",sidebar_position:3,tags:["scripting"]},s=void 0,c={},l=[{value:"Custom Events",id:"custom-events",level:2},{value:"Communicating with Packages in the same Side",id:"communicating-with-packages-in-the-same-side",level:3},{value:"Sending data through the network",id:"sending-data-through-the-network",level:3},{value:"Exporting Variables Globally",id:"exporting-variables-globally",level:2},{value:"Exporting a Function",id:"exporting-a-function",level:3},{value:"Calling an Exported Function from another Package",id:"calling-an-exported-function-from-another-package",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components},{MethodReference:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MethodReference",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"All you need to know to communicate between different Packages"}),"\n",(0,o.jsxs)(n.p,{children:["In nanos world there are 2 main ways which you can interact with other ",(0,o.jsx)(n.strong,{children:"Packages"}),". In this page we will explain in details how to do so."]}),"\n",(0,o.jsx)(n.h2,{id:"custom-events",children:"Custom Events"}),"\n",(0,o.jsx)(n.h3,{id:"communicating-with-packages-in-the-same-side",children:"Communicating with Packages in the same Side"}),"\n",(0,o.jsx)(n.p,{children:"Custom Events are the easier way to send or receive generic data or information to other packages:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="package-one/Server/Index.lua" showLineNumbers',children:'local my_parameter1 = 123\nlocal my_parameter2 = "hello there"\nlocal my_parameter3 = { important_stuff = "omg!" }\n\nEvents.Call("MyAwesomeEvent", my_parameter1, my_parameter2, my_parameter3)\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="package-two/Server/Index.lua" showLineNumbers',children:'Events.Subscribe("MyAwesomeEvent", function(parameter1, parameter2, parameter3)\n    Console.Log("Received " .. parameter1) -- Received 123\n    Console.Log("Received " .. parameter2) -- Received hello there\n    Console.Log("Received " .. parameter3) -- Received table\nend)\n'})}),"\n",(0,o.jsx)(n.h3,{id:"sending-data-through-the-network",children:"Sending data through the network"}),"\n",(0,o.jsx)(n.p,{children:"Sending information through the network is not different from sending in the same side:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="Server/Index.lua" showLineNumbers',children:'local my_parameter1 = "cool data from network"\n\n-- Call this event to all Players\nEvents.BroadcastRemote("GetThisFromServer", my_parameter1)\n\nlocal player_02 = GetPlayerSomehow()\n\n-- Or call this event to a specific player\nEvents.CallRemote("GetThisFromServer", player_02, my_parameter1)\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="Client/Index.lua" showLineNumbers',children:'Events.SubscribeRemote("GetThisFromServer", function(parameter1, parameter2, parameter3)\n    Console.Log("Received " .. parameter1) -- Received cool data from network\nend)\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["For more information and examples about using Custom Events, please refer to ",(0,o.jsx)(n.a,{href:"/docs/next/scripting-reference/static-classes/events",children:"Events"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"exporting-variables-globally",children:"Exporting Variables Globally"}),"\n",(0,o.jsxs)(n.p,{children:["Another way of communicating is using ",(0,o.jsx)(t,{type:"StaticClass",class_name:"Package",method:"Export",is_static:!0,show_class_name:!0})," method, it allows exposing variables (tables, functions, etc) globally so all other Packages can access it directly."]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Unlike events, exported functions can return values to the caller. But exported functions are only available to the same side (Server or Client)."})}),"\n",(0,o.jsx)(n.h3,{id:"exporting-a-function",children:"Exporting a Function"}),"\n",(0,o.jsx)(n.p,{children:"With that, you can export functions for example, like that:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="package-one/Server/Index.lua" showLineNumbers',children:'-- Defines a function which you want to export\nfunction SpawnCoolWeapon(location, rotation)\n    local cool_weapon = Weapon(location or Vector(), rotation or Rotator(), ...)\n    return cool_weapon\nend\n\n-- Exports the function to be called by other Packages\nPackage.Export("SpawnCoolWeapon", SpawnCoolWeapon)\n'})}),"\n",(0,o.jsx)(n.p,{children:"You can even export a whole table containing functions for example, to work as a library:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="package-one/Server/Index.lua" showLineNumbers',children:'-- Defines a table with functions which you want to export\nMyAwesomeLibrary = {\n\tCoolMethod = function(a, b)\n\t\treturn a + b\n\tend,\n\tAnotherAwesomeImportantMethod = function(c, d)\n\t\treturn c * d\n\tend\n}\n\n-- Exports the table to be accessed by other Packages\nPackage.Export("MyAwesomeLibrary", MyAwesomeLibrary)\n'})}),"\n",(0,o.jsx)(n.h3,{id:"calling-an-exported-function-from-another-package",children:"Calling an Exported Function from another Package"}),"\n",(0,o.jsx)(n.p,{children:"Now you can access that directly from other packages:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="package-two/Server/Index.lua" showLineNumbers',children:"-- Calls the exported function\nlocal cool_weapon = SpawnCoolWeapon(Vector(), Rotator())\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="package-two/Server/Index.lua" showLineNumbers',children:"-- Calls the exported table\nlocal awesome_result = MyAwesomeLibrary.CoolMethod(123, 456)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);