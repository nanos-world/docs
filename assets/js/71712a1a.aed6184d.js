"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[5174],{28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var t=o(96540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},66204:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"explore/sandbox-game-mode/tool-guns","title":"Tool Guns","description":"How to create new Tool Guns for nanos world","source":"@site/docs/explore/sandbox-game-mode/tool-guns.md","sourceDirName":"explore/sandbox-game-mode","slug":"/explore/sandbox-game-mode/tool-guns","permalink":"/docs/next/explore/sandbox-game-mode/tool-guns","draft":false,"unlisted":false,"editUrl":"https://github.com/nanos-world/docs/edit/master/docs/explore/sandbox-game-mode/tool-guns.md","tags":[{"inline":true,"label":"tutorial-example","permalink":"/docs/next/tags/tutorial-example"},{"inline":true,"label":"scripting","permalink":"/docs/next/tags/scripting"},{"inline":true,"label":"assets","permalink":"/docs/next/tags/assets"}],"version":"current","lastUpdatedBy":"Gabriel Tanasovici Nardy","lastUpdatedAt":1750756359000,"sidebarPosition":2,"frontMatter":{"title":"Tool Guns","description":"How to create new Tool Guns for nanos world","tags":["tutorial-example","scripting","assets"],"sidebar_position":2},"sidebar":"main","previous":{"title":"Spawn Menu","permalink":"/docs/next/explore/sandbox-game-mode/spawn-menu"},"next":{"title":"Context Menu","permalink":"/docs/next/explore/sandbox-game-mode/context-menu"}}');var s=o(74848),a=o(28453);const i={title:"Tool Guns",description:"How to create new Tool Guns for nanos world",tags:["tutorial-example","scripting","assets"],sidebar_position:2},l=void 0,r={},d=[{value:"Creating a custom Tool Gun",id:"creating-a-custom-tool-gun",level:2},{value:"Overriding ToolGun Client Methods",id:"overriding-toolgun-client-methods",level:2},{value:"Examples",id:"examples",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"How to create new Tool Guns for nanos world"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:o(84055).A+"",width:"1919",height:"1079"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This ",(0,s.jsx)(n.strong,{children:"Tool Gun"})," approach is a convention of the Sandbox game-mode and is not a game-wide concept."]})}),"\n",(0,s.jsxs)(n.p,{children:["The sandbox game-mode defines a ",(0,s.jsx)(n.code,{children:"ToolGun"})," class (see on GitHub: ",(0,s.jsx)(n.a,{href:"https://github.com/nanos-world/nanos-world-sandbox/blob/master/Server/Tools/BaseToolGun.lua",children:"Server"})," & ",(0,s.jsx)(n.a,{href:"https://github.com/nanos-world/nanos-world-sandbox/blob/master/Client/Tools/BaseToolGun.lua",children:"Client"}),") which helps on creating new tools based on a base Tool Gun."]}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-custom-tool-gun",children:"Creating a custom Tool Gun"}),"\n",(0,s.jsxs)(n.p,{children:["To create your own Tool based on Sandbox's ",(0,s.jsx)(n.code,{children:"ToolGun"}),", you need to create a new Class inheriting from it passing some custom parameters to the Class, like that:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",metastring:"showLineNumbers",children:'MyToolGun = ToolGun.Inherit("MyToolGun", {\n\t-- Spawn Menu\n\tname = "My Tool Gun",\n\timage = "package://my-package/MyToolGun.webp",\n\tcategory = "special",\n\n\t-- Tool Gun Tutorials which will display on Top Left\n\ttutorials = {\n\t\t{ key = "LeftClick", text = "spawn balloon" },\n\t\t{ key = "Undo", text = "undo spawn" },\n\t\t{ key = "ContextMenu", text = "balloon settings" },\n\t}\n\n\t-- Tool Gun Crosshair Trace Debug Settings which will display on World when aiming\n\tcrosshair_trace = {\n\t\t-- Which Collision Channel to trace\n\t\tcollision_channel = CollisionChannel.WorldStatic | CollisionChannel.WorldDynamic,\n\t\t-- Which Color to display when it traces an entity\n\t\tcolor_entity = Color.GREEN,\n\t\t-- Which Color to display when it traces anything else\n\t\tcolor_no_entity = Color.RED,\n\t}\n})\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["The values ",(0,s.jsx)(n.code,{children:"name"}),", ",(0,s.jsx)(n.code,{children:"image"})," and ",(0,s.jsx)(n.code,{children:"category"})," are used by ",(0,s.jsx)(n.strong,{children:"Spawn Menu"})," to display it properly on it."]}),(0,s.jsxs)(n.p,{children:["The other values ",(0,s.jsx)(n.code,{children:"tutorials"})," and ",(0,s.jsx)(n.code,{children:"crosshair_trace"})," are used by the ",(0,s.jsx)(n.strong,{children:"ToolGun"})," to add custom tutorials or behaviors when using it. Those parameters are optional."]}),(0,s.jsxs)(n.p,{children:["Those values are only used on ",(0,s.jsx)(n.strong,{children:"Client Side"}),"!"]})]}),"\n",(0,s.jsx)(n.h2,{id:"overriding-toolgun-client-methods",children:"Overriding ToolGun Client Methods"}),"\n",(0,s.jsxs)(n.p,{children:["The ToolGun have some methods on ",(0,s.jsx)(n.strong,{children:"Client Side"})," which you can override to implement custom behaviors to your tool when the Local Player interacts with it."]}),"\n",(0,s.jsx)(n.p,{children:"You can just override them in your custom Tool Gun class to implement them:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",metastring:'title="Client/Index.lua" showLineNumbers',children:"-- Called when you Fire with it\nfunction MyToolGun:OnLocalPlayerFire(character)\n\t-- Do something\n\n\t-- Something useful to do here is tracing for where the Player fire\n\t-- and send that coordinate to server to spawn something at that location\nend\n\n-- Called when you Pick Up it\nfunction MyToolGun:OnLocalPlayerPickUp(character)\n\t-- Do something\n\n\t-- Something useful to do here is adding a new entry to Context Menu\n\t-- when picking it up (see Sandbox's BalloonGun example)\nend\n\n-- Called when you Drop it\nfunction MyToolGun:OnLocalPlayerDrop(character)\n\t-- Do something\n\n\t-- You will much likely want to disable any effect or similar thing when\n\t-- you drop your Tool\nend\n"})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:["You can find more examples of Tools in the Sandbox's ",(0,s.jsx)(n.code,{children:"Tools/"})," folder on both ",(0,s.jsx)(n.a,{href:"https://github.com/nanos-world/nanos-world-sandbox/tree/master/Client/Tools",children:"Client"})," and ",(0,s.jsx)(n.a,{href:"https://github.com/nanos-world/nanos-world-sandbox/tree/master/Server/Tools",children:"Server"})," side."]}),"\n",(0,s.jsx)(n.p,{children:"Now it's up to you to to create your own Packages with your own Tools!"})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},84055:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/tool-gun-d5097a656aa7fe68b88c7ca4c2825bb9.webp"}}]);